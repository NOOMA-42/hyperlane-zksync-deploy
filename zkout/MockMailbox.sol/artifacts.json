{
  "contracts": {
    "contracts/Mailbox.sol": {
      "Mailbox": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_localDomain",
                "type": "uint32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "DefaultHookSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "module",
                "type": "address"
              }
            ],
            "name": "DefaultIsmSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "destination",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "recipient",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "Dispatch",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "DispatchId",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "origin",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "sender",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "Process",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "ProcessId",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "RequiredHookSet",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "VERSION",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "defaultHook",
            "outputs": [
              {
                "internalType": "contract IPostDispatchHook",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "defaultIsm",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_id",
                "type": "bytes32"
              }
            ],
            "name": "delivered",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "deployedBlock",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "contract IPostDispatchHook",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "hookMetadata",
                "type": "bytes"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_messageBody",
                "type": "bytes"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_defaultIsm",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_defaultHook",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_requiredHook",
                "type": "address"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "latestDispatchedId",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "localDomain",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "nonce",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "process",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_id",
                "type": "bytes32"
              }
            ],
            "name": "processedAt",
            "outputs": [
              {
                "internalType": "uint48",
                "name": "",
                "type": "uint48"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_id",
                "type": "bytes32"
              }
            ],
            "name": "processor",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "contract IPostDispatchHook",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "defaultHookMetadata",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_recipient",
                "type": "address"
              }
            ],
            "name": "recipientIsm",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "requiredHook",
            "outputs": [
              {
                "internalType": "contract IPostDispatchHook",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_hook",
                "type": "address"
              }
            ],
            "name": "setDefaultHook",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_module",
                "type": "address"
              }
            ],
            "name": "setDefaultIsm",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_hook",
                "type": "address"
              }
            ],
            "name": "setRequiredHook",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_localDomain\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"DefaultHookSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DefaultIsmSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Dispatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"DispatchId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Process\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"ProcessId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"RequiredHookSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultHook\",\"outputs\":[{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIsm\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"delivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"hookMetadata\",\"type\":\"bytes\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_messageBody\",\"type\":\"bytes\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultIsm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_requiredHook\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestDispatchedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"process\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"processedAt\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"processor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"defaultHookMetadata\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recipientIsm\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredHook\",\"outputs\":[{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hook\",\"type\":\"address\"}],\"name\":\"setDefaultHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"setDefaultIsm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hook\",\"type\":\"address\"}],\"name\":\"setRequiredHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultHookSet(address)\":{\"params\":{\"hook\":\"The new default hook\"}},\"DefaultIsmSet(address)\":{\"params\":{\"module\":\"The new default ISM\"}},\"Dispatch(address,uint32,bytes32,bytes)\":{\"params\":{\"destination\":\"The destination domain of the message\",\"message\":\"Raw bytes of message\",\"recipient\":\"The message recipient address on `destination`\",\"sender\":\"The address that dispatched the message\"}},\"DispatchId(bytes32)\":{\"params\":{\"messageId\":\"The unique message identifier\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Process(uint32,bytes32,address)\":{\"params\":{\"origin\":\"The origin domain of the message\",\"recipient\":\"The address that handled the message\",\"sender\":\"The message sender address on `origin`\"}},\"ProcessId(bytes32)\":{\"params\":{\"messageId\":\"The unique message identifier\"}},\"RequiredHookSet(address)\":{\"params\":{\"hook\":\"The new required hook\"}}},\"kind\":\"dev\",\"methods\":{\"delivered(bytes32)\":{\"params\":{\"_id\":\"The message ID to check.\"},\"returns\":{\"_0\":\"True if the message has been delivered.\"}},\"dispatch(uint32,bytes32,bytes)\":{\"params\":{\"_destinationDomain\":\"Domain of destination chain\",\"_messageBody\":\"Raw bytes content of message body\",\"_recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"The message ID inserted into the Mailbox's merkle tree\"}},\"dispatch(uint32,bytes32,bytes,bytes)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"hookMetadata\":\"Metadata used by the post dispatch hook\",\"messageBody\":\"Raw bytes content of message body\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"The message ID inserted into the Mailbox's merkle tree\"}},\"dispatch(uint32,bytes32,bytes,bytes,address)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"hook\":\"Custom hook to use instead of the default\",\"messageBody\":\"Raw bytes content of message body\",\"metadata\":\"Metadata used by the post dispatch hook\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"The message ID inserted into the Mailbox's merkle tree\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"process(bytes,bytes)\":{\"params\":{\"_message\":\"Formatted Hyperlane message (refer to Message.sol).\",\"_metadata\":\"Metadata used by the ISM to verify `_message`.\"}},\"processedAt(bytes32)\":{\"params\":{\"_id\":\"The message ID to check.\"},\"returns\":{\"_0\":\"The number of the block that the message was processed at.\"}},\"processor(bytes32)\":{\"params\":{\"_id\":\"The message ID to check.\"},\"returns\":{\"_0\":\"The account that processed the message.\"}},\"quoteDispatch(uint32,bytes32,bytes)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message body\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"fee\":\"The payment required to dispatch the message\"}},\"quoteDispatch(uint32,bytes32,bytes,bytes)\":{\"params\":{\"defaultHookMetadata\":\"Metadata used by the default post dispatch hook\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message body\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"fee\":\"The payment required to dispatch the message\"}},\"quoteDispatch(uint32,bytes32,bytes,bytes,address)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"hook\":\"Custom hook to use instead of the default\",\"messageBody\":\"Raw bytes content of message body\",\"metadata\":\"Metadata used by the post dispatch hook\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"fee\":\"The payment required to dispatch the message\"}},\"recipientIsm(address)\":{\"params\":{\"_recipient\":\"The message recipient whose ISM should be returned.\"},\"returns\":{\"_0\":\"The ISM to use for `_recipient`.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDefaultHook(address)\":{\"params\":{\"_hook\":\"The new default post dispatch hook. Must be a contract.\"}},\"setDefaultIsm(address)\":{\"params\":{\"_module\":\"The new default ISM. Must be a contract.\"}},\"setRequiredHook(address)\":{\"params\":{\"_hook\":\"The new default post dispatch hook. Must be a contract.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DefaultHookSet(address)\":{\"notice\":\"Emitted when the default hook is updated\"},\"DefaultIsmSet(address)\":{\"notice\":\"Emitted when the default ISM is updated\"},\"Dispatch(address,uint32,bytes32,bytes)\":{\"notice\":\"Emitted when a new message is dispatched via Hyperlane\"},\"DispatchId(bytes32)\":{\"notice\":\"Emitted when a new message is dispatched via Hyperlane\"},\"Process(uint32,bytes32,address)\":{\"notice\":\"Emitted when a Hyperlane message is delivered\"},\"ProcessId(bytes32)\":{\"notice\":\"Emitted when a Hyperlane message is processed\"},\"RequiredHookSet(address)\":{\"notice\":\"Emitted when the required hook is updated\"}},\"kind\":\"user\",\"methods\":{\"delivered(bytes32)\":{\"notice\":\"Returns true if the message has been processed.\"},\"dispatch(uint32,bytes32,bytes)\":{\"notice\":\"Dispatches a message to the destination domain & recipient using the default hook and empty metadata.\"},\"dispatch(uint32,bytes32,bytes,bytes)\":{\"notice\":\"Dispatches a message to the destination domain & recipient.\"},\"dispatch(uint32,bytes32,bytes,bytes,address)\":{\"notice\":\"Dispatches a message to the destination domain & recipient.\"},\"process(bytes,bytes)\":{\"notice\":\"Attempts to deliver `_message` to its recipient. Verifies `_message` via the recipient's ISM using the provided `_metadata`.\"},\"processedAt(bytes32)\":{\"notice\":\"Returns the account that processed the message.\"},\"processor(bytes32)\":{\"notice\":\"Returns the account that processed the message.\"},\"quoteDispatch(uint32,bytes32,bytes)\":{\"notice\":\"Computes quote for dipatching a message to the destination domain & recipient using the default hook and empty metadata.\"},\"quoteDispatch(uint32,bytes32,bytes,bytes)\":{\"notice\":\"Computes quote for dispatching a message to the destination domain & recipient.\"},\"quoteDispatch(uint32,bytes32,bytes,bytes,address)\":{\"notice\":\"Computes quote for dispatching a message to the destination domain & recipient.\"},\"recipientIsm(address)\":{\"notice\":\"Returns the ISM to use for the recipient, defaulting to the default ISM if none is specified.\"},\"setDefaultHook(address)\":{\"notice\":\"Sets the default post dispatch hook for the Mailbox.\"},\"setDefaultIsm(address)\":{\"notice\":\"Sets the default ISM for the Mailbox.\"},\"setRequiredHook(address)\":{\"notice\":\"Sets the required post dispatch hook for the Mailbox.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mailbox.sol\":\"Mailbox\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/Mailbox.sol\":{\"keccak256\":\"0xe6fac628efbda608fe64086b90ce208ddc4429df7db18943f1519b3b7e44643d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://cec7c7c2908caac1a8f6c0849c8254e56c7546e157724e766ec0b9e8cecbac91\",\"dweb:/ipfs/QmbbaRJfUJVftbqEVSK7Zq2txG5x6SVFeVUzTCChQ4rFAo\"]},\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"contracts/interfaces/IMailbox.sol\":{\"keccak256\":\"0x9cd728ba304279775818f8c7b4c02f8c5dd2b28e051ec466dbe36129be01a6ee\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://23461e80c67508d6f0f94a317c48d99a1942209ebc306b50f843b3f1cc920bac\",\"dweb:/ipfs/QmXbJSFtHfxpHwtvGZJBodSDcQHAb6fGsPU17w11dapVnC\"]},\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]},\"contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447\",\"dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ\"]},\"contracts/libs/Indexed.sol\":{\"keccak256\":\"0xd26c31976c35890709b1736fea29598ef9df51929066b79ceca42e155ce9867c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ff131e5531af4b599b92592b74dd9d4da01fb3e7a9ee0d420ea3d4fabf826f7f\",\"dweb:/ipfs/QmR4Q2jeKchTvjze3kYpdWd8rV5csTGoqkw2EHwR5iDYC3\"]},\"contracts/libs/Message.sol\":{\"keccak256\":\"0x5319af5ade07bcb021d6373f0713f24f34431def78cda16fea6755f580fb5e78\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f531eecebd22a535398def83b078aff4f72d88940a0e9474ad3244a555f00d53\",\"dweb:/ipfs/QmQjtjpf4qwaM9QVyWBsogRvZeokKESTVdsX3z9mt1wZFa\"]},\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52\",\"dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ\"]},\"contracts/upgrade/Versioned.sol\":{\"keccak256\":\"0xdef5b9227ee177fe0f50871897b43d8acd1be2d730e6c0e77719f7fd53dc7729\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://caf8bdbb25773c75f4fcfd8939c03ec776e44353ccf046639e1f57c5b9aa9df9\",\"dweb:/ipfs/QmbNDKaKpiPXGrnCZt3GYUCuxMQh5mzXHB7msCUkpC3cP9\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"Mailbox.sol:Mailbox\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[22]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_10\n\tadd\t128, r0, r6\n\tst.1\t64, r6\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_18\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.le\t@.BB0_35\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.le\t@.BB0_64\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_92\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook, @DEFAULT_UNWIND\n\tjump\t@.BB0_131\n.BB0_10:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_14\n\tadd\tr0, r0, r5\n.BB0_13:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t192, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_13\n.BB0_14:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_16\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t192, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_16:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_18\n\tld.1\t192, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_0[0], r1, r1\n\tjump.le\t@.BB0_34\n.BB0_18:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_19:\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.le\t@.BB0_41\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.le\t@.BB0_72\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.gt\t@.BB0_96\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_129\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr2\n\tsub.s!\t132, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_44[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r3\n\tand\t@CPI0_44[0], r3, stack-[13]\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_44[0], r3, r2\n\tjump.gt\t@.BB0_18\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tand\t@CPI0_44[0], r3, stack-[11]\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t@CPI0_44[0], r3, r2\n\tjump.gt\t@.BB0_18\n\tptr.add.s\t100, r1, r1\n\tld\tr1, r2\n\tand\t@CPI0_44[0], r2, stack-[9]\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t@CPI0_44[0], r2, r1\n\tjump.gt\t@.BB0_18\n\tcontext.sp\tr3\n\tsub.s\t17, r3, r3\n\tshl.s\t5, r3, r3\n\tsload\tr0, r2\n\tand!\t65280, r2, stack-[7]\n\tjump.ne\t@.BB0_199\n\tcontext.sp\tr3\n\tsub.s\t16, r3, r3\n\tshl.s\t5, r3, r3\n\tand!\t255, r2, r1\n\tjump.ne\t@.BB0_199\n.BB0_32:\n\tand\t@CPI0_60[0], r2, r1\n\tor\t257, r1, r1\n\tadd\tr0, r0, stack-[8]\n\tsstore\tr0, r1\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_204\n.BB0_33:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_73[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_74[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t43, r0, r3\n\tjump\t@.BB0_225\n.BB0_34:\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t22, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_2[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\t160, r2\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t384, r1\n\tst.2\t416, r2\n\tst.2\t256, r1\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_35:\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.gt\t@.BB0_82\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_155\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.eq\t@.BB0_178\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t102, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_41:\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.gt\t@.BB0_86\n\tsub.s!\t@CPI0_19[0], r2, r4\n\tjump.eq\t@.BB0_158\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_182\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r4\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_18\n\tadd\t4, r2, stack-[12]\n\tptr.add.s\tstack-[12], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[13], r2, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_18\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t101, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tst.1\t160, r2\n\tshl.s\t224, r1, r1\n\tst.1\t161, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tand\t@CPI0_44[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tadd\tr3, r0, stack-[11]\n\tld\tr1, r1\n\tshl.s\t224, r1, r1\n\tst.1\t165, r1\n\tcontext.caller\tr1\n\tst.1\t169, r1\n\tadd\tstack-[15], r0, r1\n\tshl.s\t224, r1, r1\n\tst.1\t201, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t205, r1\n\tadd\tstack-[13], r0, r3\n\tand\t31, r3, r1\n\tadd\tstack-[12], r0, r2\n\tadd\t32, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_56\n\tadd\tr0, r0, r4\n.BB0_55:\n\tshl.s\t5, r4, r5\n\tptr.add\tr2, r5, r6\n\tld\tr6, r6\n\tadd\t237, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_55\n.BB0_56:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_58\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tshl.s\t3, r1, r1\n\tadd\t237, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_58:\n\tadd\tstack-[13], r0, r2\n\tadd\t237, r2, r1\n\tst.1\tr1, r0\n\tadd\t77, r2, r1\n\tst.1\t128, r1\n\tadd\t140, r2, r1\n\tsub.s\t32, r0, stack-[14]\n\tand\tstack-[14], r1, r2\n\tsub.s!\t@CPI0_45[0], r2, r1\n\tjump.gt\t@.BB0_147\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t105, r0, r1\n\tsload\tr1, r4\n\tadd\t@CPI0_51[0], r0, r1\n\tadd\tr3, r0, stack-[15]\n\tst.1\tr3, r1\n\tadd\t132, r2, r1\n\tadd\t64, r0, r3\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr1, r3\n\tadd\t164, r2, r1\n\tadd\t96, r0, r3\n\tadd\tr3, r0, stack-[10]\n\tst.1\tr1, r3\n\tadd\t196, r2, r1\n\tst.1\tr1, r0\n\tadd\t228, r2, r3\n\tst.1\tr3, r0\n\tld.1\t128, r1\n\tst.1\tr3, r1\n\tadd\t260, r2, r3\n\tand\t@CPI0_44[0], r4, r2\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_62\n\tadd\tr0, r0, r4\n.BB0_61:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_61\n.BB0_62:\n\tadd\tr1, r3, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_227\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_233\n.BB0_64:\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_148\n\tsub.s!\t@CPI0_30[0], r2, r1\n\tjump.eq\t@.BB0_170\n\tsub.s!\t@CPI0_31[0], r2, r1\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t51, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_44[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_194\n\tand\t@CPI0_61[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_70:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n.BB0_71:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_72:\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_151\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_172\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\t51, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_194\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_196\n.BB0_81:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_75[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_76[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tjump\t@.BB0_225\n.BB0_82:\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.eq\t@.BB0_160\n\tsub.s!\t@CPI0_34[0], r2, r1\n\tjump.eq\t@.BB0_189\n\tsub.s!\t@CPI0_35[0], r2, r1\n\tjump.ne\t@.BB0_18\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t104, r0, r7\n\tsload\tr7, r7\n\tand\t@CPI0_44[0], r7, r7\n\tjump\t@.BB0_179\n.BB0_86:\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.eq\t@.BB0_167\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_191\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_delivered, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_180\n.BB0_92:\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.eq\t@.BB0_132\n\tsub.s!\t@CPI0_26[0], r2, r1\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[19]\n\tadd\t32, r0, stack-[18]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t19, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_42[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tjump\t@.BB0_169\n.BB0_96:\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_134\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.ne\t@.BB0_18\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t3, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_18\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_18\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[15]\n\tsub.s!\t@CPI0_40[0], r4, r4\n\tjump.gt\t@.BB0_18\n\tadd\t36, r2, r4\n\tadd\tr4, r0, stack-[14]\n\tadd\tstack-[15], r4, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_18\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_18\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[13]\n\tsub.s!\t@CPI0_40[0], r5, r5\n\tjump.gt\t@.BB0_18\n\tsub!\tstack-[13], r0, r5\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[13], r2, r2\n\tadd\t36, r2, stack-[12]\n\tsub!\tstack-[12], r3, r2\n\tjump.gt\t@.BB0_18\n\tadd\tr6, r0, stack-[10]\n\tadd\t32, r4, stack-[11]\n\tptr.add.s\tstack-[11], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_82[0], r1, r1\n\tsub.s!\t@CPI0_41[0], r1, r1\n\tjump.ne\t@.BB0_226\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t45, r1, r1\n\tjump.lt\t@.BB0_18\n\tadd\t@CPI0_42[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld.1\t64, r2\n\tadd\tstack-[11], r0, r3\n\tadd\t41, r3, r4\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r4, r4\n\tld\tr4, r4\n\tshr.s\t224, r4, r4\n\tld\tr1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_271\n\tadd\tstack-[13], r0, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t63, r1, r1\n\tadd\tr4, r0, stack-[8]\n\tand\tr1, r4, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_40[0], r1, r5\n\tjump.gt\t@.BB0_147\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_147\n\tst.1\t64, r1\n\tadd\tstack-[13], r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack-[12], r0, r5\n\tsub.s!\tstack[@calldatasize], r5, r4\n\tjump.gt\t@.BB0_18\n\tptr.add.s\tstack-[11], r3, r3\n\tadd\tstack-[13], r0, r4\n\tand\t31, r4, stack-[12]\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB0_120\n\tadd\tr0, r0, r4\n.BB0_119:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB0_119\n.BB0_120:\n\tadd\tr7, r0, stack-[6]\n\tsub!\tstack-[12], r0, r4\n\tjump.eq\t@.BB0_122\n\tadd\tstack-[6], r0, r4\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tadd\tstack-[12], r0, r5\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB0_122:\n\tadd\tstack-[13], r1, r3\n\tst.1\tr3, r0\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_18\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_18\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_87[0], r1, r1\n\tjump.ne\t@.BB0_299\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t77, r1, r1\n\tjump.lt\t@.BB0_18\n\tadd\tstack-[11], r0, r1\n\tadd\t45, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tld.1\t64, r3\n\tadd\t4, r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t@CPI0_89[0], r0, r4\n\tst.1\tr1, r4\n\tand\t@CPI0_44[0], r2, r2\n\tsub.s!\t@CPI0_90[0], r3, r4\n\tjump.gt\t@.BB0_147\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_317\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_318\n.BB0_129:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t104, r0, r7\n\tsload\tr7, r7\n\tand\t@CPI0_44[0], r7, r7\n.BB0_131:\n\tnear_call\tr0, @fun_quoteDispatch, @DEFAULT_UNWIND\n\tjump\t@.BB0_180\n.BB0_132:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[21]\n\tadd\t0, r0, stack-[20]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t21, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_42[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_134:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_18\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_18\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[14]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_18\n\tadd\t4, r2, stack-[12]\n\tptr.add.s\tstack-[12], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\tstack-[13], r2, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_18\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t101, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tsload\tr1, r1\n\tadd\t@CPI0_41[0], r0, r2\n\tst.1\t160, r2\n\tshl.s\t224, r1, r1\n\tst.1\t161, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r3\n\tand\t@CPI0_44[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tadd\tr3, r0, stack-[8]\n\tld\tr1, r1\n\tshl.s\t224, r1, r1\n\tst.1\t165, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t169, r1\n\tadd\tstack-[15], r0, r1\n\tshl.s\t224, r1, r1\n\tst.1\t201, r1\n\tadd\tstack-[14], r0, r1\n\tst.1\t205, r1\n\tadd\tstack-[13], r0, r3\n\tand\t31, r3, r1\n\tadd\tstack-[12], r0, r2\n\tadd\t32, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_144\n\tadd\tr0, r0, r4\n.BB0_143:\n\tshl.s\t5, r4, r5\n\tptr.add\tr2, r5, r6\n\tld\tr6, r6\n\tadd\t237, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_143\n.BB0_144:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_146\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tshl.s\t3, r1, r1\n\tadd\t237, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_146:\n\tadd\tstack-[13], r0, r3\n\tadd\t237, r3, r1\n\tst.1\tr1, r0\n\tadd\t140, r3, r1\n\tsub.s\t32, r0, stack-[12]\n\tand\tstack-[12], r1, r2\n\tadd\t77, r3, r1\n\tst.1\t128, r1\n\tsub.s!\t@CPI0_45[0], r2, r3\n\tjump.le\t@.BB0_220\n.BB0_147:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_148:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_193\n.BB0_151:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tnear_call\tr0, @fun_recipientIsm, @DEFAULT_UNWIND\n\tjump\t@.BB0_180\n.BB0_155:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tshr.s\t160, r1, r1\n\tand\t@CPI0_93[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_158:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t51, r0, r1\n\tjump\t@.BB0_193\n.BB0_160:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\t51, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_194\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_197\n.BB0_166:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_101[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_102[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB0_225\n.BB0_167:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t101, r0, r1\n\tsload\tr1, r1\n.BB0_169:\n\tand\t@CPI0_0[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_170:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t103, r0, r1\n\tjump\t@.BB0_193\n.BB0_172:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_44[0], r1, r2\n\tjump.gt\t@.BB0_18\n\tadd\t51, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_44[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_194\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_195\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_72[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_71[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_77[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_178:\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook, @DEFAULT_UNWIND\n.BB0_179:\n\tnear_call\tr0, @fun_dispatch, @DEFAULT_UNWIND\n.BB0_180:\n\tld.1\t64, r2\n.BB0_181:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_55[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_182:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_18\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tadd\t51, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_194\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_198\n.BB0_188:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_80[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_81[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tjump\t@.BB0_225\n.BB0_189:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t104, r0, r1\n\tjump\t@.BB0_193\n.BB0_191:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_18\n\tadd\t105, r0, r1\n.BB0_193:\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_194:\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_84[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_195:\n\tnear_call\tr0, @fun_transferOwnership, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_196:\n\tadd\t103, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_61[0], r2, r2\n\tadd\tstack-[15], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_63[0], r0, r4\n\tjump\t@.BB0_70\n.BB0_197:\n\tadd\t105, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_61[0], r2, r2\n\tadd\tstack-[15], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_65[0], r0, r4\n\tjump\t@.BB0_70\n.BB0_198:\n\tadd\t104, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_61[0], r2, r2\n\tadd\tstack-[15], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_64[0], r0, r4\n\tjump\t@.BB0_70\n.BB0_199:\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[6]\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_223\n\tadd\tstack-[6], r0, r1\n\tand\t255, r1, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tstack-[8], r0, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r0, stack[r2]\n\tjump.ne\t@.BB0_224\n\tsub!\tstack-[7], r0, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB0_32\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tadd\t1, r0, stack-[8]\n\tor\t1, r1, r1\n\tsstore\tr0, r1\n\tand!\t65280, r1, r1\n\tjump.eq\t@.BB0_33\n.BB0_204:\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[7]\n\tand\t@CPI0_44[0], r1, r6\n\tadd\t51, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_61[0], r2, r1\n\tor\tr1, r6, r1\n\tadd\tr3, r0, stack-[6]\n\tsstore\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_48[0], r1, r1\n\tand\t@CPI0_44[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tsub.s!\tstack-[7], r1, r1\n\tjump.ne\t@.BB0_268\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_81\n\tadd\t103, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_61[0], r2, r2\n\tadd\tstack-[13], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_63[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tsub.s!\tstack-[7], r1, r1\n\tjump.ne\t@.BB0_268\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_188\n\tadd\t104, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_61[0], r2, r2\n\tadd\tstack-[11], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_64[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r1\n\tsub.s!\tstack-[7], r1, r1\n\tjump.ne\t@.BB0_268\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_166\n\tadd\t105, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_61[0], r2, r2\n\tadd\tstack-[9], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_65[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, r2\n\tsub.s!\tstack-[7], r2, r2\n\tjump.ne\t@.BB0_268\n\tsub!\tstack-[15], r0, r2\n\tjump.ne\t@.BB0_361\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_71[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_72[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tjump\t@.BB0_225\n.BB0_220:\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_18\n\tld\tr1, r2\n\tadd\t102, r0, r1\n\tadd\tr2, r0, stack-[13]\n\tsstore\tr1, r2\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_0[0], r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.ne\t@.BB0_251\n.BB0_222:\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_223:\n\tadd\tstack-[8], r0, r1\n\tshr.s\t5, r1, r1\n\tadd\t0, r0, stack[r1]\n.BB0_224:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_56[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_57[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n.BB0_225:\n\tst.1\tr2, r3\n\tadd\t@CPI0_58[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_59[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_226:\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t20, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_83[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_84[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_227:\n\tadd\t31, r1, r1\n\tand\tstack-[14], r1, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tstack-[15], r0, r6\n\tsub.s!\t@CPI0_0[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_230\n\tadd\tr0, r0, r7\n.BB0_229:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_229\n.BB0_230:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_232\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_232:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_261\n.BB0_233:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[15], r1, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[13]\n\tsub.s!\t@CPI0_40[0], r4, r4\n\tjump.gt\t@.BB0_147\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_147\n\tadd\tstack-[13], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_18\n\tadd\tstack-[15], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\t@CPI0_51[0], r0, r2\n\tadd\tstack-[13], r0, r5\n\tst.1\tr5, r2\n\tor\t4, r5, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t36, r5, r2\n\tadd\tstack-[10], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r5, r2\n\tst.1\tr2, r0\n\tadd\t100, r5, r4\n\tst.1\tr4, r0\n\tld.1\t128, r2\n\tst.1\tr4, r2\n\tadd\t132, r5, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_239\n\tadd\tr0, r0, r5\n.BB0_238:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_238\n.BB0_239:\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n\tcontext.gas_left\tr4\n\tadd\tstack-[11], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_247\n\tadd\t31, r2, r1\n\tand\tstack-[14], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[11], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_243\n\tadd\tr0, r0, r7\n.BB0_242:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_242\n.BB0_243:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_245\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_245:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_272\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_247:\n\tadd\tstack-[13], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.gt\t@.BB0_147\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_147\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_18\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[15], r3, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t1, r3, r3\n\tjump.ne\t@.BB0_181\n\tjump\t@.BB0_222\n.BB0_251:\n\tand\t@CPI0_47[0], r1, r2\n\tadd\t1, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[10], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[9], r0, r2\n\tst.1.inc\tr1, r2, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_254\n\tadd\tr0, r0, r4\n.BB0_253:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_253\n.BB0_254:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[12], r2, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_49[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[15], r0, r6\n\tadd\tstack-[14], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[15]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_50[0], r0, r4\n\tadd\tstack-[13], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tadd\t105, r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[15], r0, r4\n\tadd\t36, r4, r1\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr1, r2\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tst.1\tr1, r0\n\tadd\t100, r4, r2\n\tst.1\tr2, r0\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t132, r4, r2\n\tand\t@CPI0_44[0], r3, stack-[14]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_259\n\tadd\tr0, r0, r3\n.BB0_258:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_258\n.BB0_259:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_277\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_283\n.BB0_261:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_264\n\tadd\tr0, r0, r6\n.BB0_263:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_263\n.BB0_264:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_267\n.BB0_266:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_267:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_268:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_66[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_58[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n.BB0_269:\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n.BB0_270:\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_271:\n\tadd\t68, r2, r1\n\tadd\t@CPI0_85[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t31, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_67[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_272:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_275\n\tadd\tr0, r0, r6\n.BB0_274:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_274\n.BB0_275:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_267\n\tjump\t@.BB0_266\n.BB0_277:\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[15], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_280\n\tadd\tr0, r0, r7\n.BB0_279:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_279\n.BB0_280:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_282\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_282:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_294\n.BB0_283:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[15], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_40[0], r1, r4\n\tjump.gt\t@.BB0_147\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_147\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_18\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tcontext.get_context_u128\tr4\n\tsub.s!\tstack-[15], r4, r3\n\tadd\tr4, r0, stack-[7]\n\tadd\tstack-[15], r0, r3\n\tadd.lt\tr4, r0, r3\n\tadd\tr3, r0, stack-[9]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_18\n\tld.1\t64, r3\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tst.1\tr1, r0\n\tadd\t100, r3, r2\n\tst.1\tr2, r0\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[6]\n\tadd\t132, r3, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_291\n\tadd\tr0, r0, r3\n.BB0_290:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_290\n.BB0_291:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_303\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[6], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tsub!\tstack-[9], r0, r2\n\tjump.ne\t@.BB0_300\n\tadd\tstack-[14], r0, r2\n\tjump\t@.BB0_301\n.BB0_294:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_297\n\tadd\tr0, r0, r6\n.BB0_296:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_296\n.BB0_297:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_267\n\tjump\t@.BB0_266\n.BB0_299:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_88[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_58[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[9], r0, r3\n\tjump\t@.BB0_270\n.BB0_300:\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr0, r0, r5\n.BB0_301:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_312\n.BB0_303:\n\tadd\tstack-[6], r0, r1\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_147\n\tadd\tstack-[6], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_52[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[8], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_18\n\tld.1\t64, r3\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tst.1\tr1, r0\n\tadd\t100, r3, r2\n\tst.1\tr2, r0\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t132, r3, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_309\n\tadd\tr0, r0, r3\n.BB0_308:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_308\n.BB0_309:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[8], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_354\n\tadd\t31, r1, r1\n\tand\tstack-[12], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[7], r0, r3\n\tsub.s!\tstack-[15], r3, r2\n\tjump.le\t@.BB0_351\n\tadd\tstack-[9], r0, r3\n\tsub\tstack-[7], r3, r3\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[8], r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_352\n.BB0_312:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_315\n\tadd\tr0, r0, r6\n.BB0_314:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_314\n.BB0_315:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_267\n\tjump\t@.BB0_266\n.BB0_317:\n\tadd\t@CPI0_0[0], r0, r5\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_318:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_340\n\tadd\t96, r0, r1\n.BB0_320:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_322\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_348\n.BB0_322:\n\tadd\t103, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_44[0], r1, stack-[2]\n.BB0_323:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_90[0], r1, r1\n\tjump.gt\t@.BB0_147\n\tadd\tstack-[10], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tcontext.caller\tr1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI0_2[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_92[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tand\t@CPI0_93[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_44[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI0_94[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tstack-[1], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t160, r3, r3\n\tand\t@CPI0_87[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r3\n\tsub.s\t40, r3, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tsub.s\t36, r3, r4\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr4, r0, stack-[4]\n\tptr.add\tstack[@ptr_calldata], r4, r2\n\tld\tr2, r6\n\tld\tr3, r2\n\tld\tr1, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[10]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshr.s\t224, r1, r5\n\tand\t@CPI0_44[0], r2, r7\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_95[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_96[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tadd\t@CPI0_97[0], r0, r1\n\tadd\tstack-[10], r0, r4\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tadd\tstack-[15], r0, r5\n\tst.1\tr1, r5\n\tand\t31, r5, r3\n\tadd\t100, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\tstack-[14], r1, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_331\n\tadd\tr0, r0, r6\n.BB0_330:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_330\n.BB0_331:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_333\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_333:\n\tadd\tstack-[15], r0, r4\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tand\tstack-[8], r3, r3\n\tadd\tstack-[10], r0, r4\n\tadd\t36, r4, r4\n\tadd\t96, r3, r5\n\tst.1\tr4, r5\n\tadd\tr2, r3, r2\n\tadd\tstack-[13], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tptr.add.s\tstack-[11], r1, r1\n\tadd\tstack-[6], r0, r6\n\tsub!\tr6, r0, r3\n\tjump.eq\t@.BB0_336\n\tadd\tr0, r0, r3\n.BB0_335:\n\tshl.s\t5, r3, r4\n\tadd\tr2, r4, r5\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_335\n.BB0_336:\n\tsub!\tstack-[12], r0, r3\n\tjump.eq\t@.BB0_338\n\tadd\tstack-[6], r0, r3\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tadd\tstack-[12], r0, r4\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_338:\n\tadd\tstack-[13], r2, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_364\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_370\n.BB0_340:\n\tsub.s!\t@CPI0_40[0], r3, r1\n\tjump.gt\t@.BB0_147\n\tadd\t31, r3, r1\n\tand\tstack-[8], r1, r1\n\tadd\t63, r1, r1\n\tand\tstack-[8], r1, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_40[0], r4, r6\n\tjump.gt\t@.BB0_147\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_147\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r9\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_346\n\tadd\tr0, r0, r6\n.BB0_345:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_345\n.BB0_346:\n\tadd\tr9, r0, stack-[10]\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_320\n\tshl.s\t5, r3, r3\n\tptr.add\tr5, r3, r5\n\tadd\tstack-[10], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_320\n.BB0_348:\n\tadd\t@CPI0_91[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_91[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_91[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tadd\tstack-[10], r0, r1\n\tjump.ne\t@.BB0_18\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tsub.s!\t@CPI0_44[0], r1, r1\n\tjump.gt\t@.BB0_18\n\tsub!\tstack-[2], r0, r1\n\tjump.eq\t@.BB0_322\n\tjump\t@.BB0_323\n.BB0_351:\n\tadd\tstack-[8], r0, r2\n.BB0_352:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_356\n.BB0_354:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_147\n\tadd\tstack-[14], r0, r3\n\tst.1\t64, r3\n\tadd\tstack-[13], r0, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_55[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_356:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_359\n\tadd\tr0, r0, r6\n.BB0_358:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_358\n.BB0_359:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_267\n\tjump\t@.BB0_266\n.BB0_361:\n\tand\t@CPI0_61[0], r1, r1\n\tadd\tstack-[15], r0, r6\n\tor\tr1, r6, r1\n\tadd\tstack-[6], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_18\n\tsub!\tstack-[8], r0, r1\n\tjump.ne\t@.BB0_71\n\tsload\tr0, r2\n\tand\t@CPI0_68[0], r2, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r3\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_69[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_70[0], r0, r4\n\tjump\t@.BB0_70\n.BB0_364:\n\tadd\tstack-[10], r0, r5\n\tsub\tstack-[7], r5, r3\n\tadd\tr3, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[2], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_367\n\tadd\tr0, r0, r7\n.BB0_366:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_366\n.BB0_367:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_369\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_369:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_376\n.BB0_370:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[10], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_40[0], r1, r4\n\tjump.gt\t@.BB0_147\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_147\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_18\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_18\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_380\n\tadd\t68, r1, r2\n\tadd\t@CPI0_100[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_58[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\tstack-[9], r0, r3\n\tjump\t@.BB0_269\n.BB0_376:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_379\n\tadd\tr0, r0, r6\n.BB0_378:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_378\n.BB0_379:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_266\n\tjump\t@.BB0_267\n.BB0_380:\n\tadd\tstack-[3], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tstack-[11], r0, r3\n\tadd\t5, r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tstack-[4], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tld\tr3, r1\n\tadd\tr1, r0, stack-[14]\n\tld\tr2, r1\n\tadd\t@CPI0_52[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_44[0], r1, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_390\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_18\n\tadd\tstack-[14], r0, r1\n\tshr.s\t224, r1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tadd\tstack-[15], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_98[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tsub.s\t77, r1, r1\n\tadd\t100, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[15]\n\tadd\t132, r4, r2\n\tand\t31, r1, r4\n\tadd\tstack-[3], r0, r3\n\tadd\t32, r3, r5\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r5, r5\n\tshr.s!\t5, r1, r6\n\tjump.eq\t@.BB0_385\n\tadd\tr0, r0, r7\n.BB0_384:\n\tshl.s\t5, r7, r8\n\tadd\tr2, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_384\n.BB0_385:\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_387\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr2, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_387:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tptr.add.s\tstack-[3], r3, r1\n\tcontext.get_context_u128\tr3\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_44[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_394\n\tadd\tstack-[13], r0, r2\n\tsub.s\t46, r2, r2\n\tand\tstack-[8], r2, r2\n\tadd\t@CPI0_99[0], r0, r5\n\tsub.s!\t@CPI0_99[0], r2, r6\n\tadd.ge\tr5, r0, r2\n\tadd\t@CPI0_0[0], r0, r5\n\tadd\tstack-[15], r0, r7\n\tsub.s!\t@CPI0_0[0], r7, r6\n\tadd\tr5, r0, r6\n\tadd.lt\tr7, r0, r6\n\tshl.s\t64, r6, r6\n\tshl.s\t96, r2, r2\n\tor\tr2, r6, r2\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_59[0], r1, r1\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_391\n\tadd\tr4, r0, r2\n\tjump\t@.BB0_392\n.BB0_390:\n\trevert\n.BB0_391:\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n.BB0_392:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_396\n.BB0_394:\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.gt\t@.BB0_147\n\tadd\tstack-[15], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_396:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_399\n\tadd\tr0, r0, r6\n.BB0_398:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_398\n.BB0_399:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_267\n\tjump\t@.BB0_266\n.func_end0:\n\nabi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t163, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_0[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI1_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add.s\t4, r7, r2\n\tld\tr2, r8\n\tsub.s!\t@CPI1_1[0], r8, r2\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t36, r7, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tadd\t35, r3, r4\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB1_1\n\tadd\t4, r3, r4\n\tptr.add\tr7, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI1_2[0], r4, r5\n\tjump.gt\t@.BB1_1\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t100, r7, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI1_2[0], r5, r6\n\tjump.gt\t@.BB1_1\n\tadd\t35, r5, r6\n\tsub!\tr6, r1, r6\n\tjump.ge\t@.BB1_1\n\tadd\t4, r5, r6\n\tptr.add\tr7, r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI1_2[0], r6, r9\n\tjump.gt\t@.BB1_1\n\tadd\t36, r5, r5\n\tadd\tr6, r5, r9\n\tsub!\tr9, r1, r1\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t132, r7, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI1_3[0], r7, r1\n\tjump.gt\t@.BB1_1\n\tadd\tr8, r0, r1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t131, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t4, r5, r2\n\tld\tr2, r7\n\tsub.s!\t@CPI2_1[0], r7, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r5, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_2[0], r3, r4\n\tjump.gt\t@.BB2_1\n\tadd\t35, r3, r4\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB2_1\n\tadd\t4, r3, r4\n\tptr.add\tr5, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_2[0], r4, r6\n\tjump.gt\t@.BB2_1\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r6\n\tsub!\tr6, r1, r6\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t100, r5, r6\n\tld\tr6, r8\n\tsub.s!\t@CPI2_2[0], r8, r6\n\tjump.gt\t@.BB2_1\n\tadd\t35, r8, r6\n\tsub!\tr6, r1, r6\n\tjump.ge\t@.BB2_1\n\tadd\t4, r8, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI2_2[0], r6, r5\n\tjump.gt\t@.BB2_1\n\tadd\t36, r8, r5\n\tadd\tr6, r5, r8\n\tsub!\tr8, r1, r1\n\tjump.gt\t@.BB2_1\n\tadd\tr7, r0, r1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_dispatch:\n.func_begin3:\n\tnop\tstack+=[18]\n\tadd\tr6, r0, stack-[17]\n\tadd\tr5, r0, stack-[14]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr3, r0, stack-[10]\n\tadd\tr2, r0, stack-[13]\n\tadd\tr1, r0, stack-[11]\n\tand!\t@CPI3_0[0], r7, stack-[12]\n\tjump.ne\t@.BB3_2\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI3_0[0], r1, stack-[12]\n.BB3_2:\n\tadd\t101, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tadd\tr3, r0, stack-[16]\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\tr4, r0, stack-[18]\n\tadd\t33, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[8]\n\tst.2\t36, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_73\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tshl.s\t224, r2, r2\n\tadd\tstack-[18], r0, r4\n\tadd\t73, r4, r3\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\t37, r4, r2\n\tst.1\tr2, r1\n\tadd\t77, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t41, r4, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr1, r2\n\tadd\tstack-[15], r0, r8\n\tand\t31, r8, r2\n\tadd\t109, r4, r1\n\tadd\tstack-[10], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r8, r4\n\tjump.eq\t@.BB3_6\n\tadd\tr0, r0, r5\n.BB3_5:\n\tshl.s\t5, r5, r6\n\tadd\tr1, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB3_5\n.BB3_6:\n\tsub!\tr2, r0, r5\n\tadd\tstack-[16], r0, r6\n\tjump.eq\t@.BB3_8\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB3_8:\n\tadd\tr1, r8, r1\n\tst.1\tr1, r0\n\tadd\t77, r8, r1\n\tadd\tstack-[18], r0, r2\n\tst.1\tr2, r1\n\tadd\t140, r8, r1\n\tsub.s\t32, r0, stack-[15]\n\tand\tstack-[15], r1, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_5[0], r1, r3\n\tjump.gt\t@.BB3_72\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_72\n\tst.1\t64, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tsub.s!\t@CPI3_3[0], r6, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr6, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\tstack-[18], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI3_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_71\n\tld\tr1, r2\n\tadd\t102, r0, r1\n\tadd\tr2, r0, stack-[10]\n\tsstore\tr1, r2\n\tadd\tstack-[9], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI3_3[0], r1, r2\n\tsub.s!\t@CPI3_3[0], r2, r2\n\tjump.eq\t@.BB3_74\n\tand\t@CPI3_7[0], r1, r2\n\tadd\t1, r1, r1\n\tand\t@CPI3_3[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[8], r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\tstack-[18], r0, r2\n\tld.1\tr2, r2\n\tst.1\tr3, r2\n\tadd\tstack-[11], r0, r3\n\tand\t@CPI3_3[0], r3, r6\n\tadd\t64, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB3_15\n\tadd\tr0, r0, r4\n.BB3_14:\n\tadd\tr4, r3, r5\n\tadd\tr4, r8, r7\n\tld.1\tr7, r7\n\tst.1\tr5, r7\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB3_14\n.BB3_15:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[15], r2, r2\n\tadd\t@CPI3_3[0], r0, r4\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t64, r2, r2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI3_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI3_8[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[13], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_71\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_3[0], r1, r2\n\tadd.ge\t@CPI3_3[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI3_9[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r11\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_71\n\tadd\t105, r0, r1\n\tsload\tr1, r3\n\tadd\t@CPI3_10[0], r0, r1\n\tst.1\tr11, r1\n\tadd\t68, r11, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr1, r4\n\tadd\t4, r11, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\tr1, r2\n\tand\t31, r4, stack-[13]\n\tadd\t100, r11, r2\n\tand\t@CPI3_0[0], r3, r10\n\tadd\tstack-[14], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r8\n\tjump.eq\t@.BB3_20\n\tadd\tr0, r0, r4\n.BB3_19:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r8, r5\n\tjump.lt\t@.BB3_19\n.BB3_20:\n\tadd\tstack-[13], r0, r5\n\tsub!\tr5, r0, r4\n\tshl.s\t5, r8, r9\n\tshl.s\t3, r5, r6\n\tadd\tstack-[16], r0, r7\n\tadd\tr6, r0, stack-[6]\n\tadd\tr9, r0, stack-[11]\n\tjump.eq\t@.BB3_22\n\tptr.add\tr3, r9, r3\n\tadd\tr2, r9, r4\n\tld.1\tr4, r5\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr3, r3\n\tadd\tstack-[6], r0, r6\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r5, r3\n\tst.1\tr4, r3\n.BB3_22:\n\tadd\tstack-[17], r0, r4\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tand\tstack-[15], r3, stack-[7]\n\tadd\tstack-[7], r2, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r11, r2\n\tst.1\tr2, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB3_25\n\tadd\tr0, r0, r3\n.BB3_24:\n\tadd\tr3, r1, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_24\n.BB3_25:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r10, r4\n\tadd\tr8, r0, stack-[9]\n\tadd\tr10, r0, stack-[4]\n\tjump.ne\t@.BB3_27\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB3_33\n.BB3_27:\n\tadd\t31, r2, r2\n\tand\tstack-[15], r2, r2\n\tsub\tr2, r11, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r11, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr11, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI3_3[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB3_30\n\tadd\tr0, r0, r7\n.BB3_29:\n\tshl.s\t5, r7, r8\n\tadd\tr11, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB3_29\n.BB3_30:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB3_32\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr11, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB3_32:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[4], r0, r10\n\tjump.eq\t@.BB3_75\n.BB3_33:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r11, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_5[0], r1, r4\n\tjump.gt\t@.BB3_72\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_72\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB3_71\n\tld.1\tr11, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\t@CPI3_11[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tcontext.get_context_u128\tr4\n\tsub.s!\tstack-[5], r4, r3\n\tadd\tr4, r0, stack-[2]\n\tadd\tstack-[5], r0, r3\n\tadd.lt\tr4, r0, r3\n\tadd\tr3, r0, stack-[3]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_73\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[9], r0, r7\n\tadd\tstack-[11], r0, r8\n\tadd\tstack-[4], r0, r9\n\tjump.eq\t@.BB3_71\n\tld.1\t64, r10\n\tadd\t68, r10, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_13[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r10, r2\n\tadd\tstack-[14], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tsub!\tr7, r0, r4\n\tjump.eq\t@.BB3_41\n\tadd\tr0, r0, r4\n.BB3_40:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB3_40\n.BB3_41:\n\tsub!\tstack-[13], r0, r4\n\tadd\tstack-[16], r0, r7\n\tjump.eq\t@.BB3_43\n\tptr.add\tr3, r8, r3\n\tadd\tr2, r8, r4\n\tld.1\tr4, r5\n\tadd\tstack-[6], r0, r6\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr3, r3\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r5, r3\n\tst.1\tr4, r3\n.BB3_43:\n\tadd\tstack-[17], r2, r3\n\tst.1\tr3, r0\n\tadd\tstack-[7], r2, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB3_46\n\tadd\tr0, r0, r3\n.BB3_45:\n\tadd\tr3, r1, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_45\n.BB3_46:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r9, r4\n\tjump.eq\t@.BB3_52\n\tadd\t31, r2, r2\n\tand\tstack-[15], r2, r2\n\tsub\tr2, r10, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r10, r4\n\tadd\tr10, r0, stack-[1]\n\tadd\tr2, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI3_3[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[3], r0, r3\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB3_49\n\tor\t@CPI3_6[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr9, r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB3_50\n.BB3_49:\n\tadd\tr9, r0, r2\n.BB3_50:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_3[0], r3, stack[@returndatasize]\n\tand\t@CPI3_3[0], r3, r3\n\tand!\t1, r2, r2\n\tadd\tstack-[1], r0, r10\n\tjump.eq\t@.BB3_79\n.BB3_52:\n\tsub.s!\t@CPI3_5[0], r10, r1\n\tjump.gt\t@.BB3_72\n\tst.1\t64, r10\n\tadd\t@CPI3_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI3_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_73\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[9], r0, r7\n\tadd\tstack-[11], r0, r8\n\tjump.eq\t@.BB3_71\n\tld.1\t64, r9\n\tadd\t68, r9, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI3_13[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r9, r2\n\tadd\tstack-[14], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tsub!\tr7, r0, r4\n\tjump.eq\t@.BB3_58\n\tadd\tr0, r0, r4\n.BB3_57:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB3_57\n.BB3_58:\n\tsub!\tstack-[13], r0, r4\n\tadd\tstack-[16], r0, r7\n\tjump.eq\t@.BB3_60\n\tptr.add\tr3, r8, r3\n\tadd\tr2, r8, r4\n\tld.1\tr4, r5\n\tadd\tstack-[6], r0, r6\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr3, r3\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r5, r3\n\tst.1\tr4, r3\n.BB3_60:\n\tadd\tstack-[17], r2, r3\n\tst.1\tr3, r0\n\tadd\tstack-[7], r2, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB3_63\n\tadd\tr0, r0, r3\n.BB3_62:\n\tadd\tr3, r1, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB3_62\n.BB3_63:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB3_69\n\tadd\t31, r2, r2\n\tand\tstack-[15], r2, r2\n\tsub\tr2, r9, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r9, r4\n\tadd\tr9, r0, stack-[18]\n\tadd\tr2, r0, r4\n\tadd.lt\tr9, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI3_3[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI3_3[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[2], r0, r3\n\tsub.s!\tstack-[5], r3, r2\n\tjump.le\t@.BB3_66\n\tsub.s\tstack-[3], r3, r3\n\tor\t@CPI3_6[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[12], r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB3_67\n.BB3_66:\n\tadd\tstack-[12], r0, r2\n.BB3_67:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI3_3[0], r3, stack[@returndatasize]\n\tand\t@CPI3_3[0], r3, r3\n\tand!\t1, r2, r2\n\tadd\tstack-[18], r0, r9\n\tjump.eq\t@.BB3_84\n.BB3_69:\n\tsub.s!\t@CPI3_5[0], r9, r1\n\tjump.gt\t@.BB3_72\n\tst.1\t64, r9\n\tadd\tstack-[10], r0, r1\n\tret\n.BB3_71:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_72:\n\tadd\t@CPI3_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_73:\n\trevert\n.BB3_74:\n\tadd\t@CPI3_14[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_75:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB3_78\n\tadd\tr0, r0, r6\n.BB3_77:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_77\n.BB3_78:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB3_89\n\tjump\t@.BB3_90\n.BB3_79:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB3_82\n\tadd\tr0, r0, r6\n.BB3_81:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_81\n.BB3_82:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_90\n\tjump\t@.BB3_89\n.BB3_84:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB3_87\n\tadd\tr0, r0, r6\n.BB3_86:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB3_86\n.BB3_87:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_90\n.BB3_89:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB3_90:\n\tadd\t@CPI3_3[0], r0, r1\n\tsub.s!\t@CPI3_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_quoteDispatch:\n.func_begin4:\n\tnop\tstack+=[13]\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[7]\n\tadd\tr1, r0, stack-[6]\n\tand!\t@CPI4_0[0], r7, r1\n\tjump.ne\t@.BB4_2\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI4_0[0], r1, r1\n.BB4_2:\n\tadd\tr1, r0, stack-[5]\n\tadd\t101, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tadd\t@CPI4_1[0], r0, r2\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\tr4, r0, stack-[10]\n\tadd\t33, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI4_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_3\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t224, r2, r2\n\tadd\tstack-[10], r0, r11\n\tadd\t73, r11, r3\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\t37, r11, r2\n\tst.1\tr2, r1\n\tadd\t77, r11, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t41, r11, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r12\n\tand\t31, r12, r3\n\tadd\t109, r11, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\tstack-[8], r1, r4\n\tshr.s!\t5, r12, r5\n\tjump.eq\t@.BB4_64\n\tadd\tr0, r0, r6\n.BB4_6:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_6\n.BB4_64:\n\tsub!\tr3, r0, r6\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[11], r0, r10\n\tjump.eq\t@.BB4_8\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB4_8:\n\tadd\tr2, r12, r2\n\tst.1\tr2, r0\n\tadd\t77, r12, r2\n\tst.1\tr11, r2\n\tadd\t140, r12, r2\n\tsub.s\t32, r0, r12\n\tand\tr2, r12, r2\n\tadd\tr11, r2, r15\n\tsub!\tr15, r11, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_5[0], r15, r3\n\tjump.gt\t@.BB4_10\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_10\n\tst.1\t64, r15\n\tadd\t105, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr15, r3\n\tptr.add.s\tstack-[12], r1, r4\n\tadd\t68, r15, r1\n\tst.1\tr1, r10\n\tadd\t4, r15, r1\n\tadd\t64, r0, r3\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr1, r3\n\tand\t31, r10, r13\n\tadd\t100, r15, r3\n\tand\t@CPI4_0[0], r2, r2\n\tshr.s!\t5, r10, r14\n\tjump.eq\t@.BB4_63\n\tadd\tr0, r0, r5\n.BB4_14:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r14, r6\n\tjump.lt\t@.BB4_14\n.BB4_63:\n\tsub!\tr13, r0, r5\n\tshl.s\t5, r14, r5\n\tshl.s\t3, r13, r8\n\tadd\tr5, r0, stack-[6]\n\tadd\tr8, r0, stack-[9]\n\tjump.eq\t@.BB4_16\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r8, r6\n\tshr\tr6, r8, r6\n\tld\tr4, r4\n\tsub\t256, r8, r7\n\tshr\tr4, r7, r4\n\tshl\tr4, r7, r4\n\tor\tr4, r6, r4\n\tst.1\tr5, r4\n.BB4_16:\n\tadd\tr3, r10, r4\n\tst.1\tr4, r0\n\tadd\t31, r10, r4\n\tand\tr4, r12, stack-[7]\n\tadd\tstack-[7], r3, r4\n\tsub\tr4, r1, r1\n\tadd\t36, r15, r3\n\tst.1\tr3, r1\n\tld.1\tr11, r3\n\tst.1.inc\tr4, r3, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB4_19\n\tadd\tr0, r0, r4\n.BB4_18:\n\tadd\tr4, r1, r5\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB4_18\n.BB4_19:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB4_21\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB4_32\n.BB4_21:\n\tadd\tr14, r0, stack-[2]\n\tadd\tr13, r0, stack-[3]\n\tadd\t31, r3, r3\n\tadd\tr12, r0, stack-[4]\n\tand\tr3, r12, r3\n\tsub\tr3, r15, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI4_3[0], r0, r3\n\tsub.s!\t@CPI4_3[0], r15, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr15, r0, r5\n\tshl.s\t64, r5, r5\n\tsub.s!\t@CPI4_3[0], r1, r6\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI4_3[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tadd\tr15, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r15\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI4_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB4_62\n\tadd\tr0, r0, r7\n.BB4_23:\n\tshl.s\t5, r7, r8\n\tadd\tr15, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB4_23\n.BB4_62:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB4_25\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr15, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB4_25:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[11], r0, r10\n\tadd\tstack-[10], r0, r11\n\tadd\tstack-[4], r0, r12\n\tadd\tstack-[3], r0, r13\n\tadd\tstack-[2], r0, r14\n\tjump.eq\t@.BB4_27\n.BB4_32:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r15, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[13]\n\tsub.s!\t@CPI4_5[0], r4, r4\n\tjump.gt\t@.BB4_10\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_10\n\tadd\tstack-[13], r0, r7\n\tst.1\t64, r7\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB4_43\n\tld.1\tr15, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\t68, r7, r2\n\tst.1\tr2, r10\n\tadd\t@CPI4_6[0], r0, r2\n\tst.1\tr7, r2\n\tadd\t4, r7, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tadd\t100, r7, r4\n\tadd\tstack-[12], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tsub!\tr14, r0, r6\n\tadd\tr7, r0, r15\n\tjump.eq\t@.BB4_61\n\tadd\tr0, r0, r6\n.BB4_37:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r14, r7\n\tjump.lt\t@.BB4_37\n.BB4_61:\n\tsub!\tr13, r0, r6\n\tjump.eq\t@.BB4_39\n\tptr.add.s\tstack-[6], r5, r5\n\tadd\tstack-[6], r4, r6\n\tld.1\tr6, r7\n\tadd\tstack-[9], r0, r8\n\tshl\tr7, r8, r7\n\tshr\tr7, r8, r7\n\tld\tr5, r5\n\tsub\t256, r8, r8\n\tshr\tr5, r8, r5\n\tshl\tr5, r8, r5\n\tor\tr5, r7, r5\n\tst.1\tr6, r5\n.BB4_39:\n\tadd\tr4, r10, r5\n\tst.1\tr5, r0\n\tadd\tstack-[7], r4, r5\n\tsub\tr5, r2, r2\n\tadd\t36, r15, r4\n\tst.1\tr4, r2\n\tld.1\tr11, r4\n\tst.1.inc\tr5, r4, r8\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB4_42\n\tadd\tr0, r0, r5\n.BB4_41:\n\tadd\tr5, r8, r6\n\tadd\tr5, r9, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB4_41\n.BB4_42:\n\tadd\tr8, r4, r5\n\tst.1\tr5, r0\n\tcontext.gas_left\tr5\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r6\n\tjump.eq\t@.BB4_54\n\tadd\t31, r4, r1\n\tand\tr1, r12, r1\n\tsub\tr1, r15, r1\n\tadd\tr1, r8, r1\n\tadd\t@CPI4_3[0], r0, r6\n\tsub.s!\t@CPI4_3[0], r15, r3\n\tadd\tr6, r0, r3\n\tadd.lt\tr15, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI4_3[0], r1, r4\n\tadd.ge\tr6, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI4_3[0], r5, r3\n\tadd.ge\tr6, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r15\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI4_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB4_60\n\tadd\tr0, r0, r7\n.BB4_46:\n\tshl.s\t5, r7, r8\n\tadd\tr15, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB4_46\n.BB4_60:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB4_48\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr15, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB4_48:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_50\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB4_54:\n\tadd\tr1, r15, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI4_5[0], r2, r4\n\tjump.gt\t@.BB4_10\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB4_10\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tadd\tstack-[13], r0, r1\n\tjump.lt\t@.BB4_43\n\tld.1\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tsub.s!\tstack-[11], r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t1, r2, r2\n\tjump.eq\t@.BB4_58\n\tret\n.BB4_10:\n\tadd\t@CPI4_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_43:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_3:\n\trevert\n.BB4_58:\n\tadd\t@CPI4_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_27:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB4_66\n\tadd\tr0, r0, r6\n.BB4_29:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_29\n.BB4_66:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB4_30\n\tjump\t@.BB4_31\n.BB4_50:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB4_65\n\tadd\tr0, r0, r6\n.BB4_52:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB4_52\n.BB4_65:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB4_31\n.BB4_30:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB4_31:\n\tadd\t@CPI4_3[0], r0, r1\n\tsub.s!\t@CPI4_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_delivered:\n.func_begin5:\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI5_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI5_2[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tret\n.BB5_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_recipientIsm:\n.func_begin6:\n\tadd\tr1, r0, r2\n\tld.1\t64, r3\n\tadd\t4, r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t@CPI6_0[0], r0, r4\n\tst.1\tr1, r4\n\tsub.s!\t@CPI6_1[0], r3, r4\n\tjump.gt\t@.BB6_2\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB6_4\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB6_7\n.BB6_9:\n\tsub.s!\t@CPI6_3[0], r4, r1\n\tjump.gt\t@.BB6_2\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t63, r1, r1\n\tand\tr1, r3, r1\n\tld.1\t64, r3\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI6_3[0], r1, r6\n\tjump.gt\t@.BB6_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB6_2\n\tst.1\t64, r1\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB6_22\n\tadd\tr0, r0, r7\n.BB6_14:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB6_14\n.BB6_22:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB6_8\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr1, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB6_8:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB6_16\n\tjump\t@.BB6_18\n.BB6_4:\n\tadd\t@CPI6_2[0], r0, r5\n\tsub.s!\t@CPI6_2[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI6_2[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI6_2[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI6_2[0], r1, stack[@returndatasize]\n\tand\t@CPI6_2[0], r1, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB6_9\n.BB6_7:\n\tadd\t96, r0, r3\n\tadd\t128, r0, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB6_18\n.BB6_16:\n\tld.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB6_18\n\tadd\t@CPI6_4[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI6_4[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI6_4[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB6_19\n\tld.1\tr1, r1\n\tsub.s!\t@CPI6_5[0], r1, r2\n\tjump.gt\t@.BB6_19\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB6_18\n\tret\n.BB6_18:\n\tadd\t103, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI6_5[0], r1, r1\n\tret\n.BB6_2:\n\tadd\t@CPI6_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_19:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_transferOwnership:\n.func_begin7:\n\tand\t@CPI7_0[0], r1, r6\n\tadd\t51, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI7_1[0], r2, r3\n\tor\tr3, r6, r3\n\tsstore\tr1, r3\n\tadd\t@CPI7_2[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI7_3[0], r1, r1\n\tand\t@CPI7_0[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI7_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB7_1\n\tret\n.BB7_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__cxa_throw:\n.func_begin8:\n\trevert\n.func_end8:\n\n__sha3:\n.func_begin9:\n\tadd\t@CPI9_0[0], r0, r3\n\tsub.s!\t@CPI9_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI9_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI9_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI9_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB9_2\n\tld\tr1, r1\n\tret\n.BB9_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\n__system_request:\n.func_begin10:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t5, r3, r1\n\tjump.lt\t@.BB10_4\n\tadd\t4, r0, r1\n\tadd\tr0, r0, r2\n.BB10_3:\n\tshl.s\t5, r2, r6\n\tadd\tr4, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\tstack[r6], r0, r6\n\tst.2.inc\tr1, r6, r1\n\tadd\t1, r2, r2\n\tsub!\tr1, r3, r6\n\tjump.lt\t@.BB10_3\n.BB10_4:\n\tadd\t@CPI10_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI10_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_5\n\tld\tr1, r1\n\tret\n.BB10_5:\n\trevert\n.func_end10:\n\n__farcall:\n.func_begin11:\n.tmp0:\n\tfar_call\tr1, r2, @.BB11_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB11_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end11:\n\n__staticcall:\n.func_begin12:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB12_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB12_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_1:\nCPI3_3:\nCPI4_3:\nCPI5_0:\nCPI6_2:\nCPI7_2:\nCPI9_0:\nCPI10_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI0_3:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_4:\n\t.cell 2376452954\nCPI0_5:\n\t.cell 3876538539\nCPI0_6:\n\t.cell 4157395744\nCPI0_7:\n\t.cell 4197572096\nCPI0_8:\n\t.cell 4197572097\nCPI0_9:\n\t.cell 4288785780\nCPI0_10:\n\t.cell 4157395745\nCPI0_11:\n\t.cell 4173887070\nCPI0_12:\n\t.cell 3876538540\nCPI0_13:\n\t.cell 4076725131\nCPI0_14:\n\t.cell 4153698426\nCPI0_15:\n\t.cell 2952712415\nCPI0_16:\n\t.cell 2952712416\nCPI0_17:\n\t.cell 3603991049\nCPI0_18:\n\t.cell 3835032020\nCPI0_19:\n\t.cell 2376452955\nCPI0_20:\n\t.cell 2578466825\nCPI0_21:\n\t.cell 2621619480\nCPI0_22:\n\t.cell 1562371496\nCPI0_23:\n\t.cell 2084163887\nCPI0_24:\n\t.cell 2196405245\nCPI0_25:\n\t.cell 2196405246\nCPI0_26:\n\t.cell 2369140980\nCPI0_27:\n\t.cell 2084163888\nCPI0_28:\n\t.cell 2178083477\nCPI0_29:\n\t.cell 1562371497\nCPI0_30:\n\t.cell 1851740526\nCPI0_31:\n\t.cell 1901074598\nCPI0_32:\n\t.cell 338081779\nCPI0_33:\n\t.cell 338081780\nCPI0_34:\n\t.cell 1024610487\nCPI0_35:\n\t.cell 1219422420\nCPI0_36:\n\t.cell 128122273\nCPI0_37:\n\t.cell 280509888\nCPI0_38:\n\t.cell 323992399\nCPI0_39:\n\t.cell 2535301202817642044428229017600\nCPI0_40:\nCPI1_2:\nCPI2_2:\nCPI3_5:\nCPI4_5:\nCPI6_3:\n\t.cell 18446744073709551615\nCPI0_41:\nCPI3_1:\nCPI4_1:\n\t.cell 1356938545749799165119972480570561420155507632800475359837393562592731987968\nCPI0_42:\nCPI3_2:\nCPI4_2:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_43:\nCPI3_4:\nCPI4_4:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_44:\nCPI1_3:\nCPI3_0:\nCPI4_0:\nCPI6_5:\nCPI7_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_45:\n\t.cell 18446744073709551487\nCPI0_46:\n\t.cell 904625697166532776746648320380374280103671755200316909509741426855349583872\nCPI0_47:\nCPI3_7:\n\t.cell -4294967296\nCPI0_48:\nCPI3_6:\nCPI7_3:\nCPI9_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_49:\nCPI3_8:\n\t.cell 53654625498752477999337343059536398080296297724496282377212575182935889135636\nCPI0_50:\nCPI3_9:\n\t.cell 54527965534291682244266507867501002513330022150163389627525605330405894665530\nCPI0_51:\nCPI3_10:\nCPI4_6:\n\t.cell -38537017516135852955244813643456736314941791691183912651424411239534332739584\nCPI0_52:\nCPI3_11:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_53:\nCPI3_12:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_54:\nCPI3_13:\n\t.cell 3788242424162884865079338245840267105998491766625572112790070462651077492736\nCPI0_55:\n\t.cell 2535301200456458802993406410752\nCPI0_56:\n\t.cell 45445297051470054334538976711054531813460623115156291166328260229624781340672\nCPI0_57:\n\t.cell 33213918945522163348297488160619434111254143694905912425159868126486596838753\nCPI0_58:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_59:\n\t.cell 10458117451882892562347801444352\nCPI0_60:\n\t.cell -65536\nCPI0_61:\nCPI7_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_62:\nCPI7_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_63:\n\t.cell -40067117487590181668773000624162485856333169977519469946916999622445191701078\nCPI0_64:\n\t.cell 45977324395572189501795640741656111967299219518842653435434047008852625471447\nCPI0_65:\n\t.cell 22896190714728488097963353167996834803278593861293779645832300459385807700657\nCPI0_66:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_67:\n\t.cell 7922816251426433759354395033600\nCPI0_68:\n\t.cell -65281\nCPI0_69:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_70:\n\t.cell 57512143604608921510564439283751233207941214245504845198923540334447261918360\nCPI0_71:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_72:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_73:\n\t.cell 49940735729591551243672370266578737478300007093892078568002313358426186448896\nCPI0_74:\n\t.cell 33213918945522163348297488160619434111254143694905912425159868126542481858665\nCPI0_75:\n\t.cell 52468290435658901051305602582061708246012961801618380580379217753585636868096\nCPI0_76:\n\t.cell 35000201111602128778598051913215597287584640772636359145740052337944660435299\nCPI0_77:\n\t.cell 10458117454244075803782624051200\nCPI0_78:\nCPI3_14:\nCPI4_7:\nCPI6_6:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_79:\nCPI3_15:\nCPI4_8:\nCPI6_7:\n\t.cell 2852213850513516153367582212096\nCPI0_80:\n\t.cell 44983926269257665031190754368914705412967740014453258673776093884910099496960\nCPI0_81:\n\t.cell 35000201111602128778598051913215597287584802304463317227842400833760736342625\nCPI0_82:\n\t.cell -452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI0_83:\n\t.cell 35000201111602128778597858851401246440256527255323293089226427587831772741632\nCPI0_84:\n\t.cell 7922816253787617000789217640448\nCPI0_85:\n\t.cell 35000201111602128778599683555697232736110021912617552296864991794611404893696\nCPI0_86:\nCPI5_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_87:\nCPI5_2:\n\t.cell 411376139330300049037104964736419422560851250125375309904609280\nCPI0_88:\n\t.cell 35000201111602128778597767206873027931355152707750256062300268598512219848704\nCPI0_89:\nCPI6_0:\n\t.cell -15233334736471382138234474861969040676167165398497161756372066007914249191424\nCPI0_90:\nCPI6_1:\n\t.cell 18446744073709551551\nCPI0_91:\nCPI1_0:\nCPI2_0:\nCPI6_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_92:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_93:\n\t.cell 281474976710655\nCPI0_94:\n\t.cell -411376139330301510538742295639337626245683966408394965837152256\nCPI0_95:\n\t.cell 5979204857618508254944138723242686143229935388391975374099677347592230561140\nCPI0_96:\n\t.cell 12972583196495312631108539236436642268067347704018224725554243618464814101417\nCPI0_97:\n\t.cell -3660500400465391696344650074949724386646204144365524034151518120014088503296\nCPI0_98:\n\t.cell 39276709727497984918454912288297903599021847994296131379281858992791489609728\nCPI0_99:\n\t.cell 4294967163\nCPI0_100:\n\t.cell 35000201111602128778595459055482237636335208398017947729967068006957466805604\nCPI0_101:\n\t.cell 44050064774566127426240532422701725653047485361646828009770163057236264353792\nCPI0_102:\n\t.cell 35000201111602128778599392863004285675109385984470995072305545249498520777842\nCPI10_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "VERSION()": "ffa1ad74",
            "defaultHook()": "3d1250b7",
            "defaultIsm()": "6e5f516e",
            "delivered(bytes32)": "e495f1d4",
            "deployedBlock()": "82ea7bfe",
            "dispatch(uint32,bytes32,bytes)": "fa31de01",
            "dispatch(uint32,bytes32,bytes,bytes)": "48aee8d4",
            "dispatch(uint32,bytes32,bytes,bytes,address)": "10b83dc0",
            "initialize(address,address,address,address)": "f8c8765e",
            "latestDispatchedId()": "134fbb4f",
            "localDomain()": "8d3638f4",
            "nonce()": "affed0e0",
            "owner()": "8da5cb5b",
            "process(bytes,bytes)": "7c39d130",
            "processedAt(bytes32)": "07a2fda1",
            "processor(bytes32)": "5d1fe5a9",
            "quoteDispatch(uint32,bytes32,bytes)": "9c42bd18",
            "quoteDispatch(uint32,bytes32,bytes,bytes)": "f7ccd321",
            "quoteDispatch(uint32,bytes32,bytes,bytes,address)": "81d2ea95",
            "recipientIsm(address)": "e70f48ac",
            "renounceOwnership()": "715018a6",
            "requiredHook()": "d6d08a09",
            "setDefaultHook(address)": "99b04809",
            "setDefaultIsm(address)": "f794687a",
            "setRequiredHook(address)": "1426b7f4",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"contracts/Mailbox.sol\", 4:\"contracts/interfaces/IMailbox.sol\", 7:\"contracts/libs/Indexed.sol\", 13:\"contracts/upgrade/Versioned.sol\", 14:\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\", 15:\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 17:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\"\nobject \"Mailbox_702\" {\n    code {\n        {\n            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Mailbox_702\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, 0xffffffff)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:164:192  \"deployedBlock = block.number\"\n            mstore(128, /** @src 7:180:192  \"block.number\" */ number())\n            /// @src 0:2675:2701  \"localDomain = _localDomain\"\n            mstore(160, value)\n            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n            let _2 := mload(64)\n            let _3 := datasize(\"Mailbox_702_deployed\")\n            codecopy(_2, dataoffset(\"Mailbox_702_deployed\"), _3)\n            setimmutable(_2, \"1334\", mload(/** @src 7:164:192  \"deployedBlock = block.number\" */ 128))\n            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n            setimmutable(_2, \"41\", mload(/** @src 0:2675:2701  \"localDomain = _localDomain\" */ 160))\n            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n            return(_2, _3)\n        }\n    }\n    /// @use-src 0:\"contracts/Mailbox.sol\", 7:\"contracts/libs/Indexed.sol\", 8:\"contracts/libs/Message.sol\", 9:\"contracts/libs/TypeCasts.sol\", 13:\"contracts/upgrade/Versioned.sol\", 14:\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\", 15:\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 16:\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\", 17:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\", 18:\"node_modules/@openzeppelin/contracts/utils/Address.sol\"\n    object \"Mailbox_702_deployed\" {\n        code {\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x07a2fda1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 0:8896:8906  \"deliveries\" */ 0x6a)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        mstore(_1, and(shr(160, sload(keccak256(_2, 64))), 0xffffffffffff))\n                        return(_1, 32)\n                    }\n                    case 0x10b83dc0 {\n                        let param, param_1, param_2, param_3, param_4, param_5, param_6 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook(calldatasize())\n                        let ret := fun_dispatch(param, param_1, param_2, param_3, param_4, param_5, param_6)\n                        let memPos := mload(64)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x134fbb4f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _3 := sload(/** @src 0:1426:1459  \"bytes32 public latestDispatchedId\" */ 102)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x1426b7f4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value0))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 35)\n                            mstore(add(memPtr, 68), \"Mailbox: required hook not contr\")\n                            mstore(add(memPtr, 100), \"act\")\n                            revert(memPtr, 132)\n                        }\n                        let _4 := and(/** @src 0:13304:13328  \"IPostDispatchHook(_hook)\" */ value0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        sstore(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(sload(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _4))\n                        /// @src 0:13343:13365  \"RequiredHookSet(_hook)\"\n                        log2(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2, _2, /** @src 0:13343:13365  \"RequiredHookSet(_hook)\" */ 0x329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b1, _4)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(_2, _2)\n                    }\n                    case 0x3d1250b7 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value := and(sload(/** @src 0:1673:1709  \"IPostDispatchHook public defaultHook\" */ 104), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value)\n                        return(memPos_2, 32)\n                    }\n                    case 0x48aee8d4 {\n                        let param_7, param_8, param_9, param_10, param_11, param_12 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata(calldatasize())\n                        let ret_1 := /** @src 0:4652:4831  \"dispatch(...\" */ fun_dispatch(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ param_7, param_8, param_9, param_10, param_11, param_12, and(sload(/** @src 0:4806:4817  \"defaultHook\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x5d1fe5a9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 0:8580:8590  \"deliveries\" */ 0x6a)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let cleaned := and(sload(keccak256(_2, 64)), sub(shl(160, 1), 1))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, cleaned)\n                        return(memPos_4, 32)\n                    }\n                    case 0x6e5f516e {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_1 := and(sload(/** @src 0:1534:1577  \"IInterchainSecurityModule public defaultIsm\" */ 103), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let _5 := sload(/** @src 14:2779:2785  \"_owner\" */ 0x33)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        sstore(/** @src 14:2779:2785  \"_owner\" */ 0x33, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(_5, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2, _2, /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(_5, sub(shl(160, 1), 1)), _2)\n                        return(_2, _2)\n                    }\n                    case 0x7c39d130 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let offset := calldataload(4)\n                        let _6 := 0xffffffffffffffff\n                        if gt(offset, _6) { revert(_2, _2) }\n                        let value0_1, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _6) { revert(_2, _2) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                        if gt(/** @src 8:364:365  \"1\" */ 0x01, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ value3) { revert(_2, _2) }\n                        if iszero(/** @src 0:7109:7138  \"_message.version() == VERSION\" */ eq(/** @src 8:364:365  \"1\" */ shr(248, calldataload(value2)), /** @src 13:199:200  \"3\" */ 0x03))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 20)\n                            mstore(add(memPtr_1, 68), \"Mailbox: bad version\")\n                            revert(memPtr_1, 100)\n                        }\n                        if gt(/** @src 8:565:567  \"45\" */ 0x2d, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ value3) { revert(_2, _2) }\n                        if iszero(/** @src 0:7194:7231  \"_message.destination() == localDomain\" */ eq(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shr(224, /** @src 8:460:461  \"9\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(value2, /** @src 8:513:515  \"41\" */ 0x29))), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:7220:7231  \"localDomain\" */ loadimmutable(\"41\"), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0xffffffff)))\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 31)\n                            mstore(add(memPtr_2, 68), \"Mailbox: unexpected destination\")\n                            revert(memPtr_2, 100)\n                        }\n                        let _7 := array_allocation_size_bytes(value3)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, _7)\n                        mstore(memPtr_3, value3)\n                        let dst := add(memPtr_3, 32)\n                        if gt(add(value2, value3), calldatasize()) { revert(_2, _2) }\n                        calldatacopy(dst, value2, value3)\n                        mstore(add(add(memPtr_3, value3), 32), _2)\n                        /// @src 8:2038:2064  \"return keccak256(_message)\"\n                        let var := /** @src 8:2045:2064  \"keccak256(_message)\" */ keccak256(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ dst, mload(/** @src 8:2045:2064  \"keccak256(_message)\" */ memPtr_3))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if iszero(iszero(/** @src 0:7409:7423  \"delivered(_id)\" */ fun_delivered(var)))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 26)\n                            mstore(add(memPtr_4, 68), \"Mailbox: already delivered\")\n                            revert(memPtr_4, 100)\n                        }\n                        if gt(/** @src 8:612:614  \"77\" */ 0x4d, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ value3) { revert(_2, _2) }\n                        /// @src 0:7599:7622  \"recipientIsm(recipient)\"\n                        let expr_address := fun_recipientIsm(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        let memPtr_5 := mload(64)\n                        if or(gt(add(memPtr_5, 64), _6), lt(add(memPtr_5, 64), memPtr_5))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 36)\n                        }\n                        mstore(64, add(memPtr_5, 64))\n                        mstore(memPtr_5, /** @src 0:7710:7720  \"msg.sender\" */ caller())\n                        /// @src 0:7676:7778  \"Delivery({...\"\n                        let _8 := add(memPtr_5, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 32)\n                        mstore(_8, and(/** @src 0:7754:7766  \"block.number\" */ number(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0xffffffffffff))\n                        mstore(_2, var)\n                        mstore(32, /** @src 0:7658:7668  \"deliveries\" */ 0x6a)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let dataSlot := keccak256(_2, 64)\n                        let _9 := and(mload(memPtr_5), sub(shl(160, 1), 1))\n                        let _10 := sload(dataSlot)\n                        sstore(dataSlot, or(or(and(_10, shl(208, 0xffffffffffff)), _9), and(shl(160, mload(_8)), shl(160, 0xffffffffffff))))\n                        /// @src 0:7801:7818  \"_message.origin()\"\n                        let expr := fun_origin(value2, value3)\n                        /// @src 0:7820:7837  \"_message.sender()\"\n                        let expr_1 := fun_sender(value2, value3)\n                        /// @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\"\n                        let _11 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        /// @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\"\n                        log4(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2, _2, /** @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\" */ 0x0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca6574, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\" */ expr, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0xffffffff), /** @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\" */ expr_1, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 0:7864:7878  \"ProcessId(_id)\"\n                        log2(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2, _2, /** @src 0:7864:7878  \"ProcessId(_id)\" */ 0x1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a9, var)\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        mstore(_11, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(225, 0x7bf41d77))\n                        mstore(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ add(_11, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), 64)\n                        let tail := abi_encode_bytes_calldata(value0_1, value1, add(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _11, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 68))\n                        mstore(add(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _11, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36), add(sub(tail, /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _11), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ not(3)))\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        let _12 := call(gas(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:8006:8016  \"ism.verify\" */ expr_address, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)), _2, /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _11, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes_calldata(value2, value3, tail), /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _11), _11, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 32)\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        if iszero(_12)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, _2, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        let expr_2 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        if _12\n                        {\n                            let _13 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 32\n                            /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                            if gt(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 32, /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ returndatasize()) { _13 := returndatasize() }\n                            finalize_allocation(_11, _13)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            if slt(sub(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ add(_11, _13), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _11), 32) { revert(_2, _2) }\n                            let value_2 := mload(_11)\n                            if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(_2, _2) }\n                            /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                            expr_2 := value_2\n                        }\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if iszero(expr_2)\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 32)\n                            mstore(add(memPtr_6, 68), \"Mailbox: ISM verification failed\")\n                            revert(memPtr_6, 100)\n                        }\n                        /// @src 0:8222:8239  \"_message.origin()\"\n                        let expr_3 := fun_origin(value2, value3)\n                        /// @src 0:8253:8270  \"_message.sender()\"\n                        let expr_4 := fun_sender(value2, value3)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        if iszero(extcodesize(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        let _14 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        mstore(_14, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(224, 0x56d5d475))\n                        mstore(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ add(_14, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), and(expr_3, 0xffffffff))\n                        mstore(add(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _14, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36), expr_4)\n                        mstore(add(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _14, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 68), 96)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        let _15 := call(gas(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)), /** @src 0:8198:8207  \"msg.value\" */ callvalue(), /** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _14, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes_calldata(add(value2, /** @src 8:612:614  \"77\" */ 0x4d), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(value3, not(76)), add(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _14, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 100)), /** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _14), _14, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        if iszero(_15)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, _2, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        if _15\n                        {\n                            finalize_allocation_13634(_14)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            _2 := _2\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x81d2ea95 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14, param_15, param_16, param_17, param_18, param_19 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook(calldatasize())\n                        let ret_2 := fun_quoteDispatch(param_13, param_14, param_15, param_16, param_17, param_18, param_19)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, ret_2)\n                        return(memPos_6, 32)\n                    }\n                    case 0x82ea7bfe {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, /** @src 7:95:133  \"uint256 public immutable deployedBlock\" */ loadimmutable(\"1334\"))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(memPos_7, 32)\n                    }\n                    case 0x8d3638f4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, and(/** @src 0:1158:1193  \"uint32 public immutable localDomain\" */ loadimmutable(\"41\"), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0xffffffff))\n                        return(memPos_8, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_1 := and(sload(/** @src 14:1534:1540  \"_owner\" */ 0x33), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, cleaned_1)\n                        return(memPos_9, 32)\n                    }\n                    case 0x99b04809 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_2 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value0_2))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 34)\n                            mstore(add(memPtr_7, 68), \"Mailbox: default hook not contra\")\n                            mstore(add(memPtr_7, 100), \"ct\")\n                            revert(memPtr_7, 132)\n                        }\n                        let _16 := and(/** @src 0:12871:12895  \"IPostDispatchHook(_hook)\" */ value0_2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        sstore(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(sload(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _16))\n                        /// @src 0:12910:12931  \"DefaultHookSet(_hook)\"\n                        log2(_2, _2, 0x65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d7, _16)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(_2, _2)\n                    }\n                    case 0x9c42bd18 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_20, param_21, param_22, param_23 := abi_decode_uint32t_bytes32t_bytes_calldata(calldatasize())\n                        let _17 := sub(shl(160, 1), 1)\n                        /// @src 0:5469:5657  \"quoteDispatch(...\"\n                        let var_hook_address := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(sload(/** @src 0:5632:5643  \"defaultHook\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _17)\n                        /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                        if /** @src 0:11443:11470  \"address(hook) == address(0)\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_hook_address)\n                        /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                        {\n                            /// @src 0:11486:11504  \"hook = defaultHook\"\n                            var_hook_address := var_hook_address\n                        }\n                        /// @src 0:11548:11657  \"_buildMessage(...\"\n                        let expr_mpos := fun_buildMessage(param_20, param_21, param_22, param_23)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let cleaned_2 := and(sload(/** @src 0:11686:11698  \"requiredHook\" */ 0x69), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _17)\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let _18 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        let _19 := shl(228, 0x0aaccd23)\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        mstore(_18, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _19)\n                        mstore(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_18, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), 64)\n                        mstore(add(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _18, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 68), 0)\n                        let _20 := add(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _18, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 100)\n                        mstore(_20, 0)\n                        mstore(add(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _18, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36), 96)\n                        let _21 := 0x20\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let _22 := staticcall(gas(), cleaned_2, _18, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes(expr_mpos, _20), /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _18), _18, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _21)\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if iszero(_22)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let expr_5 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if _22\n                        {\n                            let _23 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _21\n                            /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                            if gt(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _21, /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ returndatasize()) { _23 := returndatasize() }\n                            finalize_allocation(_18, _23)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            if slt(sub(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_18, _23), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _18), _21) { revert(expr_5, expr_5) }\n                            /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                            expr_5 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_18)\n                        }\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        let _24 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        mstore(_24, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _19)\n                        mstore(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ add(_24, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), 64)\n                        mstore(add(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _24, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 68), 0)\n                        let _25 := add(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _24, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 100)\n                        mstore(_25, 0)\n                        mstore(add(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _24, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36), 96)\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        let _26 := staticcall(gas(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:11746:11764  \"hook.quoteDispatch\" */ var_hook_address, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _17), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _24, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes(expr_mpos, _25), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _24), _24, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _21)\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        if iszero(_26)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        let expr_6 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        if _26\n                        {\n                            let _27 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _21\n                            /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                            if gt(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _21, /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ returndatasize()) { _27 := returndatasize() }\n                            finalize_allocation(_24, _27)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            if slt(sub(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ add(_24, _27), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _24), _21) { revert(expr_6, expr_6) }\n                            /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                            expr_6 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_24)\n                        }\n                        let sum := add(expr_5, expr_6)\n                        if gt(expr_5, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, sum)\n                        return(memPos_10, _21)\n                    }\n                    case 0xaffed0e0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_3 := and(sload(/** @src 0:1322:1341  \"uint32 public nonce\" */ 101), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0xffffffff)\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, value_3)\n                        return(memPos_11, 32)\n                    }\n                    case 0xd6d08a09 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_4 := and(sload(/** @src 0:1800:1837  \"IPostDispatchHook public requiredHook\" */ 105), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, value_4)\n                        return(memPos_12, 32)\n                    }\n                    case 0xe495f1d4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret_3 := fun_delivered(calldataload(4))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, iszero(iszero(ret_3)))\n                        return(memPos_13, 32)\n                    }\n                    case 0xe70f48ac {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret_4 := fun_recipientIsm(abi_decode_address())\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, and(ret_4, sub(shl(160, 1), 1)))\n                        return(memPos_14, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_3 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 14:2423:2445  \"newOwner != address(0)\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 14:2423:2445  \"newOwner != address(0)\" */ value0_3, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, 36), 38)\n                            mstore(add(memPtr_8, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_8, 100), \"ddress\")\n                            revert(memPtr_8, 132)\n                        }\n                        /// @src 14:2517:2525  \"newOwner\"\n                        fun_transferOwnership(value0_3)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(_2, _2)\n                    }\n                    case 0xf794687a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value0_4))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 33)\n                            mstore(add(memPtr_9, 68), \"Mailbox: default ISM not contrac\")\n                            mstore(add(memPtr_9, 100), \"t\")\n                            revert(memPtr_9, 132)\n                        }\n                        let _28 := and(/** @src 0:12431:12465  \"IInterchainSecurityModule(_module)\" */ value0_4, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                        sstore(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(sload(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _28))\n                        /// @src 0:12480:12502  \"DefaultIsmSet(_module)\"\n                        log2(_2, _2, 0xa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa, _28)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(_2, _2)\n                    }\n                    case 0xf7ccd321 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_24, param_25, param_26, param_27, param_28, param_29 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata(calldatasize())\n                        let ret_5 := /** @src 0:6373:6564  \"quoteDispatch(...\" */ fun_quoteDispatch(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ param_24, param_25, param_26, param_27, param_28, param_29, and(sload(/** @src 0:6539:6550  \"defaultHook\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1)))\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, ret_5)\n                        return(memPos_15, 32)\n                    }\n                    case 0xf8c8765e {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_2, _2) }\n                        let value0_5 := abi_decode_address()\n                        let _29 := 36\n                        let value_5 := calldataload(_29)\n                        let _30 := sub(shl(160, 1), 1)\n                        let _31 := and(value_5, _30)\n                        if iszero(eq(value_5, _31)) { revert(0, 0) }\n                        let _32 := 68\n                        let value_6 := calldataload(_32)\n                        let _33 := and(value_6, _30)\n                        if iszero(eq(value_6, _33)) { revert(0, 0) }\n                        let _34 := 100\n                        let value_7 := calldataload(_34)\n                        let _35 := and(value_7, _30)\n                        if iszero(eq(value_7, _35)) { revert(0, 0) }\n                        let _36 := sload(_2)\n                        /// @src 15:3347:3381  \"isTopLevelCall && _initialized < 1\"\n                        let expr_7 := /** @src 15:3301:3315  \"!_initializing\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(shr(8, _36), 0xff))\n                        /// @src 15:3347:3381  \"isTopLevelCall && _initialized < 1\"\n                        let expr_8 := expr_7\n                        if expr_7\n                        {\n                            expr_7 := /** @src 15:3365:3381  \"_initialized < 1\" */ lt(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(_36, 0xff), /** @src 15:3380:3381  \"1\" */ 0x01)\n                        }\n                        /// @src 15:3346:3454  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                        let expr_9 := expr_7\n                        if iszero(expr_7)\n                        {\n                            /// @src 15:3387:3453  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                            let expr_10 := /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(/** @src 15:3426:3430  \"this\" */ address()))\n                            /// @src 15:3387:3453  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                            if expr_10\n                            {\n                                expr_10 := /** @src 15:3436:3453  \"_initialized == 1\" */ eq(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(_36, 0xff), /** @src 15:3452:3453  \"1\" */ 0x01)\n                            }\n                            /// @src 15:3346:3454  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                            expr_9 := expr_10\n                        }\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if iszero(expr_9)\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, _29), 46)\n                            mstore(add(memPtr_10, _32), \"Initializable: contract is alrea\")\n                            mstore(add(memPtr_10, _34), \"dy initialized\")\n                            revert(memPtr_10, 132)\n                        }\n                        sstore(_2, or(and(_36, not(255)), /** @src 15:3551:3552  \"1\" */ 0x01))\n                        /// @src 15:3562:3627  \"if (isTopLevelCall) {...\"\n                        if expr_8\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            sstore(_2, or(and(_36, not(65535)), 257))\n                        }\n                        let value_8 := and(shr(8, sload(_2)), 0xff)\n                        /// @src 15:5366:5435  \"require(_initializing, \\\"Initializable: contract is not initializing\\\")\"\n                        require_helper_stringliteral_d688(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ value_8)\n                        /// @src 15:5366:5435  \"require(_initializing, \\\"Initializable: contract is not initializing\\\")\"\n                        require_helper_stringliteral_d688(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ value_8)\n                        /// @src 14:1216:1228  \"_msgSender()\"\n                        fun_transferOwnership(/** @src 17:965:975  \"msg.sender\" */ caller())\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value_5))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, _29), 33)\n                            mstore(add(memPtr_11, _32), \"Mailbox: default ISM not contrac\")\n                            mstore(add(memPtr_11, _34), \"t\")\n                            revert(memPtr_11, 132)\n                        }\n                        let _37 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(sload(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _37), _31))\n                        /// @src 0:12480:12502  \"DefaultIsmSet(_module)\"\n                        log2(_2, _2, 0xa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa, _31)\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value_6))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, _29), 34)\n                            mstore(add(memPtr_12, _32), \"Mailbox: default hook not contra\")\n                            mstore(add(memPtr_12, _34), \"ct\")\n                            revert(memPtr_12, 132)\n                        }\n                        sstore(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(sload(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _37), _33))\n                        /// @src 0:12910:12931  \"DefaultHookSet(_hook)\"\n                        log2(_2, _2, 0x65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d7, _33)\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value_7))\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            let memPtr_13 := mload(64)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, 4), 32)\n                            mstore(add(memPtr_13, _29), 35)\n                            mstore(add(memPtr_13, _32), \"Mailbox: required hook not contr\")\n                            mstore(add(memPtr_13, _34), \"act\")\n                            revert(memPtr_13, 132)\n                        }\n                        sstore(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(sload(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _37), _35))\n                        /// @src 0:13343:13365  \"RequiredHookSet(_hook)\"\n                        log2(_2, _2, 0x329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b1, _35)\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if /** @src 14:2423:2445  \"newOwner != address(0)\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 14:2423:2445  \"newOwner != address(0)\" */ value0_5, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _30))\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, _29), 38)\n                            mstore(add(memPtr_14, _32), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_14, _34), \"ddress\")\n                            revert(memPtr_14, 132)\n                        }\n                        /// @src 14:2517:2525  \"newOwner\"\n                        fun_transferOwnership(value0_5)\n                        /// @src 15:3647:3746  \"if (isTopLevelCall) {...\"\n                        if expr_8\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            sstore(_2, and(sload(_2), not(65280)))\n                            /// @src 15:3721:3735  \"Initialized(1)\"\n                            let _38 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                            mstore(_38, /** @src 15:3551:3552  \"1\" */ 0x01)\n                            /// @src 15:3721:3735  \"Initialized(1)\"\n                            log1(_38, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 32, /** @src 15:3721:3735  \"Initialized(1)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n                        }\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(_2, _2)\n                    }\n                    case 0xfa31de01 {\n                        let param_30, param_31, param_32, param_33 := abi_decode_uint32t_bytes32t_bytes_calldata(calldatasize())\n                        let _39 := sub(shl(160, 1), 1)\n                        /// @src 0:3782:3969  \"dispatch(...\"\n                        let var_hook_address_1 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(sload(/** @src 0:3944:3955  \"defaultHook\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _39)\n                        /// @ast-id 468 @src 0:9476:10688  \"function dispatch(...\"\n                        let /// @ast-id 468\n                        var_metadata_length := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0\n                        /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                        if /** @src 0:9724:9751  \"address(hook) == address(0)\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_hook_address_1)\n                        /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                        {\n                            /// @src 0:9767:9785  \"hook = defaultHook\"\n                            var_hook_address_1 := var_hook_address_1\n                        }\n                        /// @src 0:9902:10011  \"_buildMessage(...\"\n                        let expr_mpos_1 := fun_buildMessage(param_30, param_31, param_32, param_33)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let _40 := mload(expr_mpos_1)\n                        let _41 := 0x20\n                        /// @src 0:10034:10046  \"message.id()\"\n                        let expr_11 := /** @src 8:2045:2064  \"keccak256(_message)\" */ keccak256(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(expr_mpos_1, _41), _40)\n                        sstore(/** @src 0:10082:10105  \"latestDispatchedId = id\" */ 0x66, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ expr_11)\n                        let _42 := sload(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let _43 := 0xffffffff\n                        let sum_1 := add(and(_42, _43), /** @src 0:10124:10125  \"1\" */ 0x01)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        if gt(sum_1, _43)\n                        {\n                            mstore(var_metadata_length, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(var_metadata_length, 0x24)\n                        }\n                        sstore(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(_42, not(0xffffffff)), and(sum_1, _43)))\n                        /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                        let _44 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        mstore(_44, _41)\n                        /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                        log4(_44, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes(expr_mpos_1, add(_44, _41)), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ _44), 0x769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814, /** @src 0:10149:10159  \"msg.sender\" */ caller(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ param_30, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _43), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ param_31)\n                        /// @src 0:10221:10235  \"DispatchId(id)\"\n                        let _45 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        /// @src 0:10221:10235  \"DispatchId(id)\"\n                        log2(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_metadata_length, var_metadata_length, /** @src 0:10221:10235  \"DispatchId(id)\" */ 0x788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a, expr_11)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let cleaned_3 := and(sload(/** @src 0:10299:10311  \"requiredHook\" */ 0x69), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _39)\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        mstore(_45, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(228, 0x0aaccd23))\n                        mstore(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_45, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), 64)\n                        mstore(add(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _45, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 68), var_metadata_length)\n                        let _46 := add(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _45, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 100)\n                        mstore(_46, var_metadata_length)\n                        mstore(add(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _45, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36), 96)\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let _47 := staticcall(gas(), cleaned_3, _45, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes(expr_mpos_1, _46), /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _45), _45, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _41)\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if iszero(_47)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, var_metadata_length, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let expr_12 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_metadata_length\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if _47\n                        {\n                            let _48 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _41\n                            /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                            if gt(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _41, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ returndatasize()) { _48 := returndatasize() }\n                            finalize_allocation(_45, _48)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            if slt(sub(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_45, _48), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _45), _41)\n                            {\n                                revert(var_metadata_length, var_metadata_length)\n                            }\n                            /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                            expr_12 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_45)\n                        }\n                        /// @src 0:10275:10344  \"uint256 requiredValue = requiredHook.quoteDispatch(metadata, message)\"\n                        let var_requiredValue := expr_12\n                        /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                        if /** @src 0:10429:10454  \"msg.value < requiredValue\" */ lt(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 0:10429:10454  \"msg.value < requiredValue\" */ expr_12)\n                        /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                        {\n                            /// @src 0:10470:10495  \"requiredValue = msg.value\"\n                            var_requiredValue := /** @src 0:10429:10438  \"msg.value\" */ callvalue()\n                        }\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        if iszero(extcodesize(cleaned_3))\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            revert(var_metadata_length, var_metadata_length)\n                        }\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        let _49 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        let _50 := shl(224, 0x086011b9)\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        mstore(_49, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _50)\n                        mstore(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ add(_49, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), 64)\n                        mstore(add(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _49, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 68), var_metadata_length)\n                        let _51 := add(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _49, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 100)\n                        mstore(_51, var_metadata_length)\n                        mstore(add(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _49, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36), 96)\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        let _52 := call(gas(), cleaned_3, var_requiredValue, _49, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes(expr_mpos_1, _51), /** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _49), _49, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_metadata_length)\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        if iszero(_52)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos_5 := mload(64)\n                            returndatacopy(pos_5, var_metadata_length, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        if _52\n                        {\n                            finalize_allocation_13634(_49)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            var_metadata_length := var_metadata_length\n                        }\n                        let _53 := and(/** @src 0:10591:10608  \"hook.postDispatch\" */ var_hook_address_1, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _39)\n                        let diff := sub(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_requiredValue)\n                        if gt(diff, /** @src 0:10429:10438  \"msg.value\" */ callvalue())\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        {\n                            mstore(/** @src 0:9749:9750  \"0\" */ var_metadata_length, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src 0:9749:9750  \"0\" */ var_metadata_length, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 36)\n                        }\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        if iszero(extcodesize(_53))\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            revert(/** @src 0:9749:9750  \"0\" */ var_metadata_length, var_metadata_length)\n                        }\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        let _54 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        mstore(_54, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _50)\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        let _55 := call(gas(), _53, diff, _54, sub(abi_encode_bytes_calldata_bytes(add(_54, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 4), /** @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\" */ param_32, var_metadata_length, expr_mpos_1), _54), _54, /** @src 0:9749:9750  \"0\" */ var_metadata_length)\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        if iszero(_55)\n                        {\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            let pos_6 := mload(64)\n                            returndatacopy(pos_6, /** @src 0:9749:9750  \"0\" */ var_metadata_length, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        if _55\n                        {\n                            finalize_allocation_13634(_54)\n                            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                            if var_metadata_length\n                            {\n                                revert(/** @src 0:9749:9750  \"0\" */ var_metadata_length, var_metadata_length)\n                            }\n                        }\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, expr_11)\n                        return(memPos_16, _41)\n                    }\n                    case 0xffa1ad74 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, /** @src 13:199:200  \"3\" */ 0x03)\n                        /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                        return(memPos_17, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook(dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n            {\n                if slt(add(dataEnd, not(3)), 160) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n                let offset_1 := calldataload(100)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let value4_1, value5_1 := abi_decode_bytes_calldata(add(4, offset_1), dataEnd)\n                value4 := value4_1\n                value5 := value5_1\n                let value_1 := calldataload(132)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                value6 := value_1\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata(dataEnd) -> value0, value1, value2, value3, value4, value5\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n                let offset_1 := calldataload(100)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let value4_1, value5_1 := abi_decode_bytes_calldata(add(4, offset_1), dataEnd)\n                value4 := value4_1\n                value5 := value5_1\n            }\n            function abi_decode_uint32t_bytes32t_bytes_calldata(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n            }\n            function finalize_allocation_13634(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_encode_bytes_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_bytes_calldata_bytes(headStart, value0, value1, value2) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_bytes(value2, tail_1)\n            }\n            /// @ast-id 468 @src 0:9476:10688  \"function dispatch(...\"\n            function fun_dispatch(var_destinationDomain, var_recipientAddress, var_messageBody_offset, var_messageBody_364_length, var_metadata_offset, var_metadata_length, var_hook_369_address) -> var\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 0:9749:9750  \"0\"\n                let _2 := 0x00\n                /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                if /** @src 0:9724:9751  \"address(hook) == address(0)\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:9724:9737  \"address(hook)\" */ var_hook_369_address, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1))\n                /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                {\n                    /// @src 0:9767:9785  \"hook = defaultHook\"\n                    var_hook_369_address := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(sload(/** @src 0:9774:9785  \"defaultHook\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1)\n                }\n                /// @src 0:9902:10011  \"_buildMessage(...\"\n                let expr_396_mpos := fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_offset, var_messageBody_364_length)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _3 := mload(expr_396_mpos)\n                let _4 := 0x20\n                /// @src 0:10034:10046  \"message.id()\"\n                let expr := /** @src 8:2045:2064  \"keccak256(_message)\" */ keccak256(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(expr_396_mpos, _4), _3)\n                sstore(/** @src 0:10082:10105  \"latestDispatchedId = id\" */ 0x66, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ expr)\n                let _5 := sload(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _6 := 0xffffffff\n                let sum := add(and(_5, _6), /** @src 0:10124:10125  \"1\" */ 0x01)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                if gt(sum, _6)\n                {\n                    mstore(/** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x24)\n                }\n                sstore(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(_5, not(0xffffffff)), and(sum, _6)))\n                let _7 := 64\n                /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                let _8 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_7)\n                mstore(_8, _4)\n                /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                log4(_8, sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ abi_encode_bytes(expr_396_mpos, add(_8, _4)), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ _8), 0x769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814, /** @src 0:10149:10159  \"msg.sender\" */ caller(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ var_destinationDomain, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _6), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ var_recipientAddress)\n                /// @src 0:10221:10235  \"DispatchId(id)\"\n                let _9 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_7)\n                /// @src 0:10221:10235  \"DispatchId(id)\"\n                log2(/** @src 0:9749:9750  \"0\" */ _2, _2, /** @src 0:10221:10235  \"DispatchId(id)\" */ 0x788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a, expr)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let cleaned := and(sload(/** @src 0:10299:10311  \"requiredHook\" */ 0x69), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1)\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                mstore(_9, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(228, 0x0aaccd23))\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                let _10 := staticcall(gas(), cleaned, _9, sub(abi_encode_bytes_calldata_bytes(add(_9, 4), var_metadata_offset, var_metadata_length, expr_396_mpos), _9), _9, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _4)\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                if iszero(_10)\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let pos := mload(_7)\n                    returndatacopy(pos, /** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                let expr_1 := /** @src 0:9749:9750  \"0\" */ _2\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                if _10\n                {\n                    let _11 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _4\n                    /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                    if gt(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _4, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ returndatasize()) { _11 := returndatasize() }\n                    finalize_allocation(_9, _11)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    if slt(sub(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_9, _11), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _9), _4)\n                    {\n                        revert(/** @src 0:9749:9750  \"0\" */ _2, _2)\n                    }\n                    /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                    expr_1 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_9)\n                }\n                /// @src 0:10275:10344  \"uint256 requiredValue = requiredHook.quoteDispatch(metadata, message)\"\n                let var_requiredValue := expr_1\n                /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                if /** @src 0:10429:10454  \"msg.value < requiredValue\" */ lt(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 0:10429:10454  \"msg.value < requiredValue\" */ expr_1)\n                /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                {\n                    /// @src 0:10470:10495  \"requiredValue = msg.value\"\n                    var_requiredValue := /** @src 0:10429:10438  \"msg.value\" */ callvalue()\n                }\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                if iszero(extcodesize(cleaned))\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    revert(/** @src 0:9749:9750  \"0\" */ _2, _2)\n                }\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                let _12 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_7)\n                let _13 := shl(224, 0x086011b9)\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                mstore(_12, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _13)\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                let _14 := call(gas(), cleaned, var_requiredValue, _12, sub(abi_encode_bytes_calldata_bytes(add(_12, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ 4), /** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ var_metadata_offset, var_metadata_length, expr_396_mpos), _12), _12, /** @src 0:9749:9750  \"0\" */ _2)\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                if iszero(_14)\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let pos_1 := mload(_7)\n                    returndatacopy(pos_1, /** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                if _14\n                {\n                    finalize_allocation_13634(_12)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    _2 := /** @src 0:9749:9750  \"0\" */ _2\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _15 := and(/** @src 0:10591:10608  \"hook.postDispatch\" */ var_hook_369_address, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1)\n                let diff := sub(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_requiredValue)\n                if gt(diff, /** @src 0:10429:10438  \"msg.value\" */ callvalue())\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                {\n                    mstore(/** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ 4, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x11)\n                    revert(/** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x24)\n                }\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                if iszero(extcodesize(_15))\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    revert(/** @src 0:9749:9750  \"0\" */ _2, _2)\n                }\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                let _16 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_7)\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                mstore(_16, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _13)\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                let _17 := call(gas(), _15, diff, _16, sub(abi_encode_bytes_calldata_bytes(add(_16, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ 4), /** @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\" */ var_metadata_offset, var_metadata_length, expr_396_mpos), _16), _16, /** @src 0:9749:9750  \"0\" */ _2)\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                if iszero(_17)\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let pos_2 := mload(_7)\n                    returndatacopy(pos_2, /** @src 0:9749:9750  \"0\" */ _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                if _17\n                {\n                    finalize_allocation_13634(_16)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    if _2\n                    {\n                        revert(/** @src 0:9749:9750  \"0\" */ _2, _2)\n                    }\n                }\n                /// @src 0:10672:10681  \"return id\"\n                var := expr\n            }\n            /// @ast-id 521 @src 0:11197:11790  \"function quoteDispatch(...\"\n            function fun_quoteDispatch(var_destinationDomain, var_recipientAddress, var_messageBody_475_offset, var_messageBody_length, var_metadata_477_offset, var_metadata_477_length, var_hook_address) -> var_fee\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                if /** @src 0:11443:11470  \"address(hook) == address(0)\" */ iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:11443:11456  \"address(hook)\" */ var_hook_address, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1))\n                /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                {\n                    /// @src 0:11486:11504  \"hook = defaultHook\"\n                    var_hook_address := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(sload(/** @src 0:11493:11504  \"defaultHook\" */ 0x68), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1)\n                }\n                /// @src 0:11548:11657  \"_buildMessage(...\"\n                let expr_506_mpos := fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_475_offset, var_messageBody_length)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let cleaned := and(sload(/** @src 0:11686:11698  \"requiredHook\" */ 0x69), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1)\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                let _2 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                let _3 := shl(228, 0x0aaccd23)\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                mstore(_2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _3)\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                let _4 := 32\n                let _5 := staticcall(gas(), cleaned, _2, sub(abi_encode_bytes_calldata_bytes(add(_2, 4), var_metadata_477_offset, var_metadata_477_length, expr_506_mpos), _2), _2, _4)\n                if iszero(_5)\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src 0:11468:11469  \"0\" */ 0x00, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                let expr := /** @src 0:11468:11469  \"0\" */ 0x00\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    if slt(sub(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_2, _6), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2), /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    {\n                        revert(/** @src 0:11468:11469  \"0\" */ expr, expr)\n                    }\n                    /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                    expr := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_2)\n                }\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                let _7 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                mstore(_7, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _3)\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                let _8 := staticcall(gas(), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(/** @src 0:11746:11764  \"hook.quoteDispatch\" */ var_hook_address, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _1), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _7, sub(abi_encode_bytes_calldata_bytes(add(_7, /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ 4), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ var_metadata_477_offset, var_metadata_477_length, expr_506_mpos), _7), _7, /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4)\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                if iszero(_8)\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let pos_1 := mload(64)\n                    returndatacopy(pos_1, /** @src 0:11468:11469  \"0\" */ 0x00, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                let expr_1 := /** @src 0:11468:11469  \"0\" */ 0x00\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                if _8\n                {\n                    let _9 := /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4\n                    /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                    if gt(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4, /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    if slt(sub(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ add(_7, _9), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _7), /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    {\n                        revert(/** @src 0:11468:11469  \"0\" */ expr_1, expr_1)\n                    }\n                    /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                    expr_1 := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(_7)\n                }\n                let sum := add(expr, expr_1)\n                if gt(expr, sum)\n                {\n                    mstore(/** @src 0:11468:11469  \"0\" */ 0x00, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ 4, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x11)\n                    revert(/** @src 0:11468:11469  \"0\" */ 0x00, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x24)\n                }\n                /// @src 0:11667:11783  \"return...\"\n                var_fee := sum\n            }\n            /// @ast-id 538 @src 0:11973:12096  \"function delivered(bytes32 _id) public view override returns (bool) {...\"\n            function fun_delivered(var_id) -> var\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_id)\n                mstore(0x20, /** @src 0:12058:12068  \"deliveries\" */ 0x6a)\n                /// @src 0:12051:12089  \"return deliveries[_id].blockNumber > 0\"\n                var := /** @src 0:12058:12089  \"deliveries[_id].blockNumber > 0\" */ iszero(iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(shr(160, sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x40))), 0xffffffffffff)))\n            }\n            /// @ast-id 675 @src 0:13635:14531  \"function recipientIsm(...\"\n            function fun_recipientIsm(var_recipient) -> var_address\n            {\n                /// @src 0:13901:14026  \"abi.encodeCall(...\"\n                let expr_mpos := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                /// @src 0:13901:14026  \"abi.encodeCall(...\"\n                let _1 := add(expr_mpos, 0x20)\n                mstore(_1, shl(224, 0xde523cf3))\n                mstore(expr_mpos, 4)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let newFreePtr := add(expr_mpos, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(/** @src 0:13901:14026  \"abi.encodeCall(...\" */ 4, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 0x41)\n                    revert(0, /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 36)\n                }\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                mstore(64, newFreePtr)\n                /// @src 0:13901:14026  \"abi.encodeCall(...\"\n                let _2 := 0\n                /// @src 0:13866:14036  \"_recipient.staticcall(...\"\n                let expr_component := staticcall(gas(), var_recipient, _1, mload(expr_mpos), /** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2, _2)\n                /// @src 0:13866:14036  \"_recipient.staticcall(...\"\n                let data := /** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _3 := returndatasize()\n                    let _4 := array_allocation_size_bytes(_3)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _4)\n                    mstore(memPtr, _3)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 0x20), _2, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ returndatasize())\n                }\n                /// @src 0:14108:14141  \"success && returnData.length != 0\"\n                let expr := expr_component\n                if expr_component\n                {\n                    expr := /** @src 0:14119:14141  \"returnData.length != 0\" */ iszero(iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(/** @src 0:14119:14136  \"returnData.length\" */ data)))\n                }\n                /// @src 0:14104:14421  \"if (success && returnData.length != 0) {...\"\n                if expr\n                {\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    if slt(sub(/** @src 0:14225:14258  \"abi.decode(returnData, (address))\" */ add(data, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(/** @src 0:14225:14258  \"abi.decode(returnData, (address))\" */ data)), data), /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 0x20)\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    {\n                        revert(/** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2, _2)\n                    }\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let value := mload(/** @src 0:14225:14258  \"abi.decode(returnData, (address))\" */ add(data, /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 0x20))\n                    /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                    let _5 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _5))\n                    {\n                        revert(/** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2, _2)\n                    }\n                    /// @src 0:14318:14411  \"if (ism != address(0)) {...\"\n                    if /** @src 0:14322:14339  \"ism != address(0)\" */ iszero(iszero(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _5))\n                    /// @src 0:14318:14411  \"if (ism != address(0)) {...\"\n                    {\n                        /// @src 0:14359:14396  \"return IInterchainSecurityModule(ism)\"\n                        var_address := _5\n                        leave\n                    }\n                }\n                /// @src 0:14507:14524  \"return defaultIsm\"\n                var_address := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(sload(/** @src 0:14514:14524  \"defaultIsm\" */ 0x67), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n            }\n            /// @ast-id 701 @src 0:14589:15052  \"function _buildMessage(...\"\n            function fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_681_offset, var_messageBody_681_length) -> var_mpos\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _1 := sload(/** @src 0:14852:14857  \"nonce\" */ 0x65)\n                /// @src 8:1577:1807  \"abi.encodePacked(...\"\n                let expr_mpos := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ mload(64)\n                mstore(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ add(expr_mpos, 0x20), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shl(248, 3))\n                let _2 := shl(224, 0xffffffff)\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 33), and(shl(224, _1), _2))\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 37), and(shl(224, /** @src 0:14875:14886  \"localDomain\" */ loadimmutable(\"41\")), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _2))\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 41), /** @src 0:14904:14914  \"msg.sender\" */ caller())\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 73), and(shl(224, var_destinationDomain), _2))\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 77), var_recipientAddress)\n                calldatacopy(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 109), var_messageBody_681_offset, var_messageBody_681_length)\n                let _3 := add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_messageBody_681_length)\n                mstore(add(_3, 109), /** @src -1:-1:-1 */ 0)\n                /// @src 8:1577:1807  \"abi.encodePacked(...\"\n                let _4 := sub(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ _3, /** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos)\n                mstore(expr_mpos, add(_4, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 77))\n                /// @src 8:1577:1807  \"abi.encodePacked(...\"\n                finalize_allocation(expr_mpos, add(_4, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ 109))\n                /// @src 0:14769:15045  \"return...\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 1478 @src 8:2845:2994  \"function origin(bytes calldata _message) internal pure returns (uint32) {...\"\n            function fun_origin(var_message_offset, var_message_1461_length) -> var\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                if gt(/** @src 8:460:461  \"9\" */ 0x09, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_message_1461_length)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:2927:2987  \"return uint32(bytes4(_message[ORIGIN_OFFSET:SENDER_OFFSET]))\"\n                var := /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ shr(224, /** @src 8:460:461  \"9\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(var_message_offset, /** @src 8:412:413  \"5\" */ 0x05)))\n            }\n            /// @ast-id 1495 @src 8:3171:3319  \"function sender(bytes calldata _message) internal pure returns (bytes32) {...\"\n            function fun_sender(var_message_1481_offset, var_message_length) -> var\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                if gt(/** @src 8:513:515  \"41\" */ 0x29, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ var_message_length)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:3254:3312  \"return bytes32(_message[SENDER_OFFSET:DESTINATION_OFFSET])\"\n                var := /** @src 8:513:515  \"41\" */ calldataload(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ add(var_message_1481_offset, /** @src 8:460:461  \"9\" */ 0x09))\n            }\n            /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n            function require_helper_stringliteral_d688(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 43)\n                    mstore(add(memPtr, 68), \"Initializable: contract is not i\")\n                    mstore(add(memPtr, 100), \"nitializing\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2012 @src 14:1620:1750  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let cleaned := and(sload(/** @src 14:1534:1540  \"_owner\" */ 0x33), /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 14:1683:1706  \"owner() == _msgSender()\" */ eq(/** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ cleaned, /** @src 17:965:975  \"msg.sender\" */ caller()))\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2069 @src 14:2687:2874  \"function _transferOwnership(address newOwner) internal virtual {...\"\n            function fun_transferOwnership(var_newOwner)\n            {\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _1 := sload(/** @src 14:2779:2785  \"_owner\" */ 0x33)\n                /// @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\"\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := and(var_newOwner, _2)\n                sstore(/** @src 14:2779:2785  \"_owner\" */ 0x33, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), _3))\n                /// @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:842:15054  \"contract Mailbox is IMailbox, Indexed, Versioned, OwnableUpgradeable {...\" */ and(_1, _2), /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ _3)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209f6c1a50379f1a59e76622d952cfc6ed7480f95aba0fb53a288c0cd292e31c0764736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100046bafba5dd92ff79f9392d543d5b79cf5a93416cba1ec2658ba129833ca",
        "factoryDependencies": {}
      }
    },
    "contracts/hooks/libs/AbstractPostDispatchHook.sol": {
      "AbstractPostDispatchHook": {
        "abi": [
          {
            "inputs": [],
            "name": "hookType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "postDispatch",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "name": "supportsMetadata",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hookType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"postDispatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"supportsMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"}},\"quoteDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"},\"returns\":{\"_0\":\"Quoted payment for the postDispatch call\"}},\"supportsMetadata(bytes)\":{\"params\":{\"metadata\":\"metadata\"},\"returns\":{\"_0\":\"Whether the hook supports metadata\"}}},\"title\":\"AbstractPostDispatch\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hookType()\":{\"notice\":\"Returns an enum that represents the type of hook\"},\"postDispatch(bytes,bytes)\":{\"notice\":\"Post action after a message is dispatched via the Mailbox\"},\"quoteDispatch(bytes,bytes)\":{\"notice\":\"Compute the payment required by the postDispatch call\"},\"supportsMetadata(bytes)\":{\"notice\":\"Returns whether the hook supports metadata\"}},\"notice\":\"Abstract post dispatch hook supporting the current global hook metadata variant.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hooks/libs/AbstractPostDispatchHook.sol\":\"AbstractPostDispatchHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/hooks/libs/AbstractPostDispatchHook.sol\":{\"keccak256\":\"0x1cd99f22ad0fe26864dbb37fc6ab9d657900c49d1eddf62ef6eeaf6cdff797f9\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://08a7d7de78c8d8a8f8f2939be3c0892b1de9c7c60106562ddeebd79655e3ae57\",\"dweb:/ipfs/QmTT2RVm7gUUVVvBTd3ZKjAZDc2Y4Gi1G9Qxa2bHiWE3AL\"]},\"contracts/hooks/libs/StandardHookMetadata.sol\":{\"keccak256\":\"0x28e8be5b70f6b5b7c6a52c4906635639ae5ef3fe2ac970b7c30299e939b38e42\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6a3a41ef53096ed385dd593a8b32955c12ced1b210102f84990f30ee1311b2f4\",\"dweb:/ipfs/QmZyNfa4tpL5WhpGW73RCzu6rWMFW88Uvm54J5gq1hvXgQ\"]},\"contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447\",\"dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "hookType()": "e445e7dd",
            "postDispatch(bytes,bytes)": "086011b9",
            "quoteDispatch(bytes,bytes)": "aaccd230",
            "supportsMetadata(bytes)": "e5320bb9"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/hooks/libs/StandardHookMetadata.sol": {
      "StandardHookMetadata": {
        "abi": [
          {
            "inputs": [],
            "name": "VARIANT",
            "outputs": [
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VARIANT\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Format of metadata: [0:2] variant [2:34] msg.value [34:66] Gas limit for message (IGP) [66:86] Refund address for message (IGP) [86:] Custom metadata\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hooks/libs/StandardHookMetadata.sol\":\"StandardHookMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/hooks/libs/StandardHookMetadata.sol\":{\"keccak256\":\"0x28e8be5b70f6b5b7c6a52c4906635639ae5ef3fe2ac970b7c30299e939b38e42\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6a3a41ef53096ed385dd593a8b32955c12ced1b210102f84990f30ee1311b2f4\",\"dweb:/ipfs/QmZyNfa4tpL5WhpGW73RCzu6rWMFW88Uvm54J5gq1hvXgQ\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"StandardHookMetadata.sol:StandardHookMetadata\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell 17303681082299801420351213943690785200614881515915110870710462726676936654848\nCPI0_4:\n\t.cell 2535301202817642044428229017600\n",
          "bytecode": {
            "object": "0000008003000039000000400030043f00000001022001900000000f0000c13d00000000020100190000000902200198000000170000613d000000000101043b0000000a011001970000000b0110009c000000170000c13d0000000101000039000000800010043f0000000c010000410000001a0001042e0000000001000416000000000101004b000000170000c13d00000020010000390000010000100443000001200000044300000008010000410000001a0001042e00000000010000190000001b0001043000000019000004320000001a0001042e0000001b000104300000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000002641895300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000000000000000000000000000004f801e22bd9611865ab2c5b41c14a94b394cc5094561024b1d385945c27ba211"
          },
          "methodIdentifiers": {
            "VARIANT()": "26418953"
          }
        },
        "irOptimized": "/// @use-src 2:\"contracts/hooks/libs/StandardHookMetadata.sol\"\nobject \"StandardHookMetadata_1071\" {\n    code {\n        {\n            /// @src 2:564:5547  \"library StandardHookMetadata {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StandardHookMetadata_1071_deployed\")\n            codecopy(_1, dataoffset(\"StandardHookMetadata_1071_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 2:\"contracts/hooks/libs/StandardHookMetadata.sol\"\n    object \"StandardHookMetadata_1071_deployed\" {\n        code {\n            {\n                /// @src 2:564:5547  \"library StandardHookMetadata {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    if eq(0x26418953, shr(224, calldataload(0)))\n                    {\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, /** @src 2:1025:1026  \"1\" */ 0x01)\n                        /// @src 2:564:5547  \"library StandardHookMetadata {...\"\n                        return(_1, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122057c57c9ddc35489ecde522e05f69289c814453553ac584dffd95f274cf97222c64736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100000f74752fc3b402d44c99241ca757fcfbd2c336707b5d34a9984186a2f3",
        "factoryDependencies": {}
      }
    },
    "contracts/interfaces/IInterchainSecurityModule.sol": {
      "IInterchainSecurityModule": {
        "abi": [
          {
            "inputs": [],
            "name": "moduleType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "verify",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"moduleType()\":{\"details\":\"Relayers infer how to fetch and format metadata.\"},\"verify(bytes,bytes)\":{\"params\":{\"_message\":\"Hyperlane encoded interchain message\",\"_metadata\":\"Off-chain metadata provided by a relayer, specific to the security model encoded by the module (e.g. validator signatures)\"},\"returns\":{\"_0\":\"True if the message was verified\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"moduleType()\":{\"notice\":\"Returns an enum that represents the type of security model encoded by this ISM.\"},\"verify(bytes,bytes)\":{\"notice\":\"Defines a security model responsible for verifying interchain messages based on the provided metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":\"IInterchainSecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "moduleType()": "6465e69f",
            "verify(bytes,bytes)": "f7e83aee"
          }
        },
        "irOptimized": ""
      },
      "ISpecifiesInterchainSecurityModule": {
        "abi": [
          {
            "inputs": [],
            "name": "interchainSecurityModule",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"interchainSecurityModule\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":\"ISpecifiesInterchainSecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "interchainSecurityModule()": "de523cf3"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/interfaces/IMailbox.sol": {
      "IMailbox": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "destination",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "recipient",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "Dispatch",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "DispatchId",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "origin",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "sender",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "Process",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "ProcessId",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "defaultHook",
            "outputs": [
              {
                "internalType": "contract IPostDispatchHook",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "defaultIsm",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "delivered",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "body",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "customHookMetadata",
                "type": "bytes"
              },
              {
                "internalType": "contract IPostDispatchHook",
                "name": "customHook",
                "type": "address"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "body",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "defaultHookMetadata",
                "type": "bytes"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "latestDispatchedId",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "localDomain",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "process",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "customHookMetadata",
                "type": "bytes"
              },
              {
                "internalType": "contract IPostDispatchHook",
                "name": "customHook",
                "type": "address"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "defaultHookMetadata",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "recipientIsm",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "module",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "requiredHook",
            "outputs": [
              {
                "internalType": "contract IPostDispatchHook",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Dispatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"DispatchId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Process\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"ProcessId\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultHook\",\"outputs\":[{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIsm\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"delivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"body\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"customHookMetadata\",\"type\":\"bytes\"},{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"customHook\",\"type\":\"address\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"body\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"defaultHookMetadata\",\"type\":\"bytes\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestDispatchedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"process\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"customHookMetadata\",\"type\":\"bytes\"},{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"customHook\",\"type\":\"address\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"defaultHookMetadata\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"recipientIsm\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"module\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredHook\",\"outputs\":[{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Dispatch(address,uint32,bytes32,bytes)\":{\"params\":{\"destination\":\"The destination domain of the message\",\"message\":\"Raw bytes of message\",\"recipient\":\"The message recipient address on `destination`\",\"sender\":\"The address that dispatched the message\"}},\"DispatchId(bytes32)\":{\"params\":{\"messageId\":\"The unique message identifier\"}},\"Process(uint32,bytes32,address)\":{\"params\":{\"origin\":\"The origin domain of the message\",\"recipient\":\"The address that handled the message\",\"sender\":\"The message sender address on `origin`\"}},\"ProcessId(bytes32)\":{\"params\":{\"messageId\":\"The unique message identifier\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Dispatch(address,uint32,bytes32,bytes)\":{\"notice\":\"Emitted when a new message is dispatched via Hyperlane\"},\"DispatchId(bytes32)\":{\"notice\":\"Emitted when a new message is dispatched via Hyperlane\"},\"Process(uint32,bytes32,address)\":{\"notice\":\"Emitted when a Hyperlane message is delivered\"},\"ProcessId(bytes32)\":{\"notice\":\"Emitted when a Hyperlane message is processed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMailbox.sol\":\"IMailbox\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"contracts/interfaces/IMailbox.sol\":{\"keccak256\":\"0x9cd728ba304279775818f8c7b4c02f8c5dd2b28e051ec466dbe36129be01a6ee\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://23461e80c67508d6f0f94a317c48d99a1942209ebc306b50f843b3f1cc920bac\",\"dweb:/ipfs/QmXbJSFtHfxpHwtvGZJBodSDcQHAb6fGsPU17w11dapVnC\"]},\"contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447\",\"dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "defaultHook()": "3d1250b7",
            "defaultIsm()": "6e5f516e",
            "delivered(bytes32)": "e495f1d4",
            "dispatch(uint32,bytes32,bytes)": "fa31de01",
            "dispatch(uint32,bytes32,bytes,bytes)": "48aee8d4",
            "dispatch(uint32,bytes32,bytes,bytes,address)": "10b83dc0",
            "latestDispatchedId()": "134fbb4f",
            "localDomain()": "8d3638f4",
            "process(bytes,bytes)": "7c39d130",
            "quoteDispatch(uint32,bytes32,bytes)": "9c42bd18",
            "quoteDispatch(uint32,bytes32,bytes,bytes)": "f7ccd321",
            "quoteDispatch(uint32,bytes32,bytes,bytes,address)": "81d2ea95",
            "recipientIsm(address)": "e70f48ac",
            "requiredHook()": "d6d08a09"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/interfaces/IMessageRecipient.sol": {
      "IMessageRecipient": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_origin",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_sender",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "handle",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMessageRecipient.sol\":\"IMessageRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "handle(uint32,bytes32,bytes)": "56d5d475"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/interfaces/hooks/IPostDispatchHook.sol": {
      "IPostDispatchHook": {
        "abi": [
          {
            "inputs": [],
            "name": "hookType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "postDispatch",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "name": "supportsMetadata",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"hookType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"postDispatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"supportsMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"}},\"quoteDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"},\"returns\":{\"_0\":\"Quoted payment for the postDispatch call\"}},\"supportsMetadata(bytes)\":{\"params\":{\"metadata\":\"metadata\"},\"returns\":{\"_0\":\"Whether the hook supports metadata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hookType()\":{\"notice\":\"Returns an enum that represents the type of hook\"},\"postDispatch(bytes,bytes)\":{\"notice\":\"Post action after a message is dispatched via the Mailbox\"},\"quoteDispatch(bytes,bytes)\":{\"notice\":\"Compute the payment required by the postDispatch call\"},\"supportsMetadata(bytes)\":{\"notice\":\"Returns whether the hook supports metadata\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/hooks/IPostDispatchHook.sol\":\"IPostDispatchHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447\",\"dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "hookType()": "e445e7dd",
            "postDispatch(bytes,bytes)": "086011b9",
            "quoteDispatch(bytes,bytes)": "aaccd230",
            "supportsMetadata(bytes)": "e5320bb9"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/libs/Indexed.sol": {
      "Indexed": {
        "abi": [
          {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [],
            "name": "deployedBlock",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deployedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Indexed.sol\":\"Indexed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/libs/Indexed.sol\":{\"keccak256\":\"0xd26c31976c35890709b1736fea29598ef9df51929066b79ceca42e155ce9867c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ff131e5531af4b599b92592b74dd9d4da01fb3e7a9ee0d420ea3d4fabf826f7f\",\"dweb:/ipfs/QmR4Q2jeKchTvjze3kYpdWd8rV5csTGoqkw2EHwR5iDYC3\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"Indexed.sol:Indexed\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_2[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_3[0], r1, r1\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[2]\n\tadd\t0, r0, stack-[1]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t2, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32779, r0, r1\n\tadd\t4, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t3, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_0[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tadd\t1, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__cxa_throw:\n.func_begin1:\n\trevert\n.func_end1:\n\n__system_request:\n.func_begin2:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t5, r3, r1\n\tjump.lt\t@.BB2_4\n\tadd\t4, r0, r1\n\tadd\tr0, r0, r2\n.BB2_3:\n\tshl.s\t5, r2, r6\n\tadd\tr4, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\tstack[r6], r0, r6\n\tst.2.inc\tr1, r6, r1\n\tadd\t1, r2, r2\n\tsub!\tr1, r3, r6\n\tjump.lt\t@.BB2_3\n.BB2_4:\n\tadd\t@CPI2_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_5\n\tld\tr1, r1\n\tret\n.BB2_5:\n\trevert\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI0_1:\n\t.cell 53919893334301279589334030174039261357415493651629346657050491355136\nCPI0_2:\n\t.cell 340282366604025813406317257057592410112\nCPI0_3:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_4:\n\t.cell -56577120945706314306307990248396844536710846755512809994118378586995739852800\nCPI0_5:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_6:\n\t.cell 2535301202817642044428229017600\nCPI2_0:\n\t.cell 4294967295\nCPI2_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n",
          "bytecode": {
            "object": "000300000000000200000001022001900000001c0000c13d0000008002000039000000400020043f00000000020100190000001902200198000000310000613d000000000101043b0000001a011001970000001b0110009c000000310000c13d0000000001000416000000000101004b000000310000c13d0000000001000412000200000001001d000100000000001d000080050100003900000044030000390000000004000415000000020440008a00000005044002100000001c02000041005800340000040f000000800010043f0000001d01000041000000590001042e000000a001000039000000400010043f0000000001000416000000000101004b000000310000c13d0000800b0100003900000004030000390000000004000415000000030440008a00000005044002100000001702000041005800340000040f000000800010043f0000014000000443000001600010044300000020010000390000010000100443000000010100003900000120001004430000001801000041000000590001042e00000000010000190000005a00010430000000000001042f00000000050100190000000000200439000000050130008c000000420000413d000000040100003900000000020000190000000506200210000000000664001900000005066002700000000006060031000000000161043a0000000102200039000000000631004b0000003a0000413d0000001e0100004100000000020004140000001e0420009c00000000020180190000001e0430009c00000000030180190000006001300210000000c002200210000000000112019f0000001f011001c70000000002050019005800530000040f0000000102200190000000520000613d000000000101043b000000000001042d000000000001042f00000056002104230000000102000039000000000001042d0000000002000019000000000001042d0000005800000432000000590001042e0000005a00010430000000000000000042cbb15ccdc3cad6266b0e7a08c0454b23bf29dc2df74b6f3c209e9336465bd1000000020000000000000000000000000000008000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff0000000000000000000000000000000000000000000000000000000082ea7bfe00000000000000000000000000000000000000000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000000000000000000000ffffffff020000020000000000000000000000000000000000000000000000000000000095f372a832d8a53938f5dd31121c6c1f7b7e97dae49f90211bb0068b816eb227"
          },
          "methodIdentifiers": {
            "deployedBlock()": "82ea7bfe"
          }
        },
        "irOptimized": "/// @use-src 7:\"contracts/libs/Indexed.sol\"\nobject \"Indexed_1344\" {\n    code {\n        {\n            /// @src 7:72:201  \"contract Indexed {...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 7:164:192  \"deployedBlock = block.number\"\n            mstore(128, /** @src 7:180:192  \"block.number\" */ number())\n            /// @src 7:72:201  \"contract Indexed {...\"\n            let _2 := datasize(\"Indexed_1344_deployed\")\n            codecopy(_1, dataoffset(\"Indexed_1344_deployed\"), _2)\n            setimmutable(_1, \"1334\", mload(/** @src 7:164:192  \"deployedBlock = block.number\" */ 128))\n            /// @src 7:72:201  \"contract Indexed {...\"\n            return(_1, _2)\n        }\n    }\n    /// @use-src 7:\"contracts/libs/Indexed.sol\"\n    object \"Indexed_1344_deployed\" {\n        code {\n            {\n                /// @src 7:72:201  \"contract Indexed {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0x82ea7bfe, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        mstore(_1, /** @src 7:95:133  \"uint256 public immutable deployedBlock\" */ loadimmutable(\"1334\"))\n                        /// @src 7:72:201  \"contract Indexed {...\"\n                        return(_1, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122094db627eab64ec80a8532de4f6e566b286921379a3ac2ff52f4851ba50325e4464736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000216aaff03a1cf9462bb89f5e993aa0d315b8854e38f26289c4cb38f8b8",
        "factoryDependencies": {}
      }
    },
    "contracts/libs/Message.sol": {
      "Message": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Hyperlane Message Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Library for formatted messages used by Mailbox*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/Message.sol\":\"Message\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/libs/Message.sol\":{\"keccak256\":\"0x5319af5ade07bcb021d6373f0713f24f34431def78cda16fea6755f580fb5e78\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f531eecebd22a535398def83b078aff4f72d88940a0e9474ad3244a555f00d53\",\"dweb:/ipfs/QmQjtjpf4qwaM9QVyWBsogRvZeokKESTVdsX3z9mt1wZFa\"]},\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52\",\"dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"Message.sol:Message\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000018091f584adba55274d091e4a4f5664a462462f4149b0a3b0409769b8bae57f3"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 8:\"contracts/libs/Message.sol\"\nobject \"Message_1579\" {\n    code {\n        {\n            /// @src 8:219:4988  \"library Message {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Message_1579_deployed\")\n            codecopy(_1, dataoffset(\"Message_1579_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"contracts/libs/Message.sol\"\n    object \"Message_1579_deployed\" {\n        code {\n            {\n                /// @src 8:219:4988  \"library Message {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122058c8ae8731ed6b4b45fd32367344a809b3b2f7a64a29254b7a5896a2efae180064736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100000798278af38def2775925d2b399bef3c65df5238d36948077602f87afb",
        "factoryDependencies": {}
      }
    },
    "contracts/libs/TypeCasts.sol": {
      "TypeCasts": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/TypeCasts.sol\":\"TypeCasts\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52\",\"dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TypeCasts.sol:TypeCasts\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000009f123f89310cd475062e1f32df8e00aa6da6c5595cc57db29971938ceeefd6f1"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 9:\"contracts/libs/TypeCasts.sol\"\nobject \"TypeCasts_1620\" {\n    code {\n        {\n            /// @src 9:73:427  \"library TypeCasts {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"TypeCasts_1620_deployed\")\n            codecopy(_1, dataoffset(\"TypeCasts_1620_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"contracts/libs/TypeCasts.sol\"\n    object \"TypeCasts_1620_deployed\" {\n        code {\n            {\n                /// @src 9:73:427  \"library TypeCasts {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122039e3cade4cc62d4b19c08b6456795fbd434ea1e800ecd0a5bfba94c3819e400164736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000007855f292caaee13302853241b4c46b31ae98545d877f7add323761f81",
        "factoryDependencies": {}
      }
    },
    "contracts/mock/MockMailbox.sol": {
      "MockMailbox": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_domain",
                "type": "uint32"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "DefaultHookSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "module",
                "type": "address"
              }
            ],
            "name": "DefaultIsmSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "destination",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "recipient",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "Dispatch",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "DispatchId",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "origin",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "sender",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "Process",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              }
            ],
            "name": "ProcessId",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "RequiredHookSet",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "VERSION",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "addInboundMessage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_domain",
                "type": "uint32"
              },
              {
                "internalType": "contract MockMailbox",
                "name": "_mailbox",
                "type": "address"
              }
            ],
            "name": "addRemoteMailbox",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "defaultHook",
            "outputs": [
              {
                "internalType": "contract IPostDispatchHook",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "defaultIsm",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_id",
                "type": "bytes32"
              }
            ],
            "name": "delivered",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "deployedBlock",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "contract IPostDispatchHook",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "hookMetadata",
                "type": "bytes"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_messageBody",
                "type": "bytes"
              }
            ],
            "name": "dispatch",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "name": "inboundMessages",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "inboundProcessedNonce",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "inboundUnprocessedNonce",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_defaultIsm",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_defaultHook",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "_requiredHook",
                "type": "address"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "latestDispatchedId",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "localDomain",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "nonce",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "process",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "processNextInboundMessage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_id",
                "type": "bytes32"
              }
            ],
            "name": "processedAt",
            "outputs": [
              {
                "internalType": "uint48",
                "name": "",
                "type": "uint48"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_id",
                "type": "bytes32"
              }
            ],
            "name": "processor",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "contract IPostDispatchHook",
                "name": "hook",
                "type": "address"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "destinationDomain",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "recipientAddress",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "messageBody",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "defaultHookMetadata",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "fee",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_recipient",
                "type": "address"
              }
            ],
            "name": "recipientIsm",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "name": "remoteMailboxes",
            "outputs": [
              {
                "internalType": "contract MockMailbox",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "requiredHook",
            "outputs": [
              {
                "internalType": "contract IPostDispatchHook",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_hook",
                "type": "address"
              }
            ],
            "name": "setDefaultHook",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_module",
                "type": "address"
              }
            ],
            "name": "setDefaultIsm",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_hook",
                "type": "address"
              }
            ],
            "name": "setRequiredHook",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"DefaultHookSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"DefaultIsmSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"destination\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"Dispatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"DispatchId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"Process\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"}],\"name\":\"ProcessId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"RequiredHookSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"addInboundMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"},{\"internalType\":\"contract MockMailbox\",\"name\":\"_mailbox\",\"type\":\"address\"}],\"name\":\"addRemoteMailbox\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultHook\",\"outputs\":[{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultIsm\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"delivered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployedBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"hookMetadata\",\"type\":\"bytes\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_messageBody\",\"type\":\"bytes\"}],\"name\":\"dispatch\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"inboundMessages\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inboundProcessedNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inboundUnprocessedNonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultIsm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultHook\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_requiredHook\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestDispatchedId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"process\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"processNextInboundMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"processedAt\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"processor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"hook\",\"type\":\"address\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipientAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"defaultHookMetadata\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"recipientIsm\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"remoteMailboxes\",\"outputs\":[{\"internalType\":\"contract MockMailbox\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredHook\",\"outputs\":[{\"internalType\":\"contract IPostDispatchHook\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hook\",\"type\":\"address\"}],\"name\":\"setDefaultHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_module\",\"type\":\"address\"}],\"name\":\"setDefaultIsm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hook\",\"type\":\"address\"}],\"name\":\"setRequiredHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultHookSet(address)\":{\"params\":{\"hook\":\"The new default hook\"}},\"DefaultIsmSet(address)\":{\"params\":{\"module\":\"The new default ISM\"}},\"Dispatch(address,uint32,bytes32,bytes)\":{\"params\":{\"destination\":\"The destination domain of the message\",\"message\":\"Raw bytes of message\",\"recipient\":\"The message recipient address on `destination`\",\"sender\":\"The address that dispatched the message\"}},\"DispatchId(bytes32)\":{\"params\":{\"messageId\":\"The unique message identifier\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Process(uint32,bytes32,address)\":{\"params\":{\"origin\":\"The origin domain of the message\",\"recipient\":\"The address that handled the message\",\"sender\":\"The message sender address on `origin`\"}},\"ProcessId(bytes32)\":{\"params\":{\"messageId\":\"The unique message identifier\"}},\"RequiredHookSet(address)\":{\"params\":{\"hook\":\"The new required hook\"}}},\"kind\":\"dev\",\"methods\":{\"delivered(bytes32)\":{\"params\":{\"_id\":\"The message ID to check.\"},\"returns\":{\"_0\":\"True if the message has been delivered.\"}},\"dispatch(uint32,bytes32,bytes)\":{\"params\":{\"_destinationDomain\":\"Domain of destination chain\",\"_messageBody\":\"Raw bytes content of message body\",\"_recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"The message ID inserted into the Mailbox's merkle tree\"}},\"dispatch(uint32,bytes32,bytes,bytes)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"hookMetadata\":\"Metadata used by the post dispatch hook\",\"messageBody\":\"Raw bytes content of message body\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"The message ID inserted into the Mailbox's merkle tree\"}},\"dispatch(uint32,bytes32,bytes,bytes,address)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"hook\":\"Custom hook to use instead of the default\",\"messageBody\":\"Raw bytes content of message body\",\"metadata\":\"Metadata used by the post dispatch hook\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"The message ID inserted into the Mailbox's merkle tree\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"process(bytes,bytes)\":{\"params\":{\"_message\":\"Formatted Hyperlane message (refer to Message.sol).\",\"_metadata\":\"Metadata used by the ISM to verify `_message`.\"}},\"processedAt(bytes32)\":{\"params\":{\"_id\":\"The message ID to check.\"},\"returns\":{\"_0\":\"The number of the block that the message was processed at.\"}},\"processor(bytes32)\":{\"params\":{\"_id\":\"The message ID to check.\"},\"returns\":{\"_0\":\"The account that processed the message.\"}},\"quoteDispatch(uint32,bytes32,bytes)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message body\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"fee\":\"The payment required to dispatch the message\"}},\"quoteDispatch(uint32,bytes32,bytes,bytes)\":{\"params\":{\"defaultHookMetadata\":\"Metadata used by the default post dispatch hook\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message body\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"fee\":\"The payment required to dispatch the message\"}},\"quoteDispatch(uint32,bytes32,bytes,bytes,address)\":{\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"hook\":\"Custom hook to use instead of the default\",\"messageBody\":\"Raw bytes content of message body\",\"metadata\":\"Metadata used by the post dispatch hook\",\"recipientAddress\":\"Address of recipient on destination chain as bytes32\"},\"returns\":{\"fee\":\"The payment required to dispatch the message\"}},\"recipientIsm(address)\":{\"params\":{\"_recipient\":\"The message recipient whose ISM should be returned.\"},\"returns\":{\"_0\":\"The ISM to use for `_recipient`.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDefaultHook(address)\":{\"params\":{\"_hook\":\"The new default post dispatch hook. Must be a contract.\"}},\"setDefaultIsm(address)\":{\"params\":{\"_module\":\"The new default ISM. Must be a contract.\"}},\"setRequiredHook(address)\":{\"params\":{\"_hook\":\"The new default post dispatch hook. Must be a contract.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DefaultHookSet(address)\":{\"notice\":\"Emitted when the default hook is updated\"},\"DefaultIsmSet(address)\":{\"notice\":\"Emitted when the default ISM is updated\"},\"Dispatch(address,uint32,bytes32,bytes)\":{\"notice\":\"Emitted when a new message is dispatched via Hyperlane\"},\"DispatchId(bytes32)\":{\"notice\":\"Emitted when a new message is dispatched via Hyperlane\"},\"Process(uint32,bytes32,address)\":{\"notice\":\"Emitted when a Hyperlane message is delivered\"},\"ProcessId(bytes32)\":{\"notice\":\"Emitted when a Hyperlane message is processed\"},\"RequiredHookSet(address)\":{\"notice\":\"Emitted when the required hook is updated\"}},\"kind\":\"user\",\"methods\":{\"delivered(bytes32)\":{\"notice\":\"Returns true if the message has been processed.\"},\"dispatch(uint32,bytes32,bytes)\":{\"notice\":\"Dispatches a message to the destination domain & recipient using the default hook and empty metadata.\"},\"dispatch(uint32,bytes32,bytes,bytes)\":{\"notice\":\"Dispatches a message to the destination domain & recipient.\"},\"dispatch(uint32,bytes32,bytes,bytes,address)\":{\"notice\":\"Dispatches a message to the destination domain & recipient.\"},\"process(bytes,bytes)\":{\"notice\":\"Attempts to deliver `_message` to its recipient. Verifies `_message` via the recipient's ISM using the provided `_metadata`.\"},\"processedAt(bytes32)\":{\"notice\":\"Returns the account that processed the message.\"},\"processor(bytes32)\":{\"notice\":\"Returns the account that processed the message.\"},\"quoteDispatch(uint32,bytes32,bytes)\":{\"notice\":\"Computes quote for dipatching a message to the destination domain & recipient using the default hook and empty metadata.\"},\"quoteDispatch(uint32,bytes32,bytes,bytes)\":{\"notice\":\"Computes quote for dispatching a message to the destination domain & recipient.\"},\"quoteDispatch(uint32,bytes32,bytes,bytes,address)\":{\"notice\":\"Computes quote for dispatching a message to the destination domain & recipient.\"},\"recipientIsm(address)\":{\"notice\":\"Returns the ISM to use for the recipient, defaulting to the default ISM if none is specified.\"},\"setDefaultHook(address)\":{\"notice\":\"Sets the default post dispatch hook for the Mailbox.\"},\"setDefaultIsm(address)\":{\"notice\":\"Sets the default ISM for the Mailbox.\"},\"setRequiredHook(address)\":{\"notice\":\"Sets the required post dispatch hook for the Mailbox.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockMailbox.sol\":\"MockMailbox\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/Mailbox.sol\":{\"keccak256\":\"0xe6fac628efbda608fe64086b90ce208ddc4429df7db18943f1519b3b7e44643d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://cec7c7c2908caac1a8f6c0849c8254e56c7546e157724e766ec0b9e8cecbac91\",\"dweb:/ipfs/QmbbaRJfUJVftbqEVSK7Zq2txG5x6SVFeVUzTCChQ4rFAo\"]},\"contracts/hooks/libs/AbstractPostDispatchHook.sol\":{\"keccak256\":\"0x1cd99f22ad0fe26864dbb37fc6ab9d657900c49d1eddf62ef6eeaf6cdff797f9\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://08a7d7de78c8d8a8f8f2939be3c0892b1de9c7c60106562ddeebd79655e3ae57\",\"dweb:/ipfs/QmTT2RVm7gUUVVvBTd3ZKjAZDc2Y4Gi1G9Qxa2bHiWE3AL\"]},\"contracts/hooks/libs/StandardHookMetadata.sol\":{\"keccak256\":\"0x28e8be5b70f6b5b7c6a52c4906635639ae5ef3fe2ac970b7c30299e939b38e42\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6a3a41ef53096ed385dd593a8b32955c12ced1b210102f84990f30ee1311b2f4\",\"dweb:/ipfs/QmZyNfa4tpL5WhpGW73RCzu6rWMFW88Uvm54J5gq1hvXgQ\"]},\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"contracts/interfaces/IMailbox.sol\":{\"keccak256\":\"0x9cd728ba304279775818f8c7b4c02f8c5dd2b28e051ec466dbe36129be01a6ee\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://23461e80c67508d6f0f94a317c48d99a1942209ebc306b50f843b3f1cc920bac\",\"dweb:/ipfs/QmXbJSFtHfxpHwtvGZJBodSDcQHAb6fGsPU17w11dapVnC\"]},\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]},\"contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447\",\"dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ\"]},\"contracts/libs/Indexed.sol\":{\"keccak256\":\"0xd26c31976c35890709b1736fea29598ef9df51929066b79ceca42e155ce9867c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://ff131e5531af4b599b92592b74dd9d4da01fb3e7a9ee0d420ea3d4fabf826f7f\",\"dweb:/ipfs/QmR4Q2jeKchTvjze3kYpdWd8rV5csTGoqkw2EHwR5iDYC3\"]},\"contracts/libs/Message.sol\":{\"keccak256\":\"0x5319af5ade07bcb021d6373f0713f24f34431def78cda16fea6755f580fb5e78\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://f531eecebd22a535398def83b078aff4f72d88940a0e9474ad3244a555f00d53\",\"dweb:/ipfs/QmQjtjpf4qwaM9QVyWBsogRvZeokKESTVdsX3z9mt1wZFa\"]},\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52\",\"dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ\"]},\"contracts/mock/MockMailbox.sol\":{\"keccak256\":\"0x4a0583b00d5fd0b31b52a7e4a5f789b32abc2c4cd1570ac01ce76de3f2b73a77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de6bb63dd314ea45e1a195141965315cf90587116a1def60c82da95871cf12bf\",\"dweb:/ipfs/QmaetgRVnE5T5iNLURrUMve5YR1Ui2qqGgJvEveLmNdQyj\"]},\"contracts/test/TestIsm.sol\":{\"keccak256\":\"0x0e49e4fb10bd8f7c98f33b5d83c50a0f15d17953999a2fb18be4294c05497f5e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7498991b51efcb545d4846ca898b0c15841e51361430fc0359f9a73936a30c29\",\"dweb:/ipfs/QmacRJW6tzaiKcRwU3b4TaKhbVhzZdDyZwyFPDeM7CFtM8\"]},\"contracts/test/TestPostDispatchHook.sol\":{\"keccak256\":\"0xd8f0eead0d1480597efdfd20a8554e17cc8e9cb6ea274ab5ef269a386e481c7f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://04d583d5e9d9c946b94398958a2f4ff7b97a640e4d3ca6329a6eabce6b859a2a\",\"dweb:/ipfs/QmdeR1rRo5JMJwFbdxXBb79w7y3vNRLri8d5Zo3wNYUMhq\"]},\"contracts/upgrade/Versioned.sol\":{\"keccak256\":\"0xdef5b9227ee177fe0f50871897b43d8acd1be2d730e6c0e77719f7fd53dc7729\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://caf8bdbb25773c75f4fcfd8939c03ec776e44353ccf046639e1f57c5b9aa9df9\",\"dweb:/ipfs/QmbNDKaKpiPXGrnCZt3GYUCuxMQh5mzXHB7msCUkpC3cP9\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"MockMailbox.sol:MockMailbox\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[23]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_11\n\tadd\t128, r0, r6\n\tst.1\t64, r6\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_19\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.le\t@.BB0_20\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.le\t@.BB0_36\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.le\t@.BB0_42\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.le\t@.BB0_91\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.eq\t@.BB0_265\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_155\n\tsub.s!\t@CPI0_27[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t3, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t192, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_15\n\tadd\tr0, r0, r5\n.BB0_14:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t192, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_14\n.BB0_15:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_17\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t192, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_17:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_19\n\tld.1\t192, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_0[0], r1, r1\n\tjump.le\t@.BB0_26\n.BB0_19:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_20:\n\tsub.s!\t@CPI0_46[0], r2, r4\n\tjump.gt\t@.BB0_29\n\tsub.s!\t@CPI0_58[0], r2, r4\n\tjump.gt\t@.BB0_48\n\tsub.s!\t@CPI0_64[0], r2, r4\n\tjump.gt\t@.BB0_96\n\tsub.s!\t@CPI0_67[0], r2, r4\n\tjump.eq\t@.BB0_187\n\tsub.s!\t@CPI0_68[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook, @DEFAULT_UNWIND\n\tjump\t@.BB0_115\n.BB0_26:\n\tadd\t@CPI0_2[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tst.1\t128, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t160, r1\n\tadd\t107, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_4[0], r2, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.le\t@.BB0_80\n.BB0_28:\n\tadd\t@CPI0_102[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_103[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_29:\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.gt\t@.BB0_67\n\tsub.s!\t@CPI0_53[0], r2, r4\n\tjump.gt\t@.BB0_105\n\tsub.s!\t@CPI0_56[0], r2, r4\n\tjump.eq\t@.BB0_190\n\tsub.s!\t@CPI0_57[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tjump\t@.BB0_79\n.BB0_36:\n\tsub.s!\t@CPI0_35[0], r2, r4\n\tjump.gt\t@.BB0_72\n\tsub.s!\t@CPI0_41[0], r2, r4\n\tjump.gt\t@.BB0_122\n\tsub.s!\t@CPI0_44[0], r2, r1\n\tjump.eq\t@.BB0_237\n\tsub.s!\t@CPI0_45[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t51, r0, r1\n\tjump\t@.BB0_234\n.BB0_42:\n\tsub.s!\t@CPI0_30[0], r2, r4\n\tjump.gt\t@.BB0_83\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.eq\t@.BB0_142\n\tsub.s!\t@CPI0_34[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_delivered, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_116\n.BB0_48:\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_112\n\tsub.s!\t@CPI0_62[0], r2, r4\n\tjump.eq\t@.BB0_195\n\tsub.s!\t@CPI0_63[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_19\n\tadd\t4, r2, stack-[16]\n\tptr.add.s\tstack-[16], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tadd\t36, r2, r2\n\tadd\tr2, r0, stack-[15]\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_19\n\tadd\t107, r0, r1\n\tadd\tr1, r0, stack-[14]\n\tsload\tr1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t109, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tld\tr1, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_198\n\tadd\tr3, r0, stack-[12]\n\tsub.s!\t32, r3, r1\n\tadd\tr4, r0, stack-[13]\n\tjump.lt\t@.BB0_63\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[17], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[12], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\tstack-[13], r0, r4\n\tjump.ge\t@.BB0_63\n.BB0_62:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_62\n.BB0_63:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_334\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tsub.s\t32, r0, r2\n\tand!\tstack-[17], r2, r2\n\tld\tr1, r1\n\tjump.ne\t@.BB0_377\n\tadd\tr0, r0, r3\n\tjump\t@.BB0_379\n.BB0_67:\n\tsub.s!\t@CPI0_48[0], r2, r4\n\tjump.gt\t@.BB0_118\n\tsub.s!\t@CPI0_51[0], r2, r4\n\tjump.eq\t@.BB0_199\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook, @DEFAULT_UNWIND\n\tjump\t@.BB0_95\n.BB0_72:\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.gt\t@.BB0_131\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.eq\t@.BB0_239\n\tsub.s!\t@CPI0_40[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tjump.gt\t@.BB0_19\n\tst.1\t0, r1\n\tadd\t108, r0, r1\n.BB0_79:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_234\n.BB0_80:\n\tadd\t36, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[17]\n\tst.1\tr2, r4\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_135\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_276\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_136\n.BB0_83:\n\tsub.s!\t@CPI0_31[0], r2, r4\n\tjump.eq\t@.BB0_144\n\tsub.s!\t@CPI0_32[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_19\n\tadd\t51, r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_9[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_275\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_296\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_96[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_95[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_101[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_91:\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.eq\t@.BB0_148\n\tsub.s!\t@CPI0_29[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t104, r0, r7\n\tsload\tr7, r7\n\tand\t@CPI0_9[0], r7, r7\n.BB0_95:\n\tnear_call\tr0, @fun_quoteDispatch, @DEFAULT_UNWIND\n\tjump\t@.BB0_116\n.BB0_96:\n\tsub.s!\t@CPI0_65[0], r2, r4\n\tjump.eq\t@.BB0_228\n\tsub.s!\t@CPI0_66[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tadd\t51, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_275\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_309\n.BB0_104:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_125[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_126[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB0_339\n.BB0_105:\n\tsub.s!\t@CPI0_54[0], r2, r1\n\tjump.eq\t@.BB0_230\n\tsub.s!\t@CPI0_55[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t51, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_9[0], r2, r3\n\tcontext.caller\tr5\n\tsub!\tr3, r5, r3\n\tjump.ne\t@.BB0_275\n\tand\t@CPI0_10[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_13[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_110:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n.BB0_111:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_112:\n\tsub.s!\t@CPI0_60[0], r2, r1\n\tjump.eq\t@.BB0_232\n\tsub.s!\t@CPI0_61[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t104, r0, r7\n\tsload\tr7, r7\n\tand\t@CPI0_9[0], r7, r7\n.BB0_115:\n\tnear_call\tr0, @fun_dispatch, @DEFAULT_UNWIND\n.BB0_116:\n\tld.1\t64, r2\n.BB0_117:\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_118:\n\tsub.s!\t@CPI0_49[0], r2, r1\n\tjump.eq\t@.BB0_235\n\tsub.s!\t@CPI0_50[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[23]\n\tadd\t0, r0, stack-[22]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t23, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_72[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tst.1\t128, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_122:\n\tsub.s!\t@CPI0_42[0], r2, r4\n\tjump.eq\t@.BB0_258\n\tsub.s!\t@CPI0_43[0], r2, r2\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tadd\t51, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_275\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_311\n.BB0_130:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_104[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_105[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n\tjump\t@.BB0_339\n.BB0_131:\n\tsub.s!\t@CPI0_37[0], r2, r1\n\tjump.eq\t@.BB0_261\n\tsub.s!\t@CPI0_38[0], r2, r1\n\tjump.ne\t@.BB0_19\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t107, r0, r1\n\tsload\tr1, r1\n\tshr.s\t32, r1, r1\n\tjump\t@.BB0_264\n.BB0_135:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_136:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_139\n\tadd\tr0, r0, r6\n.BB0_138:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_138\n.BB0_139:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_141\n.BB0_140:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_141:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_142:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t105, r0, r1\n\tjump\t@.BB0_234\n.BB0_144:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_19\n\tnear_call\tr0, @fun_recipientIsm, @DEFAULT_UNWIND\n\tjump\t@.BB0_116\n.BB0_148:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tadd\t51, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_275\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_310\n.BB0_154:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_99[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_100[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t33, r0, r3\n\tjump\t@.BB0_339\n.BB0_155:\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_19\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_19\n\tadd\t4, r2, stack-[14]\n\tptr.add.s\tstack-[14], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tadd\tstack-[15], r2, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_19\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t101, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tst.1\t160, r2\n\tshl.s\t224, r1, r1\n\tst.1\t161, r1\n\tadd\t@CPI0_72[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_73[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tand\t@CPI0_9[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tadd\tr3, r0, stack-[4]\n\tld\tr1, r1\n\tshl.s\t224, r1, r1\n\tst.1\t165, r1\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t169, r1\n\tadd\tstack-[17], r0, r1\n\tshl.s\t224, r1, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t201, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t205, r1\n\tadd\tstack-[15], r0, r2\n\tand\t31, r2, r5\n\tadd\tstack-[14], r0, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[8]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_165\n\tadd\tr0, r0, r2\n.BB0_164:\n\tshl.s\t5, r2, r3\n\tptr.add\tr1, r3, r4\n\tld\tr4, r4\n\tadd\t237, r3, r3\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_164\n.BB0_165:\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_167\n\tshl.s\t5, r6, r2\n\tptr.add\tr1, r2, r1\n\tshl.s\t3, r5, r3\n\tadd\t237, r2, r2\n\tld.1\tr2, r4\n\tshl\tr4, r3, r4\n\tshr\tr4, r3, r4\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r4, r1\n\tst.1\tr2, r1\n.BB0_167:\n\tadd\tr6, r0, stack-[13]\n\tadd\tr5, r0, stack-[14]\n\tadd\tstack-[15], r0, r3\n\tadd\t237, r3, r1\n\tst.1\tr1, r0\n\tadd\t140, r3, r1\n\tsub.s\t32, r0, stack-[5]\n\tand\tstack-[5], r1, r4\n\tadd\t77, r3, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t128, r1\n\tsub.s!\t@CPI0_74[0], r4, r1\n\tjump.gt\t@.BB0_28\n\tadd\t128, r4, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t64, r1\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tadd\t160, r4, r3\n\tadd\t@CPI0_71[0], r0, r2\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr3, r2\n\tadd\tr4, r0, stack-[3]\n\tadd\t161, r4, r2\n\tshl.s\t224, r1, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_72[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[11], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_73[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tadd\t201, r3, r2\n\tadd\tstack-[6], r0, r4\n\tst.1\tr2, r4\n\tshl.s\t224, r1, r1\n\tadd\t165, r3, r2\n\tst.1\tr2, r1\n\tadd\t205, r3, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t169, r3, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t237, r3, r1\n\tadd\tstack-[8], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tstack-[13], r0, r6\n\tsub!\tr6, r0, r3\n\tjump.eq\t@.BB0_172\n\tadd\tr0, r0, r3\n.BB0_171:\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_171\n.BB0_172:\n\tsub!\tstack-[14], r0, r3\n\tjump.eq\t@.BB0_174\n\tadd\tstack-[13], r0, r3\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tr1, r3, r3\n\tadd\tstack-[14], r0, r4\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr2, r2\n\tsub\t256, r4, r4\n\tshr\tr2, r4, r2\n\tshl\tr2, r4, r2\n\tor\tr2, r5, r2\n\tst.1\tr3, r2\n.BB0_174:\n\tadd\tstack-[15], r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[3], r1, r1\n\tsub.s!\t@CPI0_70[0], r1, r2\n\tjump.gt\t@.BB0_28\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\tstack-[2], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tld\tr1, r2\n\tadd\t102, r0, r1\n\tadd\tr2, r0, stack-[15]\n\tsstore\tr1, r2\n\tadd\tstack-[12], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_0[0], r1, r2\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.eq\t@.BB0_365\n\tand\t@CPI0_75[0], r1, r2\n\tadd\t1, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[12], r0, r2\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tstack-[11], r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\tstack-[2], r0, r2\n\tld.1\tr2, r2\n\tst.1\tr3, r2\n\tadd\t64, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[1], r0, r7\n\tjump.eq\t@.BB0_180\n\tadd\tr0, r0, r4\n.BB0_179:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_179\n.BB0_180:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[5], r2, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_76[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[16], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_77[0], r0, r4\n\tadd\tstack-[15], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tadd\t105, r0, r1\n\tsload\tr1, r3\n\tadd\tstack-[16], r0, r4\n\tadd\t36, r4, r1\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr1, r2\n\tadd\t@CPI0_78[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tst.1\tr1, r0\n\tadd\t100, r4, r2\n\tst.1\tr2, r0\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tst.1\tr2, r1\n\tadd\t132, r4, r2\n\tand\t@CPI0_9[0], r3, stack-[14]\n\tsub!\tr1, r0, r3\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_185\n\tadd\tr0, r0, r3\n.BB0_184:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_184\n.BB0_185:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_392\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_398\n.BB0_187:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tshr.s\t160, r1, r1\n\tand\t@CPI0_115[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_190:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tst.1\t0, r2\n\tadd\t108, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tor\tstack-[17], r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_195:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t107, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tsload\tr1, r1\n\tshr.s\t32, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t109, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r7\n\tadd.ne\tr4, r0, r7\n\tsub.s!\t31, r7, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.eq\t@.BB0_286\n.BB0_198:\n\tadd\t@CPI0_102[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_103[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_199:\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_19\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_19\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_70[0], r4, r4\n\tjump.gt\t@.BB0_19\n\tadd\t36, r2, r4\n\tadd\tr4, r0, stack-[16]\n\tadd\tstack-[17], r4, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_19\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tadd\tr5, r0, stack-[15]\n\tsub.s!\t@CPI0_70[0], r5, r5\n\tjump.gt\t@.BB0_19\n\tsub!\tstack-[15], r0, r5\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[15], r2, r2\n\tadd\t36, r2, stack-[14]\n\tsub!\tstack-[14], r3, r2\n\tjump.gt\t@.BB0_19\n\tadd\tr6, r0, stack-[12]\n\tadd\t32, r4, stack-[13]\n\tptr.add.s\tstack-[13], r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_106[0], r1, r1\n\tsub.s!\t@CPI0_71[0], r1, r1\n\tjump.ne\t@.BB0_340\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t45, r1, r1\n\tjump.lt\t@.BB0_19\n\tadd\t@CPI0_72[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_73[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld.1\t64, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t41, r3, r4\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r4, r4\n\tld\tr4, r4\n\tshr.s\t224, r4, r4\n\tld\tr1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB0_386\n\tadd\tstack-[15], r0, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t63, r1, r1\n\tadd\tr4, r0, stack-[10]\n\tand\tr1, r4, r1\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_70[0], r1, r5\n\tjump.gt\t@.BB0_28\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_28\n\tst.1\t64, r1\n\tadd\tstack-[15], r0, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack-[14], r0, r5\n\tsub.s!\tstack[@calldatasize], r5, r4\n\tjump.gt\t@.BB0_19\n\tptr.add.s\tstack-[13], r3, r3\n\tadd\tstack-[15], r0, r4\n\tand\t31, r4, stack-[14]\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB0_219\n\tadd\tr0, r0, r4\n.BB0_218:\n\tshl.s\t5, r4, r5\n\tadd\tr1, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB0_218\n.BB0_219:\n\tadd\tr7, r0, stack-[8]\n\tsub!\tstack-[14], r0, r4\n\tjump.eq\t@.BB0_221\n\tadd\tstack-[8], r0, r4\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr1, r4, r4\n\tadd\tstack-[14], r0, r5\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr3, r3\n\tsub\t256, r5, r5\n\tshr\tr3, r5, r3\n\tshl\tr3, r5, r3\n\tor\tr3, r6, r3\n\tst.1\tr4, r3\n.BB0_221:\n\tadd\tstack-[15], r1, r3\n\tst.1\tr3, r0\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_110[0], r1, r1\n\tjump.ne\t@.BB0_414\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t77, r1, r1\n\tjump.lt\t@.BB0_19\n\tadd\tstack-[13], r0, r1\n\tadd\t45, r1, r1\n\tadd\tr1, r0, stack-[5]\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r2\n\tld.1\t64, r3\n\tadd\t4, r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t@CPI0_112[0], r0, r4\n\tst.1\tr1, r4\n\tand\t@CPI0_9[0], r2, r2\n\tsub.s!\t@CPI0_113[0], r3, r4\n\tjump.gt\t@.BB0_28\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_416\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_417\n.BB0_228:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t102, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_230:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t103, r0, r1\n\tjump\t@.BB0_234\n.BB0_232:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t104, r0, r1\n.BB0_234:\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_235:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t107, r0, r1\n\tjump\t@.BB0_263\n.BB0_237:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[21]\n\tadd\t32, r0, stack-[20]\n\tadd\t32773, r0, r1\n\tadd\t68, r0, r3\n\tcontext.sp\tr4\n\tsub.s\t21, r4, r4\n\tshl.s\t5, r4, r4\n\tadd\t@CPI0_72[0], r0, r2\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tjump\t@.BB0_264\n.BB0_239:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r4\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[16]\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_19\n\tadd\t4, r2, stack-[14]\n\tptr.add.s\tstack-[14], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tadd\tstack-[15], r2, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_19\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t101, r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_71[0], r0, r2\n\tst.1\t160, r2\n\tshl.s\t224, r1, r1\n\tst.1\t161, r1\n\tadd\t@CPI0_72[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_73[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tand\t@CPI0_9[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tadd\tr3, r0, stack-[13]\n\tld\tr1, r1\n\tshl.s\t224, r1, r1\n\tst.1\t165, r1\n\tcontext.caller\tr1\n\tst.1\t169, r1\n\tadd\tstack-[17], r0, r1\n\tshl.s\t224, r1, r1\n\tst.1\t201, r1\n\tadd\tstack-[16], r0, r1\n\tst.1\t205, r1\n\tadd\tstack-[15], r0, r3\n\tand\t31, r3, r1\n\tadd\tstack-[14], r0, r2\n\tadd\t32, r2, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_250\n\tadd\tr0, r0, r4\n.BB0_249:\n\tshl.s\t5, r4, r5\n\tptr.add\tr2, r5, r6\n\tld\tr6, r6\n\tadd\t237, r5, r5\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_249\n.BB0_250:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_252\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tshl.s\t3, r1, r1\n\tadd\t237, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_252:\n\tadd\tstack-[15], r0, r2\n\tadd\t237, r2, r1\n\tst.1\tr1, r0\n\tadd\t77, r2, r1\n\tst.1\t128, r1\n\tadd\t140, r2, r1\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r1, r2\n\tsub.s!\t@CPI0_74[0], r2, r1\n\tjump.gt\t@.BB0_28\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\t105, r0, r1\n\tsload\tr1, r4\n\tadd\t@CPI0_78[0], r0, r1\n\tadd\tr3, r0, stack-[17]\n\tst.1\tr3, r1\n\tadd\t132, r2, r1\n\tadd\t64, r0, r3\n\tadd\tr3, r0, stack-[14]\n\tst.1\tr1, r3\n\tadd\t164, r2, r1\n\tadd\t96, r0, r3\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr1, r3\n\tadd\t196, r2, r1\n\tst.1\tr1, r0\n\tadd\t228, r2, r3\n\tst.1\tr3, r0\n\tld.1\t128, r1\n\tst.1\tr3, r1\n\tadd\t260, r2, r3\n\tand\t@CPI0_9[0], r4, r2\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_256\n\tadd\tr0, r0, r4\n.BB0_255:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_255\n.BB0_256:\n\tadd\tr1, r3, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_341\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_347\n.BB0_258:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t109, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tnear_call\tr0, @copy_array_from_storage_to_memory_bytes, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[17]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_261:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_19\n\tadd\t101, r0, r1\n.BB0_263:\n\tsload\tr1, r1\n.BB0_264:\n\tand\t@CPI0_0[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_69[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_265:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t132, r3, r3\n\tjump.lt\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_19\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r3\n\tand\t@CPI0_9[0], r3, stack-[15]\n\tadd\tr3, r0, stack-[16]\n\tsub.s!\t@CPI0_9[0], r3, r2\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r3\n\tand\t@CPI0_9[0], r3, stack-[13]\n\tadd\tr3, r0, stack-[14]\n\tsub.s!\t@CPI0_9[0], r3, r2\n\tjump.gt\t@.BB0_19\n\tptr.add.s\t100, r1, r1\n\tld\tr1, r2\n\tand\t@CPI0_9[0], r2, stack-[11]\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.gt\t@.BB0_19\n\tcontext.sp\tr3\n\tsub.s\t19, r3, r3\n\tshl.s\t5, r3, r3\n\tsload\tr0, r2\n\tand!\t65280, r2, stack-[9]\n\tjump.ne\t@.BB0_312\n\tcontext.sp\tr3\n\tsub.s\t18, r3, r3\n\tshl.s\t5, r3, r3\n\tand!\t255, r2, r1\n\tjump.ne\t@.BB0_312\n.BB0_273:\n\tand\t@CPI0_89[0], r2, r1\n\tor\t257, r1, r1\n\tadd\tr0, r0, stack-[10]\n\tsstore\tr0, r1\n\tand!\t65280, r1, r1\n\tjump.ne\t@.BB0_317\n.BB0_274:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_97[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_98[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t43, r0, r3\n\tjump\t@.BB0_339\n.BB0_275:\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_93[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_108[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_276:\n\tand\t@CPI0_9[0], r1, r1\n\tadd\t103, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_10[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_5[0], r1, r2\n\tjump.gt\t@.BB0_28\n\tadd\t36, r1, r2\n\tadd\t@CPI0_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\tstack-[17], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_280\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_291\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_281\n.BB0_280:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_281:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_284\n\tadd\tr0, r0, r6\n.BB0_283:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_283\n.BB0_284:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_141\n\tjump\t@.BB0_140\n.BB0_286:\n\tld.1\t64, r6\n\tst.1.inc\tr6, r7, r5\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_297\n\tadd\tr7, r0, stack-[14]\n\tadd\tr6, r0, stack-[15]\n\tadd\tr5, r0, stack-[16]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[14], r0, r7\n\tsub!\tr7, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[15], r0, r6\n\tjump.eq\t@.BB0_298\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_290:\n\tadd\tr5, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r7, r3\n\tjump.lt\t@.BB0_290\n\tjump\t@.BB0_298\n.BB0_291:\n\tand\t@CPI0_9[0], r1, r1\n\tadd\t104, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_10[0], r3, r3\n\tor\tr3, r1, r3\n\tsstore\tr2, r3\n\tadd\t105, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_10[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tcontext.caller\tr6\n\tadd\t51, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r3\n\tor\tr3, r6, r3\n\tsstore\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[17]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tand\t@CPI0_9[0], r2, r5\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_13[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tsload\tr0, r1\n\tand!\t65280, r1, r2\n\tjump.ne\t@.BB0_333\n\tand\t255, r1, r2\n\tsub.s!\t255, r2, r2\n\tjump.eq\t@.BB0_295\n\tor\t255, r1, r1\n\tsstore\tr0, r1\n\tadd\t255, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_19[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n.BB0_295:\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tld.1\t160, r1\n\tadd\t32, r0, r2\n\tst.2\t384, r2\n\tst.2\t416, r1\n\tst.2\t256, r2\n\tadd\t2, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_296:\n\tnear_call\tr0, @fun_transferOwnership, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_297:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr5, r1\n\tsub!\tr7, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_298:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r4\n\tand\tr1, r4, r2\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_70[0], r1, r3\n\tjump.gt\t@.BB0_28\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_28\n\tadd\tr4, r0, stack-[13]\n\tadd\tr6, r0, stack-[15]\n\tadd\tr5, r0, stack-[16]\n\tst.1\t64, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tadd\tr1, r0, stack-[14]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_19\n\tld.1\t64, r3\n\tadd\t@CPI0_123[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tst.1\tr1, r0\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tadd\t100, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[15]\n\tadd\t132, r3, r7\n\tsub!\tr1, r0, r3\n\tadd\tstack-[16], r0, r6\n\tjump.eq\t@.BB0_305\n\tadd\tr0, r0, r3\n.BB0_304:\n\tadd\tr3, r7, r4\n\tadd\tr6, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_304\n.BB0_305:\n\tadd\tr7, r1, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t4, r2, r4\n\tjump.eq\t@.BB0_307\n\tadd\t31, r1, r1\n\tand\tstack-[13], r1, r1\n\tadd\tstack-[15], r0, r5\n\tsub\tr1, r5, r1\n\tadd\tr1, r7, r1\n\tadd\t@CPI0_0[0], r0, r6\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr6, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr6, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr6, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_366\n.BB0_307:\n\tadd\tstack-[15], r0, r1\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[15], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[17], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tshr.s\t32, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tnear_call\tr0, @increment_uint32, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r2\n\tand\t@CPI0_124[0], r2, r2\n\tshl.s\t32, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[17], r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_309:\n\tadd\t105, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tstack-[17], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_92[0], r0, r4\n\tjump\t@.BB0_110\n.BB0_310:\n\tadd\t103, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tstack-[17], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_90[0], r0, r4\n\tjump\t@.BB0_110\n.BB0_311:\n\tadd\t104, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tstack-[17], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_91[0], r0, r4\n\tjump\t@.BB0_110\n.BB0_312:\n\tadd\tr3, r0, stack-[10]\n\tadd\tr2, r0, stack-[8]\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tcontext.this\tr1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_337\n\tadd\tstack-[8], r0, r1\n\tand\t255, r1, r1\n\tsub.s!\t1, r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tadd\tstack-[10], r0, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r0, stack[r2]\n\tjump.ne\t@.BB0_338\n\tsub!\tstack-[9], r0, r1\n\tadd\tstack-[8], r0, r2\n\tjump.eq\t@.BB0_273\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tadd\t1, r0, stack-[10]\n\tor\t1, r1, r1\n\tsstore\tr0, r1\n\tand!\t65280, r1, r1\n\tjump.eq\t@.BB0_274\n.BB0_317:\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[9]\n\tand\t@CPI0_9[0], r1, r6\n\tadd\t51, r0, r3\n\tsload\tr3, r2\n\tand\t@CPI0_10[0], r2, r1\n\tor\tr1, r6, r1\n\tadd\tr3, r0, stack-[8]\n\tsstore\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_12[0], r1, r1\n\tand\t@CPI0_9[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_13[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\tstack-[9], r1, r1\n\tjump.ne\t@.BB0_383\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[16], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_154\n\tadd\t103, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tstack-[15], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_90[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\tstack-[9], r1, r1\n\tjump.ne\t@.BB0_383\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_130\n\tadd\t104, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tstack-[13], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_91[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r1\n\tsub.s!\tstack-[9], r1, r1\n\tjump.ne\t@.BB0_383\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[12], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_104\n\tadd\t105, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_10[0], r2, r2\n\tadd\tstack-[11], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_92[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, r2\n\tsub.s!\tstack-[9], r2, r2\n\tjump.ne\t@.BB0_383\n\tsub!\tstack-[17], r0, r2\n\tjump.ne\t@.BB0_467\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_95[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_96[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tjump\t@.BB0_339\n.BB0_333:\n\tadd\tstack-[17], r0, r3\n\tadd\t100, r3, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\t39, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_334:\n\tsub!\tstack-[17], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_336\n\tadd\tstack-[16], r0, r1\n\tadd\t32, r1, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n.BB0_336:\n\tadd\tstack-[17], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r2\n\tshl.s\t1, r4, r1\n\tjump\t@.BB0_382\n.BB0_337:\n\tadd\tstack-[10], r0, r1\n\tshr.s\t5, r1, r1\n\tadd\t0, r0, stack[r1]\n.BB0_338:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_87[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_88[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t46, r0, r3\n.BB0_339:\n\tst.1\tr2, r3\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_17[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_340:\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t20, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_107[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_108[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_341:\n\tadd\t31, r1, r1\n\tand\tstack-[16], r1, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tstack-[17], r0, r6\n\tsub.s!\t@CPI0_0[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_344\n\tadd\tr0, r0, r7\n.BB0_343:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_343\n.BB0_344:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_346\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_346:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_370\n.BB0_347:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[15]\n\tsub.s!\t@CPI0_70[0], r4, r4\n\tjump.gt\t@.BB0_28\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_28\n\tadd\tstack-[15], r0, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_19\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tadd\t@CPI0_78[0], r0, r2\n\tadd\tstack-[15], r0, r5\n\tst.1\tr5, r2\n\tor\t4, r5, r2\n\tadd\tstack-[14], r0, r4\n\tst.1\tr2, r4\n\tadd\t36, r5, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r5, r2\n\tst.1\tr2, r0\n\tadd\t100, r5, r4\n\tst.1\tr4, r0\n\tld.1\t128, r2\n\tst.1\tr4, r2\n\tadd\t132, r5, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_353\n\tadd\tr0, r0, r5\n.BB0_352:\n\tadd\tr5, r4, r6\n\tadd\t160, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_352\n.BB0_353:\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n\tcontext.gas_left\tr4\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t4, r5, r5\n\tjump.eq\t@.BB0_361\n\tadd\t31, r2, r1\n\tand\tstack-[16], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tadd\tstack-[15], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[13], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_357\n\tadd\tr0, r0, r7\n.BB0_356:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_356\n.BB0_357:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_359\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[15], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_359:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_387\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB0_361:\n\tadd\tstack-[15], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_70[0], r2, r4\n\tjump.gt\t@.BB0_28\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_28\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_19\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r3\n\tadd\tstack-[17], r3, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t1, r3, r3\n\tjump.ne\t@.BB0_117\n.BB0_365:\n\tadd\t@CPI0_102[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_103[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_366:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_369\n\tadd\tr0, r0, r6\n.BB0_368:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_368\n.BB0_369:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB0_375\n\tjump\t@.BB0_376\n.BB0_370:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_373\n\tadd\tr0, r0, r6\n.BB0_372:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_372\n.BB0_373:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n.BB0_375:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_376:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_377:\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tadd\tr0, r0, r3\n\tadd\tstack-[15], r0, r6\n.BB0_378:\n\tadd\tr3, r6, r5\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tsstore\tr1, r5\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_378\n.BB0_379:\n\tsub.s!\tstack-[17], r2, r2\n\tjump.ge\t@.BB0_381\n\tadd\tstack-[17], r0, r2\n\tshl.s\t3, r2, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tadd\tstack-[15], r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB0_381:\n\tadd\t1, r0, r1\n\tadd\tstack-[17], r0, r2\n\tshl.s\t1, r2, r2\n.BB0_382:\n\tor\tr2, r1, r1\n\tadd\tstack-[13], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tand\t@CPI0_0[0], r1, r1\n\tnear_call\tr0, @increment_uint32, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r2\n\tand\t@CPI0_75[0], r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[14], r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_383:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_93[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n.BB0_384:\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n.BB0_385:\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_86[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_386:\n\tadd\t68, r2, r1\n\tadd\t@CPI0_109[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t31, r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_86[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_387:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_390\n\tadd\tr0, r0, r6\n.BB0_389:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_389\n.BB0_390:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.BB0_392:\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[14], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_395\n\tadd\tr0, r0, r7\n.BB0_394:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_394\n.BB0_395:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_397\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[16], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_397:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_409\n.BB0_398:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[16], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_70[0], r1, r3\n\tjump.gt\t@.BB0_28\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_28\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_19\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[14], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tcontext.get_context_u128\tr4\n\tsub.s!\tstack-[16], r4, r3\n\tadd\tr4, r0, stack-[9]\n\tadd\tstack-[16], r0, r3\n\tadd.lt\tr4, r0, r3\n\tadd\tr3, r0, stack-[10]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_19\n\tld.1\t64, r3\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tst.1\tr1, r0\n\tadd\t100, r3, r2\n\tst.1\tr2, r0\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[8]\n\tadd\t132, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_406\n\tadd\tr0, r0, r3\n.BB0_405:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_405\n.BB0_406:\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_450\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[8], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tsub!\tstack-[10], r0, r2\n\tjump.ne\t@.BB0_447\n\tadd\tstack-[14], r0, r2\n\tjump\t@.BB0_448\n.BB0_409:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_412\n\tadd\tr0, r0, r6\n.BB0_411:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_411\n.BB0_412:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.BB0_414:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_111[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t26, r0, r3\n.BB0_415:\n\tst.1\tr2, r3\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[11], r0, r3\n\tjump\t@.BB0_385\n.BB0_416:\n\tadd\t@CPI0_0[0], r0, r5\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_417:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_439\n\tadd\t96, r0, r1\n.BB0_419:\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_421\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_464\n.BB0_421:\n\tadd\t103, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_9[0], r1, stack-[4]\n.BB0_422:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[12]\n\tsub.s!\t@CPI0_113[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[12], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tcontext.caller\tr1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_2[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_3[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tand\t@CPI0_115[0], r1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_9[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI0_116[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tstack-[3], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t160, r3, r3\n\tand\t@CPI0_110[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tsub.s\t40, r3, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tsub.s\t36, r3, r4\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr4, r0, stack-[6]\n\tptr.add\tstack[@ptr_calldata], r4, r2\n\tld\tr2, r6\n\tld\tr3, r2\n\tld\tr1, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[12]\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshr.s\t224, r1, r5\n\tand\t@CPI0_9[0], r2, r7\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_117[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_118[0], r0, r4\n\tadd\tstack-[7], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tadd\t@CPI0_119[0], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r4, r1\n\tadd\tstack-[17], r0, r5\n\tst.1\tr1, r5\n\tand\t31, r5, r3\n\tadd\t100, r4, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\tstack-[16], r1, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_430\n\tadd\tr0, r0, r6\n.BB0_429:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_429\n.BB0_430:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_432\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_432:\n\tadd\tstack-[17], r0, r4\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tand\tstack-[10], r3, r3\n\tadd\tstack-[12], r0, r4\n\tadd\t36, r4, r4\n\tadd\t96, r3, r5\n\tst.1\tr4, r5\n\tadd\tr2, r3, r2\n\tadd\tstack-[15], r0, r3\n\tst.1.inc\tr2, r3, r2\n\tptr.add.s\tstack-[13], r1, r1\n\tadd\tstack-[8], r0, r6\n\tsub!\tr6, r0, r3\n\tjump.eq\t@.BB0_435\n\tadd\tr0, r0, r3\n.BB0_434:\n\tshl.s\t5, r3, r4\n\tadd\tr2, r4, r5\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_434\n.BB0_435:\n\tsub!\tstack-[14], r0, r3\n\tjump.eq\t@.BB0_437\n\tadd\tstack-[8], r0, r3\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tr2, r3, r3\n\tadd\tstack-[14], r0, r4\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_437:\n\tadd\tstack-[15], r2, r1\n\tst.1\tr1, r0\n\tcontext.gas_left\tr1\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_491\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_497\n.BB0_439:\n\tsub.s!\t@CPI0_70[0], r3, r1\n\tjump.gt\t@.BB0_28\n\tadd\t31, r3, r1\n\tand\tstack-[10], r1, r1\n\tadd\t63, r1, r1\n\tand\tstack-[10], r1, r4\n\tld.1\t64, r1\n\tadd\tr1, r4, r4\n\tsub!\tr4, r1, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_70[0], r4, r6\n\tjump.gt\t@.BB0_28\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_28\n\tst.1\t64, r4\n\tand\t31, r3, r4\n\tst.1.inc\tr1, r3, r9\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_445\n\tadd\tr0, r0, r6\n.BB0_444:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB0_444\n.BB0_445:\n\tadd\tr9, r0, stack-[12]\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_419\n\tshl.s\t5, r3, r3\n\tptr.add\tr5, r3, r5\n\tadd\tstack-[12], r3, r3\n\tshl.s\t3, r4, r4\n\tld.1\tr3, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n\tjump\t@.BB0_419\n.BB0_447:\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[10], r0, r3\n\tadd\tstack-[14], r0, r4\n\tadd\tr0, r0, r5\n.BB0_448:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_459\n.BB0_450:\n\tadd\tstack-[8], r0, r1\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[8], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_19\n\tld.1\t64, r3\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r3, r1\n\tst.1\tr1, r0\n\tadd\t100, r3, r2\n\tst.1\tr2, r0\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[14]\n\tadd\t132, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB0_456\n\tadd\tr0, r0, r3\n.BB0_455:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_455\n.BB0_456:\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_473\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[14], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[9], r0, r3\n\tsub.s!\tstack-[16], r3, r2\n\tjump.le\t@.BB0_470\n\tadd\tstack-[10], r0, r3\n\tsub\tstack-[9], r3, r3\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[4], r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_471\n.BB0_459:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_462\n\tadd\tr0, r0, r6\n.BB0_461:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_461\n.BB0_462:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.BB0_464:\n\tadd\t@CPI0_114[0], r0, r2\n\tsub.s!\t32, r1, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr2, r0, r3\n\tand\t@CPI0_114[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.le\tr0, r0, r2\n\tsub.s!\t@CPI0_114[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tadd\tstack-[12], r0, r1\n\tjump.ne\t@.BB0_19\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_19\n\tsub!\tstack-[4], r0, r1\n\tjump.eq\t@.BB0_421\n\tjump\t@.BB0_422\n.BB0_467:\n\tand\t@CPI0_10[0], r1, r1\n\tadd\tstack-[17], r0, r6\n\tor\tr1, r6, r1\n\tadd\tstack-[8], r0, r2\n\tsstore\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_13[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_19\n\tsub!\tstack-[10], r0, r1\n\tjump.ne\t@.BB0_111\n\tsload\tr0, r2\n\tand\t@CPI0_94[0], r2, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r3\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr4\n\tsub.s!\t@CPI0_0[0], r4, r5\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_19[0], r0, r4\n\tjump\t@.BB0_110\n.BB0_470:\n\tadd\tstack-[4], r0, r2\n.BB0_471:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_477\n.BB0_473:\n\tadd\tstack-[14], r0, r1\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[17], r0, r1\n\tst.1\t0, r1\n\tadd\t108, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_82[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_19\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_9[0], r1, stack-[17]\n\tjump.ne\t@.BB0_482\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_85[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tjump\t@.BB0_415\n.BB0_477:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_480\n\tadd\tr0, r0, r6\n.BB0_479:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_479\n.BB0_480:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.BB0_482:\n\tadd\t@CPI0_79[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_19\n\tld.1\t64, r3\n\tadd\t@CPI0_83[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[16]\n\tadd\t68, r3, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_487\n\tadd\tr0, r0, r3\n.BB0_486:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_486\n.BB0_487:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_489\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t68, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_508\n.BB0_489:\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[16], r0, r3\n\tst.1\t64, r3\n\tadd\tstack-[15], r0, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_84[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_491:\n\tadd\tstack-[12], r0, r5\n\tsub\tstack-[9], r5, r3\n\tadd\tr3, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_494\n\tadd\tr0, r0, r7\n.BB0_493:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_493\n.BB0_494:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_496\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_496:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_503\n.BB0_497:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_70[0], r1, r4\n\tjump.gt\t@.BB0_28\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_28\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_19\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_19\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_513\n\tadd\t68, r1, r2\n\tadd\t@CPI0_122[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_16[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\tstack-[11], r0, r3\n\tjump\t@.BB0_384\n.BB0_503:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_506\n\tadd\tr0, r0, r6\n.BB0_505:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_505\n.BB0_506:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.BB0_508:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_511\n\tadd\tr0, r0, r6\n.BB0_510:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_510\n.BB0_511:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.BB0_513:\n\tadd\tstack-[5], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tadd\tstack-[13], r0, r3\n\tadd\t5, r3, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tstack-[6], r0, r4\n\tptr.add\tstack[@ptr_calldata], r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tld\tr3, r1\n\tadd\tr1, r0, stack-[16]\n\tld\tr2, r1\n\tadd\t@CPI0_79[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_9[0], r1, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_80[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_523\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_19\n\tadd\tstack-[16], r0, r1\n\tshr.s\t224, r1, r1\n\tld.1\t64, r4\n\tadd\t68, r4, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r4, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_120[0], r0, r2\n\tst.1\tr4, r2\n\tadd\t4, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tsub.s\t77, r1, r1\n\tadd\t100, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t132, r4, r2\n\tand\t31, r1, r4\n\tadd\tstack-[5], r0, r3\n\tadd\t32, r3, r5\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add\tr3, r5, r5\n\tshr.s!\t5, r1, r6\n\tjump.eq\t@.BB0_518\n\tadd\tr0, r0, r7\n.BB0_517:\n\tshl.s\t5, r7, r8\n\tadd\tr2, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_517\n.BB0_518:\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_520\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr2, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_520:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tptr.add.s\tstack-[5], r3, r1\n\tcontext.get_context_u128\tr3\n\tld\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_9[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_527\n\tadd\tstack-[15], r0, r2\n\tsub.s\t46, r2, r2\n\tand\tstack-[10], r2, r2\n\tadd\t@CPI0_121[0], r0, r5\n\tsub.s!\t@CPI0_121[0], r2, r6\n\tadd.ge\tr5, r0, r2\n\tadd\t@CPI0_0[0], r0, r5\n\tadd\tstack-[17], r0, r7\n\tsub.s!\t@CPI0_0[0], r7, r6\n\tadd\tr5, r0, r6\n\tadd.lt\tr7, r0, r6\n\tshl.s\t64, r6, r6\n\tshl.s\t96, r2, r2\n\tor\tr2, r6, r2\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_17[0], r1, r1\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_524\n\tadd\tr4, r0, r2\n\tjump\t@.BB0_525\n.BB0_523:\n\trevert\n.BB0_524:\n\tor\t@CPI0_12[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr0, r0, r5\n.BB0_525:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_529\n.BB0_527:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_70[0], r1, r1\n\tjump.gt\t@.BB0_28\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_529:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_532\n\tadd\tr0, r0, r6\n.BB0_531:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_531\n.BB0_532:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_376\n\tjump\t@.BB0_375\n.func_end0:\n\nabi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook:\n.func_begin1:\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t163, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI1_0[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI1_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r0, r7\n\tptr.add.s\t4, r7, r2\n\tld\tr2, r8\n\tsub.s!\t@CPI1_1[0], r8, r2\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t36, r7, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r7, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_2[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tadd\t35, r3, r4\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB1_1\n\tadd\t4, r3, r4\n\tptr.add\tr7, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI1_2[0], r4, r5\n\tjump.gt\t@.BB1_1\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r5\n\tsub!\tr5, r1, r5\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t100, r7, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI1_2[0], r5, r6\n\tjump.gt\t@.BB1_1\n\tadd\t35, r5, r6\n\tsub!\tr6, r1, r6\n\tjump.ge\t@.BB1_1\n\tadd\t4, r5, r6\n\tptr.add\tr7, r6, r6\n\tld\tr6, r6\n\tsub.s!\t@CPI1_2[0], r6, r9\n\tjump.gt\t@.BB1_1\n\tadd\t36, r5, r5\n\tadd\tr6, r5, r9\n\tsub!\tr9, r1, r1\n\tjump.gt\t@.BB1_1\n\tptr.add.s\t132, r7, r1\n\tld\tr1, r7\n\tsub.s!\t@CPI1_3[0], r7, r1\n\tjump.gt\t@.BB1_1\n\tadd\tr8, r0, r1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t131, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t4, r5, r2\n\tld\tr2, r7\n\tsub.s!\t@CPI2_1[0], r7, r2\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r5, r2\n\tld\tr2, r2\n\tptr.add.s\t68, r5, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_2[0], r3, r4\n\tjump.gt\t@.BB2_1\n\tadd\t35, r3, r4\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB2_1\n\tadd\t4, r3, r4\n\tptr.add\tr5, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_2[0], r4, r6\n\tjump.gt\t@.BB2_1\n\tadd\t36, r3, r3\n\tadd\tr4, r3, r6\n\tsub!\tr6, r1, r6\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t100, r5, r6\n\tld\tr6, r8\n\tsub.s!\t@CPI2_2[0], r8, r6\n\tjump.gt\t@.BB2_1\n\tadd\t35, r8, r6\n\tsub!\tr6, r1, r6\n\tjump.ge\t@.BB2_1\n\tadd\t4, r8, r6\n\tptr.add\tr5, r6, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI2_2[0], r6, r5\n\tjump.gt\t@.BB2_1\n\tadd\t36, r8, r5\n\tadd\tr6, r5, r8\n\tsub!\tr8, r1, r1\n\tjump.gt\t@.BB2_1\n\tadd\tr7, r0, r1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\ncopy_array_from_storage_to_memory_bytes:\n.func_begin3:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB3_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB3_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI3_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI3_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI3_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_10\n\tadd\tstack-[3], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB3_12\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r7\n.BB3_14:\n\tadd\tr7, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB3_14\n\tjump\t@.BB3_4\n.BB3_8:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB3_4\n.BB3_12:\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB3_4:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_2[0], r1, r3\n\tjump.gt\t@.BB3_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_6:\n\tadd\t@CPI3_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nabi_encode_bytes:\n.func_begin4:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB4_3\n\tadd\tr0, r0, r2\n.BB4_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB4_2\n.BB4_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end4:\n\nfun_quoteDispatch:\n.func_begin5:\n\tnop\tstack+=[13]\n\tadd\tr6, r0, stack-[11]\n\tadd\tr5, r0, stack-[12]\n\tadd\tr4, r0, stack-[9]\n\tadd\tr3, r0, stack-[8]\n\tadd\tr2, r0, stack-[7]\n\tadd\tr1, r0, stack-[6]\n\tand!\t@CPI5_0[0], r7, r1\n\tjump.ne\t@.BB5_2\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI5_0[0], r1, r1\n.BB5_2:\n\tadd\tr1, r0, stack-[5]\n\tadd\t101, r0, r1\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tadd\t@CPI5_1[0], r0, r2\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\tr4, r0, stack-[10]\n\tadd\t33, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI5_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_4[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_3\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tshl.s\t224, r2, r2\n\tadd\tstack-[10], r0, r11\n\tadd\t73, r11, r3\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\t37, r11, r2\n\tst.1\tr2, r1\n\tadd\t77, r11, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr1, r2\n\tadd\t41, r11, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tadd\tstack-[9], r0, r12\n\tand\t31, r12, r3\n\tadd\t109, r11, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\tstack-[8], r1, r4\n\tshr.s!\t5, r12, r5\n\tjump.eq\t@.BB5_64\n\tadd\tr0, r0, r6\n.BB5_6:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr4, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_6\n.BB5_64:\n\tsub!\tr3, r0, r6\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[11], r0, r10\n\tjump.eq\t@.BB5_8\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB5_8:\n\tadd\tr2, r12, r2\n\tst.1\tr2, r0\n\tadd\t77, r12, r2\n\tst.1\tr11, r2\n\tadd\t140, r12, r2\n\tsub.s\t32, r0, r12\n\tand\tr2, r12, r2\n\tadd\tr11, r2, r15\n\tsub!\tr15, r11, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_5[0], r15, r3\n\tjump.gt\t@.BB5_10\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_10\n\tst.1\t64, r15\n\tadd\t105, r0, r2\n\tsload\tr2, r2\n\tadd\t@CPI5_6[0], r0, r3\n\tst.1\tr15, r3\n\tptr.add.s\tstack-[12], r1, r4\n\tadd\t68, r15, r1\n\tst.1\tr1, r10\n\tadd\t4, r15, r1\n\tadd\t64, r0, r3\n\tadd\tr3, r0, stack-[8]\n\tst.1\tr1, r3\n\tand\t31, r10, r13\n\tadd\t100, r15, r3\n\tand\t@CPI5_0[0], r2, r2\n\tshr.s!\t5, r10, r14\n\tjump.eq\t@.BB5_63\n\tadd\tr0, r0, r5\n.BB5_14:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r14, r6\n\tjump.lt\t@.BB5_14\n.BB5_63:\n\tsub!\tr13, r0, r5\n\tshl.s\t5, r14, r5\n\tshl.s\t3, r13, r8\n\tadd\tr5, r0, stack-[6]\n\tadd\tr8, r0, stack-[9]\n\tjump.eq\t@.BB5_16\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r8, r6\n\tshr\tr6, r8, r6\n\tld\tr4, r4\n\tsub\t256, r8, r7\n\tshr\tr4, r7, r4\n\tshl\tr4, r7, r4\n\tor\tr4, r6, r4\n\tst.1\tr5, r4\n.BB5_16:\n\tadd\tr3, r10, r4\n\tst.1\tr4, r0\n\tadd\t31, r10, r4\n\tand\tr4, r12, stack-[7]\n\tadd\tstack-[7], r3, r4\n\tsub\tr4, r1, r1\n\tadd\t36, r15, r3\n\tst.1\tr3, r1\n\tld.1\tr11, r3\n\tst.1.inc\tr4, r3, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB5_19\n\tadd\tr0, r0, r4\n.BB5_18:\n\tadd\tr4, r1, r5\n\tadd\tr4, r9, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB5_18\n.BB5_19:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tcontext.gas_left\tr4\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB5_21\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB5_32\n.BB5_21:\n\tadd\tr14, r0, stack-[2]\n\tadd\tr13, r0, stack-[3]\n\tadd\t31, r3, r3\n\tadd\tr12, r0, stack-[4]\n\tand\tr3, r12, r3\n\tsub\tr3, r15, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI5_3[0], r0, r3\n\tsub.s!\t@CPI5_3[0], r15, r5\n\tadd\tr3, r0, r5\n\tadd.lt\tr15, r0, r5\n\tshl.s\t64, r5, r5\n\tsub.s!\t@CPI5_3[0], r1, r6\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI5_3[0], r4, r5\n\tadd.ge\tr3, r0, r4\n\tshl.s\t192, r4, r3\n\tor\tr1, r3, r1\n\tadd\tr15, r0, stack-[1]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r15\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB5_62\n\tadd\tr0, r0, r7\n.BB5_23:\n\tshl.s\t5, r7, r8\n\tadd\tr15, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB5_23\n.BB5_62:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB5_25\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr15, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB5_25:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[11], r0, r10\n\tadd\tstack-[10], r0, r11\n\tadd\tstack-[4], r0, r12\n\tadd\tstack-[3], r0, r13\n\tadd\tstack-[2], r0, r14\n\tjump.eq\t@.BB5_27\n.BB5_32:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r15, r4\n\tsub!\tr4, r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[13]\n\tsub.s!\t@CPI5_5[0], r4, r4\n\tjump.gt\t@.BB5_10\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_10\n\tadd\tstack-[13], r0, r7\n\tst.1\t64, r7\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB5_43\n\tld.1\tr15, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\t68, r7, r2\n\tst.1\tr2, r10\n\tadd\t@CPI5_6[0], r0, r2\n\tst.1\tr7, r2\n\tadd\t4, r7, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tadd\t100, r7, r4\n\tadd\tstack-[12], r0, r5\n\tptr.add\tstack[@ptr_calldata], r5, r5\n\tsub!\tr14, r0, r6\n\tadd\tr7, r0, r15\n\tjump.eq\t@.BB5_61\n\tadd\tr0, r0, r6\n.BB5_37:\n\tshl.s\t5, r6, r7\n\tadd\tr4, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r14, r7\n\tjump.lt\t@.BB5_37\n.BB5_61:\n\tsub!\tr13, r0, r6\n\tjump.eq\t@.BB5_39\n\tptr.add.s\tstack-[6], r5, r5\n\tadd\tstack-[6], r4, r6\n\tld.1\tr6, r7\n\tadd\tstack-[9], r0, r8\n\tshl\tr7, r8, r7\n\tshr\tr7, r8, r7\n\tld\tr5, r5\n\tsub\t256, r8, r8\n\tshr\tr5, r8, r5\n\tshl\tr5, r8, r5\n\tor\tr5, r7, r5\n\tst.1\tr6, r5\n.BB5_39:\n\tadd\tr4, r10, r5\n\tst.1\tr5, r0\n\tadd\tstack-[7], r4, r5\n\tsub\tr5, r2, r2\n\tadd\t36, r15, r4\n\tst.1\tr4, r2\n\tld.1\tr11, r4\n\tst.1.inc\tr5, r4, r8\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB5_42\n\tadd\tr0, r0, r5\n.BB5_41:\n\tadd\tr5, r8, r6\n\tadd\tr5, r9, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB5_41\n.BB5_42:\n\tadd\tr8, r4, r5\n\tst.1\tr5, r0\n\tcontext.gas_left\tr5\n\tadd\tstack-[5], r0, r2\n\tsub.s!\t4, r2, r6\n\tjump.eq\t@.BB5_54\n\tadd\t31, r4, r1\n\tand\tr1, r12, r1\n\tsub\tr1, r15, r1\n\tadd\tr1, r8, r1\n\tadd\t@CPI5_3[0], r0, r6\n\tsub.s!\t@CPI5_3[0], r15, r3\n\tadd\tr6, r0, r3\n\tadd.lt\tr15, r0, r3\n\tshl.s\t64, r3, r3\n\tsub.s!\t@CPI5_3[0], r1, r4\n\tadd.ge\tr6, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tsub.s!\t@CPI5_3[0], r5, r3\n\tadd.ge\tr6, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r15\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI5_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB5_60\n\tadd\tr0, r0, r7\n.BB5_46:\n\tshl.s\t5, r7, r8\n\tadd\tr15, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB5_46\n.BB5_60:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB5_48\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr15, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB5_48:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_50\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB5_54:\n\tadd\tr1, r15, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI5_5[0], r2, r4\n\tjump.gt\t@.BB5_10\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB5_10\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tadd\tstack-[13], r0, r1\n\tjump.lt\t@.BB5_43\n\tld.1\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tsub.s!\tstack-[11], r1, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t1, r2, r2\n\tjump.eq\t@.BB5_58\n\tret\n.BB5_10:\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_43:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_3:\n\trevert\n.BB5_58:\n\tadd\t@CPI5_7[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_8[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_27:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_66\n\tadd\tr0, r0, r6\n.BB5_29:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_29\n.BB5_66:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB5_30\n\tjump\t@.BB5_31\n.BB5_50:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB5_65\n\tadd\tr0, r0, r6\n.BB5_52:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB5_52\n.BB5_65:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB5_31\n.BB5_30:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB5_31:\n\tadd\t@CPI5_3[0], r0, r1\n\tsub.s!\t@CPI5_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_delivered:\n.func_begin6:\n\tst.1\t0, r1\n\tadd\t106, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI6_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI6_2[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tret\n.BB6_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_recipientIsm:\n.func_begin7:\n\tadd\tr1, r0, r2\n\tld.1\t64, r3\n\tadd\t4, r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tst.1\tr1, r4\n\tsub.s!\t@CPI7_1[0], r3, r4\n\tjump.gt\t@.BB7_2\n\tadd\t64, r3, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB7_4\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB7_7\n.BB7_9:\n\tsub.s!\t@CPI7_3[0], r4, r1\n\tjump.gt\t@.BB7_2\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t63, r1, r1\n\tand\tr1, r3, r1\n\tld.1\t64, r3\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI7_3[0], r1, r6\n\tjump.gt\t@.BB7_2\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB7_2\n\tst.1\t64, r1\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB7_22\n\tadd\tr0, r0, r7\n.BB7_14:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB7_14\n.BB7_22:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB7_8\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr1, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB7_8:\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB7_16\n\tjump\t@.BB7_18\n.BB7_4:\n\tadd\t@CPI7_2[0], r0, r5\n\tsub.s!\t@CPI7_2[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI7_2[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI7_2[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI7_2[0], r1, stack[@returndatasize]\n\tand\t@CPI7_2[0], r1, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB7_9\n.BB7_7:\n\tadd\t96, r0, r3\n\tadd\t128, r0, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB7_18\n.BB7_16:\n\tld.1\tr3, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB7_18\n\tadd\t@CPI7_4[0], r0, r3\n\tsub.s!\t32, r2, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr3, r0, r4\n\tand\t@CPI7_4[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.le\tr0, r0, r3\n\tsub.s!\t@CPI7_4[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB7_19\n\tld.1\tr1, r1\n\tsub.s!\t@CPI7_5[0], r1, r2\n\tjump.gt\t@.BB7_19\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB7_18\n\tret\n.BB7_18:\n\tadd\t103, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI7_5[0], r1, r1\n\tret\n.BB7_2:\n\tadd\t@CPI7_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_19:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_dispatch:\n.func_begin8:\n\tnop\tstack+=[23]\n\tadd\tr7, r0, stack-[22]\n\tadd\tr6, r0, stack-[23]\n\tadd\tr5, r0, stack-[16]\n\tadd\tr4, r0, stack-[13]\n\tadd\tr3, r0, stack-[14]\n\tadd\tr2, r0, stack-[19]\n\tadd\tr1, r0, stack-[12]\n\tadd\t101, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tadd\t@CPI8_0[0], r0, r2\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr3, r2\n\tshl.s\t224, r1, r1\n\tadd\tr4, r0, stack-[18]\n\tadd\t33, r4, r2\n\tst.1\tr2, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[9]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t36, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_91\n\tld\tr1, r1\n\tshl.s\t224, r1, r1\n\tadd\tstack-[18], r0, r3\n\tadd\t37, r3, r2\n\tst.1\tr2, r1\n\tadd\tstack-[12], r0, r1\n\tshl.s\t224, r1, r13\n\tadd\t73, r3, r1\n\tst.1\tr1, r13\n\tadd\t77, r3, r1\n\tadd\tstack-[19], r0, r6\n\tst.1\tr1, r6\n\tadd\t41, r3, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr1, r2\n\tadd\tstack-[13], r0, r7\n\tand\t31, r7, r9\n\tadd\t109, r3, r1\n\tadd\tstack-[14], r0, r8\n\tptr.add\tstack[@ptr_calldata], r8, r2\n\tshr.s!\t5, r7, r10\n\tjump.eq\t@.BB8_4\n\tadd\tr0, r0, r3\n.BB8_3:\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r10, r4\n\tjump.lt\t@.BB8_3\n.BB8_4:\n\tsub!\tr9, r0, r3\n\tshl.s\t5, r10, r12\n\tshl.s\t3, r9, r11\n\tjump.eq\t@.BB8_6\n\tptr.add\tr2, r12, r2\n\tadd\tr1, r12, r3\n\tld.1\tr3, r4\n\tshl\tr4, r11, r4\n\tshr\tr4, r11, r4\n\tld\tr2, r2\n\tsub\t256, r11, r5\n\tshr\tr2, r5, r2\n\tshl\tr2, r5, r2\n\tor\tr2, r4, r2\n\tst.1\tr3, r2\n.BB8_6:\n\tadd\tr1, r7, r1\n\tst.1\tr1, r0\n\tadd\t140, r7, r1\n\tsub.s\t32, r0, stack-[20]\n\tand\tstack-[20], r1, r4\n\tadd\t77, r7, r5\n\tadd\tstack-[18], r0, r1\n\tst.1\tr1, r5\n\tadd\tr1, r4, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI8_4[0], r3, r2\n\tjump.gt\t@.BB8_90\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB8_90\n\tadd\tr5, r0, stack-[2]\n\tadd\tr4, r0, stack-[3]\n\tadd\tr13, r0, stack-[4]\n\tadd\tr12, r0, stack-[5]\n\tadd\tr11, r0, stack-[6]\n\tadd\tr10, r0, stack-[7]\n\tadd\tr9, r0, stack-[8]\n\tst.1\t64, r3\n\tadd\tstack-[22], r0, r1\n\tand!\t@CPI8_5[0], r1, stack-[15]\n\tjump.ne\t@.BB8_10\n\tadd\t104, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI8_5[0], r1, stack-[15]\n.BB8_10:\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r1\n\tadd\t32, r3, r4\n\tadd\t@CPI8_0[0], r0, r2\n\tadd\tr4, r0, stack-[21]\n\tst.1\tr4, r2\n\tadd\tr3, r0, stack-[22]\n\tadd\t33, r3, r2\n\tshl.s\t224, r1, r1\n\tst.1\tr2, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.2\t4, r1\n\tadd\tstack-[17], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_3[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[19], r0, r3\n\tadd\tstack-[14], r0, r4\n\tjump.eq\t@.BB8_91\n\tld\tr1, r1\n\tadd\tstack-[22], r0, r6\n\tadd\t73, r6, r2\n\tadd\tstack-[4], r0, r5\n\tst.1\tr2, r5\n\tshl.s\t224, r1, r1\n\tadd\t37, r6, r2\n\tst.1\tr2, r1\n\tadd\t77, r6, r1\n\tst.1\tr1, r3\n\tadd\t41, r6, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t109, r6, r1\n\tptr.add\tstack[@ptr_calldata], r4, r2\n\tadd\tstack-[7], r0, r8\n\tsub!\tr8, r0, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[6], r0, r9\n\tadd\tstack-[5], r0, r10\n\tjump.eq\t@.BB8_14\n\tadd\tr0, r0, r3\n.BB8_13:\n\tshl.s\t5, r3, r4\n\tadd\tr1, r4, r5\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tst.1\tr5, r4\n\tadd\t1, r3, r3\n\tsub!\tr3, r8, r4\n\tjump.lt\t@.BB8_13\n.BB8_14:\n\tsub!\tr7, r0, r3\n\tadd\tstack-[21], r0, r7\n\tjump.eq\t@.BB8_16\n\tptr.add\tr2, r10, r2\n\tadd\tr1, r10, r3\n\tld.1\tr3, r4\n\tshl\tr4, r9, r4\n\tshr\tr4, r9, r4\n\tld\tr2, r2\n\tsub\t256, r9, r5\n\tshr\tr2, r5, r2\n\tshl\tr2, r5, r2\n\tor\tr2, r4, r2\n\tst.1\tr3, r2\n.BB8_16:\n\tadd\tstack-[13], r1, r1\n\tst.1\tr1, r0\n\tadd\tstack-[2], r0, r1\n\tst.1\tr6, r1\n\tadd\tstack-[3], r6, r1\n\tsub!\tr1, r6, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_4[0], r1, r3\n\tjump.gt\t@.BB8_90\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_90\n\tst.1\t64, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tsub.s!\t@CPI8_2[0], r7, r2\n\tadd\tr1, r0, r2\n\tadd.lt\tr7, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr6, r3\n\tsub.s!\t@CPI8_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_89\n\tld\tr1, r2\n\tadd\t102, r0, r1\n\tadd\tr2, r0, stack-[9]\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI8_2[0], r1, r2\n\tsub.s!\t@CPI8_2[0], r2, r2\n\tadd\tstack-[19], r0, r7\n\tjump.eq\t@.BB8_92\n\tand\t@CPI8_7[0], r1, r2\n\tadd\t1, r1, r1\n\tand\t@CPI8_2[0], r1, r1\n\tor\tr1, r2, r1\n\tsstore\tr3, r1\n\tld.1\t64, r1\n\tadd\tstack-[17], r0, r2\n\tst.1.inc\tr1, r2, r3\n\tadd\tstack-[22], r0, r2\n\tld.1\tr2, r2\n\tst.1\tr3, r2\n\tadd\tstack-[12], r0, r3\n\tand\t@CPI8_2[0], r3, stack-[13]\n\tadd\t64, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[21], r0, r8\n\tjump.eq\t@.BB8_23\n\tadd\tr0, r0, r4\n.BB8_22:\n\tadd\tr4, r3, r5\n\tadd\tr4, r8, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB8_22\n.BB8_23:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[20], r2, r2\n\tadd\t@CPI8_2[0], r0, r4\n\tsub.s!\t@CPI8_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t64, r2, r2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI8_8[0], r0, r4\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[13], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_89\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[7]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI8_2[0], r1, r2\n\tadd.ge\t@CPI8_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI8_9[0], r0, r4\n\tadd\tstack-[9], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r11\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB8_89\n\tadd\t105, r0, r1\n\tsload\tr1, r3\n\tadd\t@CPI8_10[0], r0, r1\n\tst.1\tr11, r1\n\tadd\t68, r11, r1\n\tadd\tstack-[23], r0, r4\n\tst.1\tr1, r4\n\tadd\t4, r11, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr1, r2\n\tand\t31, r4, stack-[19]\n\tadd\t100, r11, r2\n\tand\t@CPI8_5[0], r3, r10\n\tadd\tstack-[16], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r8\n\tjump.eq\t@.BB8_28\n\tadd\tr0, r0, r4\n.BB8_27:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r8, r5\n\tjump.lt\t@.BB8_27\n.BB8_28:\n\tadd\tstack-[19], r0, r5\n\tsub!\tr5, r0, r4\n\tshl.s\t5, r8, r9\n\tshl.s\t3, r5, r6\n\tadd\tstack-[21], r0, r7\n\tadd\tr6, r0, stack-[8]\n\tadd\tr9, r0, stack-[14]\n\tjump.eq\t@.BB8_30\n\tptr.add\tr3, r9, r3\n\tadd\tr2, r9, r4\n\tld.1\tr4, r5\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr3, r3\n\tadd\tstack-[8], r0, r6\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r5, r3\n\tst.1\tr4, r3\n.BB8_30:\n\tadd\tstack-[23], r0, r4\n\tadd\tr2, r4, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tand\tstack-[20], r3, stack-[10]\n\tadd\tstack-[10], r2, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r11, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_33\n\tadd\tr0, r0, r3\n.BB8_32:\n\tadd\tr3, r1, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB8_32\n.BB8_33:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r10, r4\n\tadd\tr8, r0, stack-[12]\n\tadd\tr10, r0, stack-[6]\n\tjump.ne\t@.BB8_35\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB8_41\n.BB8_35:\n\tadd\t31, r2, r2\n\tand\tstack-[20], r2, r2\n\tsub\tr2, r11, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI8_2[0], r0, r2\n\tsub.s!\t@CPI8_2[0], r11, r4\n\tadd\tr2, r0, r4\n\tadd.lt\tr11, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI8_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI8_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r11\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_2[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB8_38\n\tadd\tr0, r0, r7\n.BB8_37:\n\tshl.s\t5, r7, r8\n\tadd\tr11, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB8_37\n.BB8_38:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB8_40\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr11, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB8_40:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r10\n\tjump.eq\t@.BB8_94\n.BB8_41:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r11, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI8_4[0], r1, r4\n\tjump.gt\t@.BB8_90\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB8_90\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB8_89\n\tld.1\tr11, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t@CPI8_11[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r10\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tcontext.get_context_u128\tr4\n\tsub.s!\tstack-[7], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd\tstack-[7], r0, r3\n\tadd.lt\tr4, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_91\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[14], r0, r8\n\tadd\tstack-[6], r0, r9\n\tjump.eq\t@.BB8_89\n\tld.1\t64, r10\n\tadd\t68, r10, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_13[0], r0, r1\n\tst.1\tr10, r1\n\tadd\t4, r10, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r10, r2\n\tadd\tstack-[16], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tsub!\tr7, r0, r4\n\tjump.eq\t@.BB8_49\n\tadd\tr0, r0, r4\n.BB8_48:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB8_48\n.BB8_49:\n\tsub!\tstack-[19], r0, r4\n\tadd\tstack-[21], r0, r7\n\tjump.eq\t@.BB8_51\n\tptr.add\tr3, r8, r3\n\tadd\tr2, r8, r4\n\tld.1\tr4, r5\n\tadd\tstack-[8], r0, r6\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr3, r3\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r5, r3\n\tst.1\tr4, r3\n.BB8_51:\n\tadd\tstack-[23], r2, r3\n\tst.1\tr3, r0\n\tadd\tstack-[10], r2, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r10, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_54\n\tadd\tr0, r0, r3\n.BB8_53:\n\tadd\tr3, r1, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB8_53\n.BB8_54:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r9, r4\n\tjump.eq\t@.BB8_60\n\tadd\t31, r2, r2\n\tand\tstack-[20], r2, r2\n\tsub\tr2, r10, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI8_2[0], r0, r2\n\tsub.s!\t@CPI8_2[0], r10, r4\n\tadd\tr10, r0, stack-[3]\n\tadd\tr2, r0, r4\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI8_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI8_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[5], r0, r3\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB8_57\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tr9, r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB8_58\n.BB8_57:\n\tadd\tr9, r0, r2\n.BB8_58:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_2[0], r3, stack[@returndatasize]\n\tand\t@CPI8_2[0], r3, r3\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r10\n\tjump.eq\t@.BB8_98\n.BB8_60:\n\tsub.s!\t@CPI8_4[0], r10, r1\n\tjump.gt\t@.BB8_90\n\tst.1\t64, r10\n\tadd\t@CPI8_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[15], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_91\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[12], r0, r7\n\tadd\tstack-[14], r0, r8\n\tjump.eq\t@.BB8_89\n\tld.1\t64, r9\n\tadd\t68, r9, r1\n\tadd\tstack-[23], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI8_13[0], r0, r1\n\tst.1\tr9, r1\n\tadd\t4, r9, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r9, r2\n\tadd\tstack-[16], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tsub!\tr7, r0, r4\n\tjump.eq\t@.BB8_66\n\tadd\tr0, r0, r4\n.BB8_65:\n\tshl.s\t5, r4, r5\n\tadd\tr2, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB8_65\n.BB8_66:\n\tsub!\tstack-[19], r0, r4\n\tadd\tstack-[21], r0, r7\n\tjump.eq\t@.BB8_68\n\tptr.add\tr3, r8, r3\n\tadd\tr2, r8, r4\n\tld.1\tr4, r5\n\tadd\tstack-[8], r0, r6\n\tshl\tr5, r6, r5\n\tshr\tr5, r6, r5\n\tld\tr3, r3\n\tsub\t256, r6, r6\n\tshr\tr3, r6, r3\n\tshl\tr3, r6, r3\n\tor\tr3, r5, r3\n\tst.1\tr4, r3\n.BB8_68:\n\tadd\tstack-[23], r2, r3\n\tst.1\tr3, r0\n\tadd\tstack-[10], r2, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r9, r2\n\tst.1\tr2, r1\n\tadd\tstack-[22], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB8_71\n\tadd\tr0, r0, r3\n.BB8_70:\n\tadd\tr3, r1, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB8_70\n.BB8_71:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tcontext.gas_left\tr3\n\tadd\tstack-[15], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB8_77\n\tadd\t31, r2, r2\n\tand\tstack-[20], r2, r2\n\tsub\tr2, r9, r2\n\tadd\tr2, r1, r1\n\tadd\t@CPI8_2[0], r0, r2\n\tsub.s!\t@CPI8_2[0], r9, r4\n\tadd\tr9, r0, stack-[23]\n\tadd\tr2, r0, r4\n\tadd.lt\tr9, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI8_2[0], r1, r5\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI8_2[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\tstack-[4], r0, r3\n\tsub.s!\tstack-[7], r3, r2\n\tjump.le\t@.BB8_74\n\tsub.s\tstack-[5], r3, r3\n\tor\t@CPI8_6[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[15], r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB8_75\n.BB8_74:\n\tadd\tstack-[15], r0, r2\n.BB8_75:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_2[0], r3, stack[@returndatasize]\n\tand\t@CPI8_2[0], r3, r3\n\tand!\t1, r2, r2\n\tadd\tstack-[23], r0, r9\n\tjump.eq\t@.BB8_103\n.BB8_77:\n\tsub.s!\t@CPI8_4[0], r9, r1\n\tjump.gt\t@.BB8_90\n\tst.1\t64, r9\n\tadd\tstack-[13], r0, r1\n\tst.1\t0, r1\n\tadd\t108, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_14[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_89\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI8_5[0], r1, r2\n\tjump.eq\t@.BB8_93\n\tadd\t@CPI8_11[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr2, r0, stack-[23]\n\tst.2\t4, r2\n\tadd\t@CPI8_2[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_2[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_12[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_91\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB8_89\n\tld.1\t64, r7\n\tadd\t@CPI8_15[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[18], r0, r1\n\tld.1\tr1, r1\n\tadd\t36, r7, r2\n\tst.1\tr2, r1\n\tadd\t68, r7, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[1], r0, r6\n\tjump.eq\t@.BB8_85\n\tadd\tr0, r0, r3\n.BB8_84:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB8_84\n.BB8_85:\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr6\n\tadd\tstack-[23], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB8_87\n\tadd\t31, r1, r1\n\tand\tstack-[20], r1, r1\n\tadd\t@CPI8_2[0], r0, r3\n\tsub.s!\t@CPI8_2[0], r7, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr7, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t68, r1, r1\n\tsub.s!\t@CPI8_2[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI8_2[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr1, r3, r1\n\tadd\tr7, r0, stack-[23]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[23], r0, r7\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI8_2[0], r3, stack[@returndatasize]\n\tand\t@CPI8_2[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_110\n.BB8_87:\n\tsub.s!\t@CPI8_4[0], r7, r1\n\tjump.gt\t@.BB8_90\n\tst.1\t64, r7\n\tadd\tstack-[9], r0, r1\n\tret\n.BB8_89:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_90:\n\tadd\t@CPI8_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_91:\n\trevert\n.BB8_92:\n\tadd\t@CPI8_19[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_20[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_93:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI8_16[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t22, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_17[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\tstack-[17], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI8_2[0], r0, r2\n\tsub.s!\t@CPI8_2[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI8_18[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_94:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_97\n\tadd\tr0, r0, r6\n.BB8_96:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_96\n.BB8_97:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB8_108\n\tjump\t@.BB8_109\n.BB8_98:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_101\n\tadd\tr0, r0, r6\n.BB8_100:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_100\n.BB8_101:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB8_109\n\tjump\t@.BB8_108\n.BB8_103:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_106\n\tadd\tr0, r0, r6\n.BB8_105:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_105\n.BB8_106:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB8_109\n.BB8_108:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB8_109:\n\tadd\t@CPI8_2[0], r0, r1\n\tsub.s!\t@CPI8_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_110:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB8_113\n\tadd\tr0, r0, r6\n.BB8_112:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB8_112\n.BB8_113:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB8_115\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB8_115:\n\tadd\t@CPI8_2[0], r0, r1\n\tsub.s!\t@CPI8_2[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\nincrement_uint32:\n.func_begin9:\n\tand\t@CPI9_0[0], r1, r1\n\tsub.s!\t@CPI9_0[0], r1, r2\n\tjump.eq\t@.BB9_1\n\tadd\t1, r1, r1\n\tret\n.BB9_1:\n\tadd\t@CPI9_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI9_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end9:\n\nfun_transferOwnership:\n.func_begin10:\n\tand\t@CPI10_0[0], r1, r6\n\tadd\t51, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI10_1[0], r2, r3\n\tor\tr3, r6, r3\n\tsstore\tr1, r3\n\tadd\t@CPI10_2[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI10_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI10_3[0], r1, r1\n\tand\t@CPI10_0[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI10_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB10_1\n\tret\n.BB10_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__cxa_throw:\n.func_begin11:\n\trevert\n.func_end11:\n\n__sha3:\n.func_begin12:\n\tadd\t@CPI12_0[0], r0, r3\n\tsub.s!\t@CPI12_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI12_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI12_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB12_2\n\tld\tr1, r1\n\tret\n.BB12_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end12:\n\n__system_request:\n.func_begin13:\n\tadd\tr1, r0, r5\n\tst.2\t0, r2\n\tsub.s!\t5, r3, r1\n\tjump.lt\t@.BB13_4\n\tadd\t4, r0, r1\n\tadd\tr0, r0, r2\n.BB13_3:\n\tshl.s\t5, r2, r6\n\tadd\tr4, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\tstack[r6], r0, r6\n\tst.2.inc\tr1, r6, r1\n\tadd\t1, r2, r2\n\tsub!\tr1, r3, r6\n\tjump.lt\t@.BB13_3\n.BB13_4:\n\tadd\t@CPI13_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI13_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI13_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI13_1[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB13_5\n\tld\tr1, r1\n\tret\n.BB13_5:\n\trevert\n.func_end13:\n\n__farcall:\n.func_begin14:\n.tmp0:\n\tfar_call\tr1, r2, @.BB14_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB14_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end14:\n\n__staticcall:\n.func_begin15:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB15_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB15_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end15:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_1:\nCPI2_1:\nCPI3_0:\nCPI5_3:\nCPI6_0:\nCPI7_2:\nCPI8_2:\nCPI9_0:\nCPI10_2:\nCPI12_0:\nCPI13_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI0_3:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_4:\n\t.cell -18446744073709551616\nCPI0_5:\n\t.cell 18446744073709551483\nCPI0_6:\n\t.cell 452314078407608609462693138518046118374410832638545894883868692604490847893\nCPI0_7:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_8:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_9:\nCPI1_3:\nCPI5_0:\nCPI7_5:\nCPI8_5:\nCPI10_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_10:\nCPI10_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_11:\n\t.cell 452314389262816796327454965486322207700436500050813832268967831217364014270\nCPI0_12:\nCPI8_6:\nCPI10_3:\nCPI12_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_13:\nCPI10_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_14:\n\t.cell 44065893779156019096526571712708802870206131610370704296361933175528661975040\nCPI0_15:\n\t.cell 33213918945522163348297488160619434111254143694905912425159868126520989545577\nCPI0_16:\nCPI8_17:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_17:\n\t.cell 10458117451882892562347801444352\nCPI0_18:\nCPI3_1:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_19:\n\t.cell 57512143604608921510564439283751233207941214245504845198923540334447261918360\nCPI0_20:\n\t.cell 53919893334301279589334030174039261362486096052542264263037304176640\nCPI0_21:\n\t.cell 2369140979\nCPI0_22:\n\t.cell 3603991048\nCPI0_23:\n\t.cell 4153698425\nCPI0_24:\n\t.cell 4173887069\nCPI0_25:\n\t.cell 4173887070\nCPI0_26:\n\t.cell 4197572097\nCPI0_27:\n\t.cell 4288785780\nCPI0_28:\n\t.cell 4153698426\nCPI0_29:\n\t.cell 4157395745\nCPI0_30:\n\t.cell 3876538539\nCPI0_31:\n\t.cell 3876538540\nCPI0_32:\n\t.cell 4076725131\nCPI0_33:\n\t.cell 3603991049\nCPI0_34:\n\t.cell 3835032020\nCPI0_35:\n\t.cell 2621619479\nCPI0_36:\n\t.cell 2952712415\nCPI0_37:\n\t.cell 2952712416\nCPI0_38:\n\t.cell 3508626660\nCPI0_39:\n\t.cell 2621619480\nCPI0_40:\n\t.cell 2746519967\nCPI0_41:\n\t.cell 2463271740\nCPI0_42:\n\t.cell 2463271741\nCPI0_43:\n\t.cell 2578466825\nCPI0_44:\n\t.cell 2369140980\nCPI0_45:\n\t.cell 2376452955\nCPI0_46:\n\t.cell 1504966367\nCPI0_47:\n\t.cell 2084163887\nCPI0_48:\n\t.cell 2181681937\nCPI0_49:\n\t.cell 2181681938\nCPI0_50:\n\t.cell 2196405246\nCPI0_51:\n\t.cell 2084163888\nCPI0_52:\n\t.cell 2178083477\nCPI0_53:\n\t.cell 1851740525\nCPI0_54:\n\t.cell 1851740526\nCPI0_55:\n\t.cell 1901074598\nCPI0_56:\n\t.cell 1504966368\nCPI0_57:\n\t.cell 1562371497\nCPI0_58:\n\t.cell 369476357\nCPI0_59:\n\t.cell 1024610486\nCPI0_60:\n\t.cell 1024610487\nCPI0_61:\n\t.cell 1219422420\nCPI0_62:\n\t.cell 369476358\nCPI0_63:\n\t.cell 847812876\nCPI0_64:\n\t.cell 323992398\nCPI0_65:\n\t.cell 323992399\nCPI0_66:\n\t.cell 338081780\nCPI0_67:\n\t.cell 128122273\nCPI0_68:\n\t.cell 280509888\nCPI0_69:\n\t.cell 2535301202817642044428229017600\nCPI0_70:\nCPI1_2:\nCPI2_2:\nCPI3_2:\nCPI5_5:\nCPI7_3:\nCPI8_4:\n\t.cell 18446744073709551615\nCPI0_71:\nCPI5_1:\nCPI8_0:\n\t.cell 1356938545749799165119972480570561420155507632800475359837393562592731987968\nCPI0_72:\nCPI5_2:\nCPI8_1:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_73:\nCPI5_4:\nCPI8_3:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_74:\n\t.cell 18446744073709551487\nCPI0_75:\nCPI8_7:\n\t.cell -4294967296\nCPI0_76:\nCPI8_8:\n\t.cell 53654625498752477999337343059536398080296297724496282377212575182935889135636\nCPI0_77:\nCPI8_9:\n\t.cell 54527965534291682244266507867501002513330022150163389627525605330405894665530\nCPI0_78:\nCPI5_6:\nCPI8_10:\n\t.cell -38537017516135852955244813643456736314941791691183912651424411239534332739584\nCPI0_79:\nCPI8_11:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_80:\nCPI8_12:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_81:\nCPI8_13:\n\t.cell 3788242424162884865079338245840267105998491766625572112790070462651077492736\nCPI0_82:\nCPI6_1:\nCPI8_14:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_83:\nCPI8_15:\n\t.cell 22856989920683598649556691523261503349874124793301481981890907459370893705216\nCPI0_84:\n\t.cell 2535301200456458802993406410752\nCPI0_85:\nCPI8_16:\n\t.cell 35014405095040197615326976622940098073287595757832486290955050631657752100864\nCPI0_86:\nCPI8_18:\n\t.cell 7922816251426433759354395033600\nCPI0_87:\n\t.cell 45445297051470054334538976711054531813460623115156291166328260229624781340672\nCPI0_88:\n\t.cell 33213918945522163348297488160619434111254143694905912425159868126486596838753\nCPI0_89:\n\t.cell -65536\nCPI0_90:\n\t.cell -40067117487590181668773000624162485856333169977519469946916999622445191701078\nCPI0_91:\n\t.cell 45977324395572189501795640741656111967299219518842653435434047008852625471447\nCPI0_92:\n\t.cell 22896190714728488097963353167996834803278593861293779645832300459385807700657\nCPI0_93:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_94:\n\t.cell -65281\nCPI0_95:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_96:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_97:\n\t.cell 49940735729591551243672370266578737478300007093892078568002313358426186448896\nCPI0_98:\n\t.cell 33213918945522163348297488160619434111254143694905912425159868126542481858665\nCPI0_99:\n\t.cell 52468290435658901051305602582061708246012961801618380580379217753585636868096\nCPI0_100:\n\t.cell 35000201111602128778598051913215597287584640772636359145740052337944660435299\nCPI0_101:\n\t.cell 10458117454244075803782624051200\nCPI0_102:\nCPI3_3:\nCPI5_7:\nCPI7_6:\nCPI8_19:\nCPI9_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_103:\nCPI3_4:\nCPI5_8:\nCPI7_7:\nCPI8_20:\nCPI9_2:\n\t.cell 2852213850513516153367582212096\nCPI0_104:\n\t.cell 44983926269257665031190754368914705412967740014453258673776093884910099496960\nCPI0_105:\n\t.cell 35000201111602128778598051913215597287584802304463317227842400833760736342625\nCPI0_106:\n\t.cell -452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI0_107:\n\t.cell 35000201111602128778597858851401246440256527255323293089226427587831772741632\nCPI0_108:\n\t.cell 7922816253787617000789217640448\nCPI0_109:\n\t.cell 35000201111602128778599683555697232736110021912617552296864991794611404893696\nCPI0_110:\nCPI6_2:\n\t.cell 411376139330300049037104964736419422560851250125375309904609280\nCPI0_111:\n\t.cell 35000201111602128778597767206873027931355152707750256062300268598512219848704\nCPI0_112:\nCPI7_0:\n\t.cell -15233334736471382138234474861969040676167165398497161756372066007914249191424\nCPI0_113:\nCPI7_1:\n\t.cell 18446744073709551551\nCPI0_114:\nCPI1_0:\nCPI2_0:\nCPI7_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_115:\n\t.cell 281474976710655\nCPI0_116:\n\t.cell -411376139330301510538742295639337626245683966408394965837152256\nCPI0_117:\n\t.cell 5979204857618508254944138723242686143229935388391975374099677347592230561140\nCPI0_118:\n\t.cell 12972583196495312631108539236436642268067347704018224725554243618464814101417\nCPI0_119:\n\t.cell -3660500400465391696344650074949724386646204144365524034151518120014088503296\nCPI0_120:\n\t.cell 39276709727497984918454912288297903599021847994296131379281858992791489609728\nCPI0_121:\n\t.cell 4294967163\nCPI0_122:\n\t.cell 35000201111602128778595459055482237636335208398017947729967068006957466805604\nCPI0_123:\n\t.cell 56188947266081319316140727829117491797091650020899674379962706867842667511808\nCPI0_124:\n\t.cell -18446744069414584321\nCPI0_125:\n\t.cell 44050064774566127426240532422701725653047485361646828009770163057236264353792\nCPI0_126:\n\t.cell 35000201111602128778599392863004285675109385984470995072305545249498520777842\nCPI13_1:\n\t.cell 904625751086426111047927909714404454142933102474605751639407337269041823744\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "VERSION()": "ffa1ad74",
            "addInboundMessage(bytes)": "3288990c",
            "addRemoteMailbox(uint32,address)": "59b3f6e0",
            "defaultHook()": "3d1250b7",
            "defaultIsm()": "6e5f516e",
            "delivered(bytes32)": "e495f1d4",
            "deployedBlock()": "82ea7bfe",
            "dispatch(uint32,bytes32,bytes)": "fa31de01",
            "dispatch(uint32,bytes32,bytes,bytes)": "48aee8d4",
            "dispatch(uint32,bytes32,bytes,bytes,address)": "10b83dc0",
            "inboundMessages(uint256)": "92d28b3d",
            "inboundProcessedNonce()": "d12164e4",
            "inboundUnprocessedNonce()": "8209d312",
            "initialize(address,address,address,address)": "f8c8765e",
            "latestDispatchedId()": "134fbb4f",
            "localDomain()": "8d3638f4",
            "nonce()": "affed0e0",
            "owner()": "8da5cb5b",
            "process(bytes,bytes)": "7c39d130",
            "processNextInboundMessage()": "1605c306",
            "processedAt(bytes32)": "07a2fda1",
            "processor(bytes32)": "5d1fe5a9",
            "quoteDispatch(uint32,bytes32,bytes)": "9c42bd18",
            "quoteDispatch(uint32,bytes32,bytes,bytes)": "f7ccd321",
            "quoteDispatch(uint32,bytes32,bytes,bytes,address)": "81d2ea95",
            "recipientIsm(address)": "e70f48ac",
            "remoteMailboxes(uint32)": "a3b4919f",
            "renounceOwnership()": "715018a6",
            "requiredHook()": "d6d08a09",
            "setDefaultHook(address)": "99b04809",
            "setDefaultIsm(address)": "f794687a",
            "setRequiredHook(address)": "1426b7f4",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"contracts/Mailbox.sol\", 4:\"contracts/interfaces/IMailbox.sol\", 7:\"contracts/libs/Indexed.sol\", 10:\"contracts/mock/MockMailbox.sol\", 13:\"contracts/upgrade/Versioned.sol\", 14:\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\", 15:\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 17:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\"\nobject \"MockMailbox_1826\" {\n    code {\n        {\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            let _1 := memoryguard(0xc0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockMailbox_1826\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            let _2 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x24)\n            }\n            let _3 := 64\n            mstore(_3, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            let value := mload(_1)\n            if iszero(eq(value, and(value, 0xffffffff)))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:164:192  \"deployedBlock = block.number\"\n            mstore(128, /** @src 7:180:192  \"block.number\" */ number())\n            /// @src 0:2675:2701  \"localDomain = _localDomain\"\n            mstore(160, value)\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            sstore(/** @src 10:740:741  \"0\" */ 0x6b, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(sload(/** @src 10:740:741  \"0\" */ 0x6b), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ not(sub(shl(64, 1), 1))))\n            /// @src 10:976:989  \"new TestIsm()\"\n            let _4 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_3)\n            /// @src 10:976:989  \"new TestIsm()\"\n            let _5 := datasize(\"TestIsm_1865\")\n            let _6 := add(_4, _5)\n            if or(gt(_6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2), /** @src 10:976:989  \"new TestIsm()\" */ lt(_6, _4))\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x24)\n            }\n            /// @src 10:976:989  \"new TestIsm()\"\n            datacopy(_4, dataoffset(\"TestIsm_1865\"), _5)\n            /// @src -1:-1:-1\n            let _7 := 0\n            /// @src 10:976:989  \"new TestIsm()\"\n            let expr_address := create(/** @src -1:-1:-1 */ _7, /** @src 10:976:989  \"new TestIsm()\" */ _4, sub(_6, _4))\n            if iszero(expr_address)\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let pos := mload(_3)\n                returndatacopy(pos, /** @src -1:-1:-1 */ _7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            let _8 := sub(shl(160, 1), 1)\n            let _9 := not(sub(shl(160, 1), 1))\n            sstore(/** @src 10:999:1015  \"defaultIsm = ism\" */ 0x67, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 10:999:1015  \"defaultIsm = ism\" */ 0x67), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _9), and(/** @src 10:999:1015  \"defaultIsm = ism\" */ expr_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _8)))\n            /// @src 10:1054:1080  \"new TestPostDispatchHook()\"\n            let _10 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_3)\n            /// @src 10:1054:1080  \"new TestPostDispatchHook()\"\n            let _11 := datasize(\"TestPostDispatchHook_1935\")\n            let _12 := add(_10, _11)\n            if or(gt(_12, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2), /** @src 10:1054:1080  \"new TestPostDispatchHook()\" */ lt(_12, _10))\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                mstore(/** @src -1:-1:-1 */ _7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ _7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x24)\n            }\n            /// @src 10:1054:1080  \"new TestPostDispatchHook()\"\n            datacopy(_10, dataoffset(\"TestPostDispatchHook_1935\"), _11)\n            let expr_address_1 := create(/** @src -1:-1:-1 */ _7, /** @src 10:1054:1080  \"new TestPostDispatchHook()\" */ _10, sub(_12, _10))\n            if iszero(expr_address_1)\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let pos_1 := mload(_3)\n                returndatacopy(pos_1, /** @src -1:-1:-1 */ _7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                revert(pos_1, returndatasize())\n            }\n            let _13 := and(/** @src 10:1090:1108  \"defaultHook = hook\" */ expr_address_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _8)\n            sstore(/** @src 10:1090:1108  \"defaultHook = hook\" */ 0x68, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 10:1090:1108  \"defaultHook = hook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _9), _13))\n            sstore(/** @src 10:1118:1137  \"requiredHook = hook\" */ 0x69, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 10:1118:1137  \"requiredHook = hook\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _9), _13))\n            let _14 := sload(/** @src 14:2779:2785  \"_owner\" */ 0x33)\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            sstore(/** @src 14:2779:2785  \"_owner\" */ 0x33, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_14, _9), /** @src 10:1167:1177  \"msg.sender\" */ caller()))\n            /// @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _15 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_3)\n            /// @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ _7, _7, /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_14, _8), /** @src 10:1167:1177  \"msg.sender\" */ caller())\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            let _16 := sload(/** @src -1:-1:-1 */ _7)\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            if iszero(/** @src 15:6006:6020  \"!_initializing\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(shr(8, _16), 0xff)))\n            {\n                mstore(_15, shl(229, 4594637))\n                mstore(add(_15, 4), 32)\n                mstore(add(_15, 36), 39)\n                mstore(add(_15, 68), \"Initializable: contract is initi\")\n                mstore(add(_15, 100), \"alizing\")\n                revert(_15, 132)\n            }\n            /// @src 15:6074:6213  \"if (_initialized != type(uint8).max) {...\"\n            if /** @src 15:6078:6109  \"_initialized != type(uint8).max\" */ iszero(eq(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_16, 0xff), 0xff))\n            /// @src 15:6074:6213  \"if (_initialized != type(uint8).max) {...\"\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                sstore(/** @src -1:-1:-1 */ _7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_16, not(255)), 0xff))\n                /// @src 15:6174:6202  \"Initialized(type(uint8).max)\"\n                let _17 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_3)\n                mstore(_17, 0xff)\n                /// @src 15:6174:6202  \"Initialized(type(uint8).max)\"\n                log1(_17, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 32, /** @src 15:6174:6202  \"Initialized(type(uint8).max)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n            }\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            let _18 := mload(_3)\n            let _19 := datasize(\"MockMailbox_1826_deployed\")\n            codecopy(_18, dataoffset(\"MockMailbox_1826_deployed\"), _19)\n            setimmutable(_18, \"1334\", mload(/** @src 7:164:192  \"deployedBlock = block.number\" */ 128))\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            setimmutable(_18, \"41\", mload(/** @src 0:2675:2701  \"localDomain = _localDomain\" */ 160))\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            return(_18, _19)\n        }\n    }\n    /// @use-src 0:\"contracts/Mailbox.sol\", 7:\"contracts/libs/Indexed.sol\", 8:\"contracts/libs/Message.sol\", 9:\"contracts/libs/TypeCasts.sol\", 10:\"contracts/mock/MockMailbox.sol\", 13:\"contracts/upgrade/Versioned.sol\", 14:\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\", 15:\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 16:\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\", 17:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\", 18:\"node_modules/@openzeppelin/contracts/utils/Address.sol\"\n    object \"MockMailbox_1826_deployed\" {\n        code {\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x07a2fda1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 0:8896:8906  \"deliveries\" */ 0x6a)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        mstore(_1, and(shr(160, sload(keccak256(_2, 64))), 0xffffffffffff))\n                        return(_1, 32)\n                    }\n                    case 0x10b83dc0 {\n                        let param, param_1, param_2, param_3, param_4, param_5, param_6 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook(calldatasize())\n                        let ret := fun_dispatch(param, param_1, param_2, param_3, param_4, param_5, param_6)\n                        let memPos := mload(64)\n                        mstore(memPos, ret)\n                        return(memPos, 32)\n                    }\n                    case 0x134fbb4f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _3 := sload(/** @src 0:1426:1459  \"bytes32 public latestDispatchedId\" */ 102)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x1426b7f4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value0))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 35)\n                            mstore(add(memPtr, 68), \"Mailbox: required hook not contr\")\n                            mstore(add(memPtr, 100), \"act\")\n                            revert(memPtr, 132)\n                        }\n                        let _4 := and(/** @src 0:13304:13328  \"IPostDispatchHook(_hook)\" */ value0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        sstore(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(160, 0xffffffffffffffffffffffff)), _4))\n                        /// @src 0:13343:13365  \"RequiredHookSet(_hook)\"\n                        log2(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2, _2, /** @src 0:13343:13365  \"RequiredHookSet(_hook)\" */ 0x329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b1, _4)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(_2, _2)\n                    }\n                    case 0x1605c306 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _5 := 0xffffffff\n                        mstore(_2, and(shr(32, sload(/** @src 10:2455:2476  \"inboundProcessedNonce\" */ 0x6b)), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _5))\n                        mstore(32, /** @src 10:2439:2454  \"inboundMessages\" */ 0x6d)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let converted := copy_array_from_storage_to_memory_bytes(keccak256(_2, 64))\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        if iszero(extcodesize(/** @src 10:2503:2507  \"this\" */ address()))\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        let _6 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        mstore(_6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(228, 0x07c39d13))\n                        mstore(/** @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\" */ add(_6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), 64)\n                        mstore(add(/** @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\" */ _6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68), _2)\n                        mstore(add(/** @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\" */ _6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), 96)\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        let _7 := call(gas(), /** @src 10:2503:2507  \"this\" */ address(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2, /** @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\" */ _6, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(converted, add(/** @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\" */ _6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 100)), /** @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\" */ _6), _6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2)\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        if iszero(_7)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, _2, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 10:2487:2531  \"Mailbox(address(this)).process(\\\"\\\", _message)\"\n                        if _7\n                        {\n                            finalize_allocation_17585(_6)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            _2 := _2\n                        }\n                        let _8 := sload(/** @src 10:2455:2476  \"inboundProcessedNonce\" */ 0x6b)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        sstore(/** @src 10:2455:2476  \"inboundProcessedNonce\" */ 0x6b, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_8, not(0xffffffff00000000)), and(shl(32, /** @src 10:2541:2564  \"inboundProcessedNonce++\" */ increment_uint32(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(shr(32, _8), _5))), 0xffffffff00000000)))\n                        return(_2, _2)\n                    }\n                    case 0x3288990c {\n                        if callvalue() { revert(_2, _2) }\n                        let _9 := 32\n                        if slt(add(calldatasize(), not(3)), _9) { revert(_2, _2) }\n                        let offset := calldataload(4)\n                        let _10 := 0xffffffffffffffff\n                        if gt(offset, _10) { revert(_2, _2) }\n                        let value0_1, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                        let _11 := 0xffffffff\n                        mstore(_2, and(sload(/** @src 10:2279:2302  \"inboundUnprocessedNonce\" */ 0x6b), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _11))\n                        mstore(_9, /** @src 10:2263:2278  \"inboundMessages\" */ 0x6d)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let dataSlot := keccak256(_2, 64)\n                        if gt(value1, _10)\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        let _12 := extract_byte_array_length(sload(dataSlot))\n                        if gt(_12, 31)\n                        {\n                            mstore(_2, dataSlot)\n                            let data := keccak256(_2, _9)\n                            let deleteStart := add(data, shr(5, add(value1, 31)))\n                            if lt(value1, _9) { deleteStart := data }\n                            let _13 := add(data, shr(5, add(_12, 31)))\n                            let start := deleteStart\n                            for { } lt(start, _13) { start := add(start, 1) }\n                            { sstore(start, _2) }\n                        }\n                        let srcOffset := _2\n                        switch gt(value1, 31)\n                        case 1 {\n                            let loopEnd := and(value1, not(31))\n                            mstore(_2, dataSlot)\n                            let dstPtr := keccak256(_2, _9)\n                            let i := _2\n                            for { } lt(i, loopEnd) { i := add(i, _9) }\n                            {\n                                sstore(dstPtr, calldataload(add(value0_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _9)\n                            }\n                            if lt(loopEnd, value1)\n                            {\n                                sstore(dstPtr, and(calldataload(add(value0_1, srcOffset)), not(shr(and(shl(3, value1), 248), not(0)))))\n                            }\n                            sstore(dataSlot, add(shl(1, value1), 1))\n                        }\n                        default {\n                            let value := _2\n                            if value1\n                            {\n                                value := calldataload(add(value0_1, srcOffset))\n                            }\n                            sstore(dataSlot, or(and(value, not(shr(shl(3, value1), not(0)))), shl(1, value1)))\n                        }\n                        let _14 := sload(/** @src 10:2279:2302  \"inboundUnprocessedNonce\" */ 0x6b)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        sstore(/** @src 10:2279:2302  \"inboundUnprocessedNonce\" */ 0x6b, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_14, not(0xffffffff)), and(/** @src 10:2323:2348  \"inboundUnprocessedNonce++\" */ increment_uint32(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_14, _11)), _11)))\n                        return(_2, _2)\n                    }\n                    case 0x3d1250b7 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_1 := and(sload(/** @src 0:1673:1709  \"IPostDispatchHook public defaultHook\" */ 104), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x48aee8d4 {\n                        let param_7, param_8, param_9, param_10, param_11, param_12 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata(calldatasize())\n                        let ret_1 := /** @src 0:4652:4831  \"dispatch(...\" */ fun_dispatch(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ param_7, param_8, param_9, param_10, param_11, param_12, and(sload(/** @src 0:4806:4817  \"defaultHook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, ret_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x59b3f6e0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value0_2 := abi_decode_uint32()\n                        let value_2 := calldataload(36)\n                        let _15 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _15)) { revert(_2, _2) }\n                        mstore(_2, and(value0_2, 0xffffffff))\n                        mstore(32, /** @src 10:1306:1321  \"remoteMailboxes\" */ 0x6c)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let _16 := keccak256(_2, 64)\n                        sstore(_16, or(and(sload(_16), shl(160, 0xffffffffffffffffffffffff)), _15))\n                        return(_2, _2)\n                    }\n                    case 0x5d1fe5a9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 0:8580:8590  \"deliveries\" */ 0x6a)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let cleaned := and(sload(keccak256(_2, 64)), sub(shl(160, 1), 1))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, cleaned)\n                        return(memPos_4, 32)\n                    }\n                    case 0x6e5f516e {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_3 := and(sload(/** @src 0:1534:1577  \"IInterchainSecurityModule public defaultIsm\" */ 103), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let _17 := sload(/** @src 14:2779:2785  \"_owner\" */ 0x33)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        sstore(/** @src 14:2779:2785  \"_owner\" */ 0x33, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_17, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0, 0, /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_17, sub(shl(160, 1), 1)), 0)\n                        return(_2, _2)\n                    }\n                    case 0x7c39d130 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let offset_1 := calldataload(4)\n                        let _18 := 0xffffffffffffffff\n                        if gt(offset_1, _18) { revert(_2, _2) }\n                        let value0_3, value1_1 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                        let offset_2 := calldataload(36)\n                        if gt(offset_2, _18) { revert(_2, _2) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(4, offset_2), calldatasize())\n                        if gt(/** @src 8:364:365  \"1\" */ 0x01, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ value3) { revert(_2, _2) }\n                        if iszero(/** @src 0:7109:7138  \"_message.version() == VERSION\" */ eq(/** @src 8:364:365  \"1\" */ shr(248, calldataload(value2)), /** @src 13:199:200  \"3\" */ 0x03))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 20)\n                            mstore(add(memPtr_1, 68), \"Mailbox: bad version\")\n                            revert(memPtr_1, 100)\n                        }\n                        if gt(/** @src 8:565:567  \"45\" */ 0x2d, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ value3) { revert(_2, _2) }\n                        if iszero(/** @src 0:7194:7231  \"_message.destination() == localDomain\" */ eq(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shr(224, /** @src 8:460:461  \"9\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(value2, /** @src 8:513:515  \"41\" */ 0x29))), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:7220:7231  \"localDomain\" */ loadimmutable(\"41\"), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0xffffffff)))\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 31)\n                            mstore(add(memPtr_2, 68), \"Mailbox: unexpected destination\")\n                            revert(memPtr_2, 100)\n                        }\n                        let _19 := array_allocation_size_bytes(value3)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, _19)\n                        mstore(memPtr_3, value3)\n                        let dst := add(memPtr_3, 32)\n                        if gt(add(value2, value3), calldatasize()) { revert(_2, _2) }\n                        calldatacopy(dst, value2, value3)\n                        mstore(add(add(memPtr_3, value3), 32), _2)\n                        /// @src 8:2038:2064  \"return keccak256(_message)\"\n                        let var := /** @src 8:2045:2064  \"keccak256(_message)\" */ keccak256(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ dst, mload(/** @src 8:2045:2064  \"keccak256(_message)\" */ memPtr_3))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if iszero(iszero(/** @src 0:7409:7423  \"delivered(_id)\" */ fun_delivered(var)))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 26)\n                            mstore(add(memPtr_4, 68), \"Mailbox: already delivered\")\n                            revert(memPtr_4, 100)\n                        }\n                        if gt(/** @src 8:612:614  \"77\" */ 0x4d, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ value3) { revert(_2, _2) }\n                        /// @src 0:7599:7622  \"recipientIsm(recipient)\"\n                        let expr_address := fun_recipientIsm(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)))\n                        let memPtr_5 := mload(64)\n                        if or(gt(add(memPtr_5, 64), _18), lt(add(memPtr_5, 64), memPtr_5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 36)\n                        }\n                        mstore(64, add(memPtr_5, 64))\n                        mstore(memPtr_5, /** @src 0:7710:7720  \"msg.sender\" */ caller())\n                        /// @src 0:7676:7778  \"Delivery({...\"\n                        let _20 := add(memPtr_5, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 32)\n                        mstore(_20, and(/** @src 0:7754:7766  \"block.number\" */ number(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0xffffffffffff))\n                        mstore(_2, var)\n                        mstore(32, /** @src 0:7658:7668  \"deliveries\" */ 0x6a)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let dataSlot_1 := keccak256(_2, 64)\n                        let _21 := and(mload(memPtr_5), sub(shl(160, 1), 1))\n                        let _22 := sload(dataSlot_1)\n                        sstore(dataSlot_1, or(or(and(_22, shl(208, 0xffffffffffff)), _21), and(shl(160, mload(_20)), shl(160, 0xffffffffffff))))\n                        /// @src 0:7801:7818  \"_message.origin()\"\n                        let expr := fun_origin(value2, value3)\n                        /// @src 0:7820:7837  \"_message.sender()\"\n                        let expr_1 := fun_sender(value2, value3)\n                        /// @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\"\n                        let _23 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\"\n                        log4(_2, _2, 0x0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca6574, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\" */ expr, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0xffffffff), /** @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\" */ expr_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 0:7864:7878  \"ProcessId(_id)\"\n                        log2(_2, /** @src 0:7793:7849  \"Process(_message.origin(), _message.sender(), recipient)\" */ _2, /** @src 0:7864:7878  \"ProcessId(_id)\" */ 0x1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a9, var)\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        mstore(_23, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(225, 0x7bf41d77))\n                        mstore(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ add(_23, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), 64)\n                        let tail := abi_encode_bytes_calldata(value0_3, value1_1, add(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _23, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68))\n                        mstore(add(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _23, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), add(sub(tail, /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _23), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ not(3)))\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        let _24 := call(gas(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:8006:8016  \"ism.verify\" */ expr_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)), _2, /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _23, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes_calldata(value2, value3, tail), /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ _23), _23, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 32)\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        if iszero(_24)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, _2, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                        let expr_2 := _2\n                        if _24\n                        {\n                            let _25 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 32\n                            /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                            if gt(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 32, /** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ returndatasize()) { _25 := returndatasize() }\n                            finalize_allocation(_23, _25)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if slt(sub(/** @src 0:8006:8037  \"ism.verify(_metadata, _message)\" */ add(_23, _25), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _23), 32) { revert(_2, _2) }\n                            let value_4 := mload(_23)\n                            if iszero(eq(value_4, iszero(iszero(value_4)))) { revert(_2, _2) }\n                            /// @src 0:8006:8037  \"ism.verify(_metadata, _message)\"\n                            expr_2 := value_4\n                        }\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if iszero(expr_2)\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 32)\n                            mstore(add(memPtr_6, 68), \"Mailbox: ISM verification failed\")\n                            revert(memPtr_6, 100)\n                        }\n                        /// @src 0:8222:8239  \"_message.origin()\"\n                        let expr_3 := fun_origin(value2, value3)\n                        /// @src 0:8253:8270  \"_message.sender()\"\n                        let expr_4 := fun_sender(value2, value3)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        if iszero(extcodesize(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        let _26 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        mstore(_26, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x56d5d475))\n                        mstore(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ add(_26, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), and(expr_3, 0xffffffff))\n                        mstore(add(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _26, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), expr_4)\n                        mstore(add(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _26, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68), 96)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        let _27 := call(gas(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 8:513:515  \"41\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(value2, /** @src 8:565:567  \"45\" */ 0x2d)), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)), /** @src 0:8198:8207  \"msg.value\" */ callvalue(), /** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _26, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes_calldata(add(value2, /** @src 8:612:614  \"77\" */ 0x4d), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(value3, not(76)), add(/** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _26, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 100)), /** @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\" */ _26), _26, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2)\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        if iszero(_27)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, _2, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 0:8155:8309  \"IMessageRecipient(recipient).handle{value: msg.value}(...\"\n                        if _27\n                        {\n                            finalize_allocation_17585(_26)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if _2 { revert(_2, _2) }\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x81d2ea95 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_13, param_14, param_15, param_16, param_17, param_18, param_19 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook(calldatasize())\n                        let ret_2 := fun_quoteDispatch(param_13, param_14, param_15, param_16, param_17, param_18, param_19)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, ret_2)\n                        return(memPos_6, 32)\n                    }\n                    case 0x8209d312 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_5 := and(sload(/** @src 10:700:741  \"uint32 public inboundUnprocessedNonce = 0\" */ 107), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0xffffffff)\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, value_5)\n                        return(memPos_7, 32)\n                    }\n                    case 0x82ea7bfe {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 7:95:133  \"uint256 public immutable deployedBlock\" */ loadimmutable(\"1334\"))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0x8d3638f4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, and(/** @src 0:1158:1193  \"uint32 public immutable localDomain\" */ loadimmutable(\"41\"), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0xffffffff))\n                        return(memPos_9, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_1 := and(sload(/** @src 14:1534:1540  \"_owner\" */ 0x33), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, cleaned_1)\n                        return(memPos_10, 32)\n                    }\n                    case 0x92d28b3d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 10:852:900  \"mapping(uint256 => bytes) public inboundMessages\" */ 109)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let value_6 := copy_array_from_storage_to_memory_bytes(keccak256(_2, 64))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, 32)\n                        return(memPos_11, sub(abi_encode_bytes(value_6, add(memPos_11, 32)), memPos_11))\n                    }\n                    case 0x99b04809 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value0_4))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 34)\n                            mstore(add(memPtr_7, 68), \"Mailbox: default hook not contra\")\n                            mstore(add(memPtr_7, 100), \"ct\")\n                            revert(memPtr_7, 132)\n                        }\n                        let _28 := and(/** @src 0:12871:12895  \"IPostDispatchHook(_hook)\" */ value0_4, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        sstore(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(160, 0xffffffffffffffffffffffff)), _28))\n                        /// @src 0:12910:12931  \"DefaultHookSet(_hook)\"\n                        log2(_2, _2, 0x65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d7, _28)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(_2, _2)\n                    }\n                    case 0x9c42bd18 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_20, param_21, param_22, param_23 := abi_decode_uint32t_bytes32t_bytes_calldata(calldatasize())\n                        let _29 := sub(shl(160, 1), 1)\n                        /// @src 0:5469:5657  \"quoteDispatch(...\"\n                        let var_hook_address := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(sload(/** @src 0:5632:5643  \"defaultHook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _29)\n                        /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                        if /** @src 0:11443:11470  \"address(hook) == address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_hook_address)\n                        /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                        {\n                            /// @src 0:11486:11504  \"hook = defaultHook\"\n                            var_hook_address := var_hook_address\n                        }\n                        /// @src 0:11548:11657  \"_buildMessage(...\"\n                        let expr_mpos := fun_buildMessage(param_20, param_21, param_22, param_23)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let cleaned_2 := and(sload(/** @src 0:11686:11698  \"requiredHook\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _29)\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let _30 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        let _31 := shl(228, 0x0aaccd23)\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        mstore(_30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _31)\n                        mstore(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), 64)\n                        mstore(add(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68), 0)\n                        let _32 := add(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 100)\n                        mstore(_32, 0)\n                        mstore(add(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), 96)\n                        let _33 := 0x20\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let _34 := staticcall(gas(), cleaned_2, _30, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos, _32), /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _30), _30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _33)\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if iszero(_34)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let expr_5 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0\n                        /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if _34\n                        {\n                            let _35 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _33\n                            /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                            if gt(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _33, /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ returndatasize()) { _35 := returndatasize() }\n                            finalize_allocation(_30, _35)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if slt(sub(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_30, _35), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _30), _33) { revert(expr_5, expr_5) }\n                            /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                            expr_5 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_30)\n                        }\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        let _36 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        mstore(_36, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _31)\n                        mstore(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ add(_36, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), 64)\n                        mstore(add(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _36, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68), 0)\n                        let _37 := add(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _36, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 100)\n                        mstore(_37, 0)\n                        mstore(add(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _36, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), 96)\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        let _38 := staticcall(gas(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:11746:11764  \"hook.quoteDispatch\" */ var_hook_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _29), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _36, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos, _37), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _36), _36, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _33)\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        if iszero(_38)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, 0, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        let expr_6 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0\n                        /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                        if _38\n                        {\n                            let _39 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _33\n                            /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                            if gt(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _33, /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ returndatasize()) { _39 := returndatasize() }\n                            finalize_allocation(_36, _39)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if slt(sub(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ add(_36, _39), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _36), _33) { revert(expr_6, expr_6) }\n                            /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                            expr_6 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_36)\n                        }\n                        let sum := add(expr_5, expr_6)\n                        if gt(expr_5, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, sum)\n                        return(memPos_12, _33)\n                    }\n                    case 0xa3b4919f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, and(abi_decode_uint32(), 0xffffffff))\n                        mstore(32, /** @src 10:793:846  \"mapping(uint32 => MockMailbox) public remoteMailboxes\" */ 108)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let value_7 := and(sload(keccak256(_2, 64)), sub(shl(160, 1), 1))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, value_7)\n                        return(memPos_13, 32)\n                    }\n                    case 0xaffed0e0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_8 := and(sload(/** @src 0:1322:1341  \"uint32 public nonce\" */ 101), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0xffffffff)\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, value_8)\n                        return(memPos_14, 32)\n                    }\n                    case 0xd12164e4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _40 := sload(/** @src 10:747:786  \"uint32 public inboundProcessedNonce = 0\" */ 107)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, and(shr(32, _40), 0xffffffff))\n                        return(memPos_15, 32)\n                    }\n                    case 0xd6d08a09 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_9 := and(sload(/** @src 0:1800:1837  \"IPostDispatchHook public requiredHook\" */ 105), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        let memPos_16 := mload(64)\n                        mstore(memPos_16, value_9)\n                        return(memPos_16, 32)\n                    }\n                    case 0xe495f1d4 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret_3 := fun_delivered(calldataload(4))\n                        let memPos_17 := mload(64)\n                        mstore(memPos_17, iszero(iszero(ret_3)))\n                        return(memPos_17, 32)\n                    }\n                    case 0xe70f48ac {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret_4 := fun_recipientIsm(abi_decode_address())\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, and(ret_4, sub(shl(160, 1), 1)))\n                        return(memPos_18, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_5 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 14:2423:2445  \"newOwner != address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 14:2423:2445  \"newOwner != address(0)\" */ value0_5, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)))\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, 36), 38)\n                            mstore(add(memPtr_8, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_8, 100), \"ddress\")\n                            revert(memPtr_8, 132)\n                        }\n                        /// @src 14:2517:2525  \"newOwner\"\n                        fun_transferOwnership(value0_5)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(_2, _2)\n                    }\n                    case 0xf794687a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value0_6 := abi_decode_address()\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value0_6))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 33)\n                            mstore(add(memPtr_9, 68), \"Mailbox: default ISM not contrac\")\n                            mstore(add(memPtr_9, 100), \"t\")\n                            revert(memPtr_9, 132)\n                        }\n                        let _41 := and(/** @src 0:12431:12465  \"IInterchainSecurityModule(_module)\" */ value0_6, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                        sstore(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(160, 0xffffffffffffffffffffffff)), _41))\n                        /// @src 0:12480:12502  \"DefaultIsmSet(_module)\"\n                        log2(_2, _2, 0xa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa, _41)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(_2, _2)\n                    }\n                    case 0xf7ccd321 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_24, param_25, param_26, param_27, param_28, param_29 := abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata(calldatasize())\n                        let ret_5 := /** @src 0:6373:6564  \"quoteDispatch(...\" */ fun_quoteDispatch(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ param_24, param_25, param_26, param_27, param_28, param_29, and(sload(/** @src 0:6539:6550  \"defaultHook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1)))\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, ret_5)\n                        return(memPos_19, 32)\n                    }\n                    case 0xf8c8765e {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_2, _2) }\n                        let value0_7 := abi_decode_address()\n                        let _42 := 36\n                        let value_10 := calldataload(_42)\n                        let _43 := sub(shl(160, 1), 1)\n                        let _44 := and(value_10, _43)\n                        if iszero(eq(value_10, _44)) { revert(0, 0) }\n                        let _45 := 68\n                        let value_11 := calldataload(_45)\n                        let _46 := and(value_11, _43)\n                        if iszero(eq(value_11, _46)) { revert(0, 0) }\n                        let _47 := 100\n                        let value_12 := calldataload(_47)\n                        let _48 := and(value_12, _43)\n                        if iszero(eq(value_12, _48)) { revert(0, 0) }\n                        let _49 := sload(_2)\n                        /// @src 15:3347:3381  \"isTopLevelCall && _initialized < 1\"\n                        let expr_7 := /** @src 15:3301:3315  \"!_initializing\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(shr(8, _49), 0xff))\n                        /// @src 15:3347:3381  \"isTopLevelCall && _initialized < 1\"\n                        let expr_8 := expr_7\n                        if expr_7\n                        {\n                            expr_7 := /** @src 15:3365:3381  \"_initialized < 1\" */ lt(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_49, 0xff), /** @src 15:3380:3381  \"1\" */ 0x01)\n                        }\n                        /// @src 15:3346:3454  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                        let expr_9 := expr_7\n                        if iszero(expr_7)\n                        {\n                            /// @src 15:3387:3453  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                            let expr_10 := /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(/** @src 15:3426:3430  \"this\" */ address()))\n                            /// @src 15:3387:3453  \"!AddressUpgradeable.isContract(address(this)) && _initialized == 1\"\n                            if expr_10\n                            {\n                                expr_10 := /** @src 15:3436:3453  \"_initialized == 1\" */ eq(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_49, 0xff), /** @src 15:3452:3453  \"1\" */ 0x01)\n                            }\n                            /// @src 15:3346:3454  \"(isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1)\"\n                            expr_9 := expr_10\n                        }\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if iszero(expr_9)\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, _42), 46)\n                            mstore(add(memPtr_10, _45), \"Initializable: contract is alrea\")\n                            mstore(add(memPtr_10, _47), \"dy initialized\")\n                            revert(memPtr_10, 132)\n                        }\n                        sstore(_2, or(and(_49, not(255)), /** @src 15:3551:3552  \"1\" */ 0x01))\n                        /// @src 15:3562:3627  \"if (isTopLevelCall) {...\"\n                        if expr_8\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            sstore(_2, or(and(_49, not(65535)), 257))\n                        }\n                        let value_13 := and(shr(8, sload(_2)), 0xff)\n                        /// @src 15:5366:5435  \"require(_initializing, \\\"Initializable: contract is not initializing\\\")\"\n                        require_helper_stringliteral_d688(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ value_13)\n                        /// @src 15:5366:5435  \"require(_initializing, \\\"Initializable: contract is not initializing\\\")\"\n                        require_helper_stringliteral_d688(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ value_13)\n                        /// @src 14:1216:1228  \"_msgSender()\"\n                        fun_transferOwnership(/** @src 17:965:975  \"msg.sender\" */ caller())\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value_10))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, _42), 33)\n                            mstore(add(memPtr_11, _45), \"Mailbox: default ISM not contrac\")\n                            mstore(add(memPtr_11, _47), \"t\")\n                            revert(memPtr_11, 132)\n                        }\n                        let _50 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 0:12418:12465  \"defaultIsm = IInterchainSecurityModule(_module)\" */ 0x67), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _50), _44))\n                        /// @src 0:12480:12502  \"DefaultIsmSet(_module)\"\n                        log2(_2, _2, 0xa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa, _44)\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value_11))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, _42), 34)\n                            mstore(add(memPtr_12, _45), \"Mailbox: default hook not contra\")\n                            mstore(add(memPtr_12, _47), \"ct\")\n                            revert(memPtr_12, 132)\n                        }\n                        sstore(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 0:12857:12895  \"defaultHook = IPostDispatchHook(_hook)\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _50), _46))\n                        /// @src 0:12910:12931  \"DefaultHookSet(_hook)\"\n                        log2(_2, _2, 0x65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d7, _46)\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 16:1713:1736  \"account.code.length > 0\" */ iszero(/** @src 16:1713:1732  \"account.code.length\" */ extcodesize(value_12))\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            let memPtr_13 := mload(64)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, 4), 32)\n                            mstore(add(memPtr_13, _42), 35)\n                            mstore(add(memPtr_13, _45), \"Mailbox: required hook not contr\")\n                            mstore(add(memPtr_13, _47), \"act\")\n                            revert(memPtr_13, 132)\n                        }\n                        sstore(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(sload(/** @src 0:13289:13328  \"requiredHook = IPostDispatchHook(_hook)\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _50), _48))\n                        /// @src 0:13343:13365  \"RequiredHookSet(_hook)\"\n                        log2(_2, _2, 0x329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b1, _48)\n                        /// @src 14:1324:1386  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if /** @src 14:2423:2445  \"newOwner != address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 14:2423:2445  \"newOwner != address(0)\" */ value0_7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _43))\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, _42), 38)\n                            mstore(add(memPtr_14, _45), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_14, _47), \"ddress\")\n                            revert(memPtr_14, 132)\n                        }\n                        /// @src 14:2517:2525  \"newOwner\"\n                        fun_transferOwnership(value0_7)\n                        /// @src 15:3647:3746  \"if (isTopLevelCall) {...\"\n                        if expr_8\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            sstore(_2, and(sload(_2), not(65280)))\n                            /// @src 15:3721:3735  \"Initialized(1)\"\n                            let _51 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                            mstore(_51, /** @src 15:3551:3552  \"1\" */ 0x01)\n                            /// @src 15:3721:3735  \"Initialized(1)\"\n                            log1(_51, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 32, /** @src 15:3721:3735  \"Initialized(1)\" */ 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498)\n                        }\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(_2, _2)\n                    }\n                    case 0xfa31de01 {\n                        let param_30, param_31, param_32, param_33 := abi_decode_uint32t_bytes32t_bytes_calldata(calldatasize())\n                        let _52 := sub(shl(160, 1), 1)\n                        let _53 := and(sload(/** @src 0:3944:3955  \"defaultHook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _52)\n                        /// @ast-id 1786 @src 10:1354:2187  \"function dispatch(...\"\n                        let /// @ast-id 1786\n                        var_metadata_length := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0\n                        /// @src 10:1622:1731  \"_buildMessage(...\"\n                        let expr_mpos_1 := fun_buildMessage(param_30, param_31, param_32, param_33)\n                        /// @src 10:1754:1904  \"super.dispatch(...\"\n                        let var_hook_address_1 := _53\n                        /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                        if /** @src 0:9724:9751  \"address(hook) == address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _53)\n                        /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                        {\n                            /// @src 0:9767:9785  \"hook = defaultHook\"\n                            var_hook_address_1 := _53\n                        }\n                        /// @src 0:9902:10011  \"_buildMessage(...\"\n                        let expr_mpos_2 := fun_buildMessage(param_30, param_31, param_32, param_33)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let _54 := mload(/** @src 0:10034:10046  \"message.id()\" */ expr_mpos_2)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let _55 := 0x20\n                        /// @src 0:10034:10046  \"message.id()\"\n                        let expr_11 := /** @src 8:2045:2064  \"keccak256(_message)\" */ keccak256(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(/** @src 0:10034:10046  \"message.id()\" */ expr_mpos_2, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _55), _54)\n                        sstore(/** @src 0:10082:10105  \"latestDispatchedId = id\" */ 0x66, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ expr_11)\n                        let _56 := sload(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let _57 := 0xffffffff\n                        let sum_1 := add(and(_56, _57), /** @src 0:10124:10125  \"1\" */ 0x01)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        if gt(sum_1, _57)\n                        {\n                            mstore(var_metadata_length, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(var_metadata_length, 0x24)\n                        }\n                        sstore(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_56, not(0xffffffff)), and(sum_1, _57)))\n                        let _58 := and(/** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ param_30, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _57)\n                        /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                        let _59 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        mstore(_59, _55)\n                        /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                        log4(_59, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos_2, add(_59, _55)), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ _59), 0x769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814, /** @src 0:10149:10159  \"msg.sender\" */ caller(), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ _58, param_31)\n                        /// @src 0:10221:10235  \"DispatchId(id)\"\n                        let _60 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 0:10221:10235  \"DispatchId(id)\"\n                        log2(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_metadata_length, var_metadata_length, /** @src 0:10221:10235  \"DispatchId(id)\" */ 0x788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a, expr_11)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let cleaned_3 := and(sload(/** @src 0:10299:10311  \"requiredHook\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _52)\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        mstore(_60, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(228, 0x0aaccd23))\n                        mstore(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_60, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), 64)\n                        mstore(add(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _60, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68), var_metadata_length)\n                        let _61 := add(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _60, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 100)\n                        mstore(_61, var_metadata_length)\n                        mstore(add(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _60, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), 96)\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let _62 := staticcall(gas(), cleaned_3, _60, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos_2, _61), /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _60), _60, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _55)\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if iszero(_62)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_5 := mload(64)\n                            returndatacopy(pos_5, var_metadata_length, returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        let expr_12 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_metadata_length\n                        /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                        if _62\n                        {\n                            let _63 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _55\n                            /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                            if gt(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _55, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ returndatasize()) { _63 := returndatasize() }\n                            finalize_allocation(_60, _63)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if slt(sub(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_60, _63), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _60), _55)\n                            {\n                                revert(var_metadata_length, var_metadata_length)\n                            }\n                            /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                            expr_12 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_60)\n                        }\n                        /// @src 0:10275:10344  \"uint256 requiredValue = requiredHook.quoteDispatch(metadata, message)\"\n                        let var_requiredValue := expr_12\n                        /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                        if /** @src 0:10429:10454  \"msg.value < requiredValue\" */ lt(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 0:10429:10454  \"msg.value < requiredValue\" */ expr_12)\n                        /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                        {\n                            /// @src 0:10470:10495  \"requiredValue = msg.value\"\n                            var_requiredValue := /** @src 0:10429:10438  \"msg.value\" */ callvalue()\n                        }\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        if iszero(extcodesize(cleaned_3))\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            revert(var_metadata_length, var_metadata_length)\n                        }\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        let _64 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        let _65 := shl(224, 0x086011b9)\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        mstore(_64, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _65)\n                        mstore(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ add(_64, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), 64)\n                        mstore(add(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _64, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 68), var_metadata_length)\n                        let _66 := add(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _64, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 100)\n                        mstore(_66, var_metadata_length)\n                        mstore(add(/** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _64, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36), 96)\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        let _67 := call(gas(), cleaned_3, var_requiredValue, _64, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos_2, _66), /** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ _64), _64, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_metadata_length)\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        if iszero(_67)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_6 := mload(64)\n                            returndatacopy(pos_6, var_metadata_length, returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                        if _67\n                        {\n                            finalize_allocation_17585(_64)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            var_metadata_length := var_metadata_length\n                        }\n                        let _68 := and(/** @src 0:10591:10608  \"hook.postDispatch\" */ var_hook_address_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _52)\n                        let diff := sub(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_requiredValue)\n                        if gt(diff, /** @src 0:10429:10438  \"msg.value\" */ callvalue())\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ var_metadata_length, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ var_metadata_length, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36)\n                        }\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        if iszero(extcodesize(_68))\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            revert(/** @src -1:-1:-1 */ var_metadata_length, var_metadata_length)\n                        }\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        let _69 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        mstore(_69, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _65)\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        let _70 := call(gas(), _68, diff, _69, sub(abi_encode_bytes_calldata_bytes(add(_69, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), /** @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\" */ param_32, var_metadata_length, expr_mpos_2), _69), _69, /** @src -1:-1:-1 */ var_metadata_length)\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        if iszero(_70)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_7 := mload(64)\n                            returndatacopy(pos_7, /** @src -1:-1:-1 */ var_metadata_length, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                        if _70\n                        {\n                            finalize_allocation_17585(_69)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if var_metadata_length\n                            {\n                                revert(/** @src -1:-1:-1 */ var_metadata_length, var_metadata_length)\n                            }\n                        }\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        mstore(/** @src -1:-1:-1 */ var_metadata_length, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _58)\n                        mstore(_55, /** @src 10:1949:1964  \"remoteMailboxes\" */ 0x6c)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let cleaned_4 := and(sload(keccak256(/** @src -1:-1:-1 */ var_metadata_length, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 64)), _52)\n                        if /** @src 10:2014:2056  \"address(_destinationMailbox) != address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ cleaned_4)\n                        {\n                            let memPtr_15 := mload(64)\n                            mstore(memPtr_15, shl(229, 4594637))\n                            mstore(add(memPtr_15, 4), _55)\n                            mstore(add(memPtr_15, 36), 22)\n                            mstore(add(memPtr_15, 68), \"Missing remote mailbox\")\n                            revert(memPtr_15, 100)\n                        }\n                        /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                        if iszero(extcodesize(cleaned_4))\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            revert(/** @src 10:2054:2055  \"0\" */ var_metadata_length, var_metadata_length)\n                        }\n                        /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                        let _71 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                        /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                        mstore(_71, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(226, 0x0ca22643))\n                        mstore(/** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ add(_71, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 4), _55)\n                        /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                        let _72 := call(gas(), cleaned_4, /** @src 10:2054:2055  \"0\" */ var_metadata_length, /** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ _71, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos_1, add(/** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ _71, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36)), /** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ _71), _71, /** @src 10:2054:2055  \"0\" */ var_metadata_length)\n                        /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                        if iszero(_72)\n                        {\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            let pos_8 := mload(64)\n                            returndatacopy(pos_8, /** @src 10:2054:2055  \"0\" */ var_metadata_length, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                        if _72\n                        {\n                            finalize_allocation_17585(_71)\n                            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                            if var_metadata_length\n                            {\n                                revert(/** @src 10:2054:2055  \"0\" */ var_metadata_length, var_metadata_length)\n                            }\n                        }\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        let memPos_20 := mload(64)\n                        mstore(memPos_20, expr_11)\n                        return(memPos_20, _55)\n                    }\n                    case 0xffa1ad74 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, /** @src 13:199:200  \"3\" */ 0x03)\n                        /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                        return(memPos_21, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_uint32() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldatat_contract_IPostDispatchHook(dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n            {\n                if slt(add(dataEnd, not(3)), 160) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n                let offset_1 := calldataload(100)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let value4_1, value5_1 := abi_decode_bytes_calldata(add(4, offset_1), dataEnd)\n                value4 := value4_1\n                value5 := value5_1\n                let value_1 := calldataload(132)\n                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                value6 := value_1\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_uint32t_bytes32t_bytes_calldatat_bytes_calldata(dataEnd) -> value0, value1, value2, value3, value4, value5\n            {\n                if slt(add(dataEnd, not(3)), 128) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n                let offset_1 := calldataload(100)\n                if gt(offset_1, _1)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let value4_1, value5_1 := abi_decode_bytes_calldata(add(4, offset_1), dataEnd)\n                value4 := value4_1\n                value5 := value5_1\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_17585(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_array_from_storage_to_memory_bytes(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_uint32t_bytes32t_bytes_calldata(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                value0 := value\n                value1 := calldataload(36)\n                let offset := calldataload(68)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_encode_bytes_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_bytes_calldata_bytes(headStart, value0, value1, value2) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_bytes(value2, tail_1)\n            }\n            /// @ast-id 521 @src 0:11197:11790  \"function quoteDispatch(...\"\n            function fun_quoteDispatch(var_destinationDomain, var_recipientAddress, var_messageBody_475_offset, var_messageBody_length, var_metadata_477_offset, var_metadata_length, var_hook_address) -> var_fee\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                if /** @src 0:11443:11470  \"address(hook) == address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:11443:11456  \"address(hook)\" */ var_hook_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1))\n                /// @src 0:11439:11515  \"if (address(hook) == address(0)) {...\"\n                {\n                    /// @src 0:11486:11504  \"hook = defaultHook\"\n                    var_hook_address := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(sload(/** @src 0:11493:11504  \"defaultHook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1)\n                }\n                /// @src 0:11548:11657  \"_buildMessage(...\"\n                let expr_506_mpos := fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_475_offset, var_messageBody_length)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let cleaned := and(sload(/** @src 0:11686:11698  \"requiredHook\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1)\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                let _2 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                let _3 := shl(228, 0x0aaccd23)\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                mstore(_2, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3)\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                let _4 := 32\n                let _5 := staticcall(gas(), cleaned, _2, sub(abi_encode_bytes_calldata_bytes(add(_2, 4), var_metadata_477_offset, var_metadata_length, expr_506_mpos), _2), _2, _4)\n                if iszero(_5)\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src 0:11468:11469  \"0\" */ 0x00, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                let expr := /** @src 0:11468:11469  \"0\" */ 0x00\n                /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                if _5\n                {\n                    let _6 := _4\n                    if gt(_4, returndatasize()) { _6 := returndatasize() }\n                    finalize_allocation(_2, _6)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    if slt(sub(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_2, _6), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2), /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    {\n                        revert(/** @src 0:11468:11469  \"0\" */ expr, expr)\n                    }\n                    /// @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\"\n                    expr := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_2)\n                }\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                let _7 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                mstore(_7, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3)\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                let _8 := staticcall(gas(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:11746:11764  \"hook.quoteDispatch\" */ var_hook_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ _7, sub(abi_encode_bytes_calldata_bytes(add(_7, /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ 4), /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ var_metadata_477_offset, var_metadata_length, expr_506_mpos), _7), _7, /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4)\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                if iszero(_8)\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let pos_1 := mload(64)\n                    returndatacopy(pos_1, /** @src 0:11468:11469  \"0\" */ 0x00, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                let expr_1 := /** @src 0:11468:11469  \"0\" */ 0x00\n                /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                if _8\n                {\n                    let _9 := /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4\n                    /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                    if gt(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4, /** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ returndatasize()) { _9 := returndatasize() }\n                    finalize_allocation(_7, _9)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    if slt(sub(/** @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\" */ add(_7, _9), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _7), /** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ _4)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    {\n                        revert(/** @src 0:11468:11469  \"0\" */ expr_1, expr_1)\n                    }\n                    /// @src 0:11746:11783  \"hook.quoteDispatch(metadata, message)\"\n                    expr_1 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_7)\n                }\n                let sum := add(expr, expr_1)\n                if gt(expr, sum)\n                {\n                    mstore(/** @src 0:11468:11469  \"0\" */ 0x00, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 0:11686:11731  \"requiredHook.quoteDispatch(metadata, message)\" */ 4, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x11)\n                    revert(/** @src 0:11468:11469  \"0\" */ 0x00, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x24)\n                }\n                /// @src 0:11667:11783  \"return...\"\n                var_fee := sum\n            }\n            /// @ast-id 538 @src 0:11973:12096  \"function delivered(bytes32 _id) public view override returns (bool) {...\"\n            function fun_delivered(var_id) -> var\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_id)\n                mstore(0x20, /** @src 0:12058:12068  \"deliveries\" */ 0x6a)\n                /// @src 0:12051:12089  \"return deliveries[_id].blockNumber > 0\"\n                var := /** @src 0:12058:12089  \"deliveries[_id].blockNumber > 0\" */ iszero(iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(shr(160, sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x40))), 0xffffffffffff)))\n            }\n            /// @ast-id 675 @src 0:13635:14531  \"function recipientIsm(...\"\n            function fun_recipientIsm(var_recipient) -> var_address\n            {\n                /// @src 0:13901:14026  \"abi.encodeCall(...\"\n                let expr_mpos := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                /// @src 0:13901:14026  \"abi.encodeCall(...\"\n                let _1 := add(expr_mpos, 0x20)\n                mstore(_1, shl(224, 0xde523cf3))\n                mstore(expr_mpos, 4)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let newFreePtr := add(expr_mpos, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(/** @src 0:13901:14026  \"abi.encodeCall(...\" */ 4, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x41)\n                    revert(0, /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 36)\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                mstore(64, newFreePtr)\n                /// @src 0:13901:14026  \"abi.encodeCall(...\"\n                let _2 := 0\n                /// @src 0:13866:14036  \"_recipient.staticcall(...\"\n                let expr_component := staticcall(gas(), var_recipient, _1, mload(expr_mpos), /** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2, _2)\n                /// @src 0:13866:14036  \"_recipient.staticcall(...\"\n                let data := /** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _3 := returndatasize()\n                    let _4 := array_allocation_size_bytes(_3)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _4)\n                    mstore(memPtr, _3)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 0x20), _2, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                }\n                /// @src 0:14108:14141  \"success && returnData.length != 0\"\n                let expr := expr_component\n                if expr_component\n                {\n                    expr := /** @src 0:14119:14141  \"returnData.length != 0\" */ iszero(iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(/** @src 0:14119:14136  \"returnData.length\" */ data)))\n                }\n                /// @src 0:14104:14421  \"if (success && returnData.length != 0) {...\"\n                if expr\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    if slt(sub(/** @src 0:14225:14258  \"abi.decode(returnData, (address))\" */ add(data, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(/** @src 0:14225:14258  \"abi.decode(returnData, (address))\" */ data)), data), /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 0x20)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    {\n                        revert(/** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2, _2)\n                    }\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let value := mload(/** @src 0:14225:14258  \"abi.decode(returnData, (address))\" */ add(data, /** @src 0:13901:14026  \"abi.encodeCall(...\" */ 0x20))\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let _5 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _5))\n                    {\n                        revert(/** @src 0:13901:14026  \"abi.encodeCall(...\" */ _2, _2)\n                    }\n                    /// @src 0:14318:14411  \"if (ism != address(0)) {...\"\n                    if /** @src 0:14322:14339  \"ism != address(0)\" */ iszero(iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _5))\n                    /// @src 0:14318:14411  \"if (ism != address(0)) {...\"\n                    {\n                        /// @src 0:14359:14396  \"return IInterchainSecurityModule(ism)\"\n                        var_address := _5\n                        leave\n                    }\n                }\n                /// @src 0:14507:14524  \"return defaultIsm\"\n                var_address := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(sload(/** @src 0:14514:14524  \"defaultIsm\" */ 0x67), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n            }\n            /// @ast-id 701 @src 0:14589:15052  \"function _buildMessage(...\"\n            function fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_681_offset, var_messageBody_681_length) -> var_mpos\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _1 := sload(/** @src 0:14852:14857  \"nonce\" */ 0x65)\n                /// @src 8:1577:1807  \"abi.encodePacked(...\"\n                let expr_mpos := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(64)\n                mstore(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ add(expr_mpos, 0x20), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(248, 3))\n                let _2 := shl(224, 0xffffffff)\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 33), and(shl(224, _1), _2))\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 37), and(shl(224, /** @src 0:14875:14886  \"localDomain\" */ loadimmutable(\"41\")), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _2))\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 41), /** @src 0:14904:14914  \"msg.sender\" */ caller())\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 73), and(shl(224, var_destinationDomain), _2))\n                mstore(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 77), var_recipientAddress)\n                calldatacopy(add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 109), var_messageBody_681_offset, var_messageBody_681_length)\n                let _3 := add(/** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_messageBody_681_length)\n                mstore(add(_3, 109), /** @src -1:-1:-1 */ 0)\n                /// @src 8:1577:1807  \"abi.encodePacked(...\"\n                let _4 := sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3, /** @src 8:1577:1807  \"abi.encodePacked(...\" */ expr_mpos)\n                mstore(expr_mpos, add(_4, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 77))\n                /// @src 8:1577:1807  \"abi.encodePacked(...\"\n                finalize_allocation(expr_mpos, add(_4, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 109))\n                /// @src 0:14769:15045  \"return...\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 1478 @src 8:2845:2994  \"function origin(bytes calldata _message) internal pure returns (uint32) {...\"\n            function fun_origin(var_message_offset, var_message_1461_length) -> var\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                if gt(/** @src 8:460:461  \"9\" */ 0x09, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_message_1461_length)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:2927:2987  \"return uint32(bytes4(_message[ORIGIN_OFFSET:SENDER_OFFSET]))\"\n                var := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shr(224, /** @src 8:460:461  \"9\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(var_message_offset, /** @src 8:412:413  \"5\" */ 0x05)))\n            }\n            /// @ast-id 1495 @src 8:3171:3319  \"function sender(bytes calldata _message) internal pure returns (bytes32) {...\"\n            function fun_sender(var_message_1481_offset, var_message_length) -> var\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                if gt(/** @src 8:513:515  \"41\" */ 0x29, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_message_length)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:3254:3312  \"return bytes32(_message[SENDER_OFFSET:DESTINATION_OFFSET])\"\n                var := /** @src 8:513:515  \"41\" */ calldataload(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(var_message_1481_offset, /** @src 8:460:461  \"9\" */ 0x09))\n            }\n            /// @ast-id 1786 @src 10:1354:2187  \"function dispatch(...\"\n            function fun_dispatch(var_destinationDomain, var_recipientAddress, var_messageBody_offset, var_messageBody_1727_length, var_metadata_offset, var_metadata_1729_length, var_hook_1732_address) -> var\n            {\n                /// @src 10:1622:1731  \"_buildMessage(...\"\n                let expr_1744_mpos := fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_offset, var_messageBody_1727_length)\n                /// @src 10:1754:1904  \"super.dispatch(...\"\n                let var_hook_address := var_hook_1732_address\n                let var_1 := /** @src -1:-1:-1 */ 0\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _1 := sub(shl(160, 1), 1)\n                /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                if /** @src 0:9724:9751  \"address(hook) == address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(/** @src 0:9724:9737  \"address(hook)\" */ var_hook_1732_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1))\n                /// @src 0:9720:9796  \"if (address(hook) == address(0)) {...\"\n                {\n                    /// @src 0:9767:9785  \"hook = defaultHook\"\n                    var_hook_address := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(sload(/** @src 0:9774:9785  \"defaultHook\" */ 0x68), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1)\n                }\n                /// @src 0:9902:10011  \"_buildMessage(...\"\n                let expr_mpos := fun_buildMessage(var_destinationDomain, var_recipientAddress, var_messageBody_offset, var_messageBody_1727_length)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _2 := mload(/** @src 0:10034:10046  \"message.id()\" */ expr_mpos)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _3 := 0x20\n                /// @src 0:10034:10046  \"message.id()\"\n                let expr := /** @src 8:2045:2064  \"keccak256(_message)\" */ keccak256(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ add(/** @src 0:10034:10046  \"message.id()\" */ expr_mpos, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3), _2)\n                sstore(/** @src 0:10082:10105  \"latestDispatchedId = id\" */ 0x66, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ expr)\n                let _4 := sload(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _5 := 0xffffffff\n                let sum := add(and(_4, _5), /** @src 0:10124:10125  \"1\" */ 0x01)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                if gt(sum, _5)\n                {\n                    mstore(/** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x24)\n                }\n                sstore(/** @src 0:10115:10125  \"nonce += 1\" */ 0x65, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_4, not(0xffffffff)), and(sum, _5)))\n                let _6 := and(/** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ var_destinationDomain, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _5)\n                let _7 := 64\n                /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                let _8 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_7)\n                mstore(_8, _3)\n                /// @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\"\n                log4(_8, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_mpos, add(_8, _3)), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ _8), 0x769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814, /** @src 0:10149:10159  \"msg.sender\" */ caller(), /** @src 0:10140:10206  \"Dispatch(msg.sender, destinationDomain, recipientAddress, message)\" */ _6, var_recipientAddress)\n                /// @src 0:10221:10235  \"DispatchId(id)\"\n                let _9 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_7)\n                /// @src 0:10221:10235  \"DispatchId(id)\"\n                log2(/** @src -1:-1:-1 */ var_1, var_1, /** @src 0:10221:10235  \"DispatchId(id)\" */ 0x788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a, expr)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let cleaned := and(sload(/** @src 0:10299:10311  \"requiredHook\" */ 0x69), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1)\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                mstore(_9, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(228, 0x0aaccd23))\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                let _10 := 4\n                let _11 := staticcall(gas(), cleaned, _9, sub(abi_encode_bytes_calldata_bytes(add(_9, _10), var_metadata_offset, var_metadata_1729_length, expr_mpos), _9), _9, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3)\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                if iszero(_11)\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let pos := mload(_7)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                let expr_1 := /** @src -1:-1:-1 */ var_1\n                /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                if _11\n                {\n                    let _12 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3\n                    /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                    if gt(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ returndatasize()) { _12 := returndatasize() }\n                    finalize_allocation(_9, _12)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    if slt(sub(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ add(_9, _12), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _9), _3)\n                    {\n                        revert(/** @src -1:-1:-1 */ var_1, var_1)\n                    }\n                    /// @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\"\n                    expr_1 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_9)\n                }\n                /// @src 0:10275:10344  \"uint256 requiredValue = requiredHook.quoteDispatch(metadata, message)\"\n                let var_requiredValue := expr_1\n                /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                if /** @src 0:10429:10454  \"msg.value < requiredValue\" */ lt(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 0:10429:10454  \"msg.value < requiredValue\" */ expr_1)\n                /// @src 0:10425:10506  \"if (msg.value < requiredValue) {...\"\n                {\n                    /// @src 0:10470:10495  \"requiredValue = msg.value\"\n                    var_requiredValue := /** @src 0:10429:10438  \"msg.value\" */ callvalue()\n                }\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                if iszero(extcodesize(cleaned))\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    revert(/** @src -1:-1:-1 */ var_1, var_1)\n                }\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                let _13 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_7)\n                let _14 := shl(224, 0x086011b9)\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                mstore(_13, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _14)\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                let _15 := call(gas(), cleaned, var_requiredValue, _13, sub(abi_encode_bytes_calldata_bytes(add(_13, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _10), /** @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\" */ var_metadata_offset, var_metadata_1729_length, expr_mpos), _13), _13, /** @src -1:-1:-1 */ var_1)\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                if iszero(_15)\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let pos_1 := mload(_7)\n                    returndatacopy(pos_1, /** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 0:10515:10581  \"requiredHook.postDispatch{value: requiredValue}(metadata, message)\"\n                if _15\n                {\n                    finalize_allocation_17585(_13)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    var_1 := /** @src -1:-1:-1 */ var_1\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _16 := and(/** @src 0:10591:10608  \"hook.postDispatch\" */ var_hook_address, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _1)\n                let diff := sub(/** @src 0:10429:10438  \"msg.value\" */ callvalue(), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ var_requiredValue)\n                if gt(diff, /** @src 0:10429:10438  \"msg.value\" */ callvalue())\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _10, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x11)\n                    revert(/** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 0x24)\n                }\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                if iszero(extcodesize(_16))\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    revert(/** @src -1:-1:-1 */ var_1, var_1)\n                }\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                let _17 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_7)\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                mstore(_17, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _14)\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                let _18 := call(gas(), _16, diff, _17, sub(abi_encode_bytes_calldata_bytes(add(_17, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _10), /** @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\" */ var_metadata_offset, var_metadata_1729_length, expr_mpos), _17), _17, /** @src -1:-1:-1 */ var_1)\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                if iszero(_18)\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let pos_2 := mload(_7)\n                    returndatacopy(pos_2, /** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                    revert(pos_2, returndatasize())\n                }\n                /// @src 0:10591:10661  \"hook.postDispatch{value: msg.value - requiredValue}(metadata, message)\"\n                if _18\n                {\n                    finalize_allocation_17585(_17)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    if var_1\n                    {\n                        revert(/** @src -1:-1:-1 */ var_1, var_1)\n                    }\n                }\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                mstore(/** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _6)\n                mstore(_3, /** @src 10:1949:1964  \"remoteMailboxes\" */ 0x6c)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let cleaned_1 := and(sload(keccak256(/** @src -1:-1:-1 */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _7)), _1)\n                if /** @src 10:2014:2056  \"address(_destinationMailbox) != address(0)\" */ iszero(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ cleaned_1)\n                {\n                    let memPtr := mload(_7)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _10), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Missing remote mailbox\")\n                    revert(memPtr, 100)\n                }\n                /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                if iszero(extcodesize(cleaned_1))\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    revert(/** @src 10:2054:2055  \"0\" */ var_1, var_1)\n                }\n                /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                let _19 := /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ mload(_7)\n                /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                mstore(_19, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ shl(226, 0x0ca22643))\n                mstore(/** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ add(_19, /** @src 0:10299:10344  \"requiredHook.quoteDispatch(metadata, message)\" */ _10), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ _3)\n                /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                let _20 := call(gas(), cleaned_1, /** @src 10:2054:2055  \"0\" */ var_1, /** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ _19, sub(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ abi_encode_bytes(expr_1744_mpos, add(/** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ _19, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ 36)), /** @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\" */ _19), _19, /** @src 10:2054:2055  \"0\" */ var_1)\n                /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                if iszero(_20)\n                {\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    let pos_3 := mload(_7)\n                    returndatacopy(pos_3, /** @src 10:2054:2055  \"0\" */ var_1, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ returndatasize())\n                    revert(pos_3, returndatasize())\n                }\n                /// @src 10:2114:2160  \"_destinationMailbox.addInboundMessage(message)\"\n                if _20\n                {\n                    finalize_allocation_17585(_19)\n                    /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                    if var_1\n                    {\n                        revert(/** @src 10:2054:2055  \"0\" */ var_1, var_1)\n                    }\n                }\n                /// @src 10:2171:2180  \"return id\"\n                var := expr\n            }\n            /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n            function increment_uint32(value) -> ret\n            {\n                let _1 := 0xffffffff\n                let value_1 := and(value, _1)\n                if eq(value_1, _1)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value_1, 1)\n            }\n            function require_helper_stringliteral_d688(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 43)\n                    mstore(add(memPtr, 68), \"Initializable: contract is not i\")\n                    mstore(add(memPtr, 100), \"nitializing\")\n                    revert(memPtr, 132)\n                }\n            }\n            /// @ast-id 2012 @src 14:1620:1750  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let cleaned := and(sload(/** @src 14:1534:1540  \"_owner\" */ 0x33), /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 14:1683:1706  \"owner() == _msgSender()\" */ eq(/** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ cleaned, /** @src 17:965:975  \"msg.sender\" */ caller()))\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 2069 @src 14:2687:2874  \"function _transferOwnership(address newOwner) internal virtual {...\"\n            function fun_transferOwnership(var_newOwner)\n            {\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _1 := sload(/** @src 14:2779:2785  \"_owner\" */ 0x33)\n                /// @src 10:632:2573  \"contract MockMailbox is Mailbox {...\"\n                let _2 := sub(shl(160, 1), 1)\n                let _3 := and(var_newOwner, _2)\n                sstore(/** @src 14:2779:2785  \"_owner\" */ 0x33, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ or(and(_1, shl(160, 0xffffffffffffffffffffffff)), _3))\n                /// @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 10:632:2573  \"contract MockMailbox is Mailbox {...\" */ and(_1, _2), /** @src 14:2827:2867  \"OwnershipTransferred(oldOwner, newOwner)\" */ _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b24cb857dd8801bb8f537a054dd1e4b5c3f26fac8b090299270c52654b22624a64736f6c63430008130033\"\n    }\n    /// @use-src 3:\"contracts/interfaces/IInterchainSecurityModule.sol\", 11:\"contracts/test/TestIsm.sol\"\n    object \"TestIsm_1865\" {\n        code {\n            {\n                /// @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                sstore(/** @src -1:-1:-1 */ 0, /** @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\" */ not(65535)), 262))\n                let _2 := datasize(\"TestIsm_1865_deployed\")\n                codecopy(_1, dataoffset(\"TestIsm_1865_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 11:\"contracts/test/TestIsm.sol\"\n        object \"TestIsm_1865_deployed\" {\n            code {\n                {\n                    /// @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _2 := 0\n                        switch shr(224, calldataload(_2))\n                        case 0x6465e69f {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            mstore(_1, and(sload(_2), 0xff))\n                            return(_1, 32)\n                        }\n                        case 0x951a291f {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                            let value := calldataload(4)\n                            let _3 := iszero(iszero(value))\n                            if iszero(eq(value, _3)) { revert(_2, _2) }\n                            let _4 := sload(_2)\n                            sstore(_2, or(and(_4, not(65280)), and(shl(8, _3), 65280)))\n                            return(_2, _2)\n                        }\n                        case 0xf7e83aee {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                            let offset := calldataload(4)\n                            let _5 := 0xffffffffffffffff\n                            if gt(offset, _5) { revert(_2, _2) }\n                            let value0, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                            let offset_1 := calldataload(36)\n                            if gt(offset_1, _5) { revert(_2, _2) }\n                            let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                            let value_1 := and(shr(8, sload(_2)), 0xff)\n                            let memPos := mload(64)\n                            mstore(memPos, iszero(iszero(value_1)))\n                            return(memPos, 32)\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    length := calldataload(offset)\n                    if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                    arrayPos := add(offset, 0x20)\n                    if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                }\n            }\n            data \".metadata\" hex\"a26469706673582212205d2c89445b5d5663c0f03619ae7571e118a74d2d93f4f718b92b7eee0974353264736f6c63430008130033\"\n        }\n    }\n    /// @use-src 1:\"contracts/hooks/libs/AbstractPostDispatchHook.sol\", 6:\"contracts/interfaces/hooks/IPostDispatchHook.sol\", 12:\"contracts/test/TestPostDispatchHook.sol\"\n    object \"TestPostDispatchHook_1935\" {\n        code {\n            {\n                /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if callvalue() { revert(0, 0) }\n                sstore(/** @src 12:404:405  \"0\" */ 0x00, 0x00)\n                /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n                let _2 := datasize(\"TestPostDispatchHook_1935_deployed\")\n                codecopy(_1, dataoffset(\"TestPostDispatchHook_1935_deployed\"), _2)\n                return(_1, _2)\n            }\n        }\n        /// @use-src 1:\"contracts/hooks/libs/AbstractPostDispatchHook.sol\", 12:\"contracts/test/TestPostDispatchHook.sol\"\n        object \"TestPostDispatchHook_1935_deployed\" {\n            code {\n                {\n                    /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if iszero(lt(calldatasize(), 4))\n                    {\n                        let _2 := 0\n                        switch shr(224, calldataload(_2))\n                        case 0x086011b9 {\n                            let param, param_1, param_2, param_3 := abi_decode_bytes_calldatat_bytes_calldata(calldatasize())\n                            return(_2, _2)\n                        }\n                        case 0x69fe0e2d {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                            sstore(_2, calldataload(4))\n                            return(_2, _2)\n                        }\n                        case 0xaaccd230 {\n                            if callvalue() { revert(_2, _2) }\n                            let param_4, param_5, param_6, param_7 := abi_decode_bytes_calldatat_bytes_calldata(calldatasize())\n                            mstore(_1, sload(_2))\n                            return(_1, 32)\n                        }\n                        case 0xddca3f43 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let _3 := sload(_2)\n                            let memPos := mload(64)\n                            mstore(memPos, _3)\n                            return(memPos, 32)\n                        }\n                        case 0xe445e7dd {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                            let memPos_1 := mload(64)\n                            mstore(memPos_1, _2)\n                            return(memPos_1, 32)\n                        }\n                        case 0xe5320bb9 {\n                            if callvalue() { revert(_2, _2) }\n                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                            let offset := calldataload(4)\n                            if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                            let value0, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                            let memPos_2 := mload(64)\n                            mstore(memPos_2, /** @src 12:738:742  \"true\" */ 0x01)\n                            /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n                            return(memPos_2, 32)\n                        }\n                    }\n                    revert(0, 0)\n                }\n                function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    length := calldataload(offset)\n                    if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                    arrayPos := add(offset, 0x20)\n                    if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                }\n                function abi_decode_bytes_calldatat_bytes_calldata(dataEnd) -> value0, value1, value2, value3\n                {\n                    if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                    let offset := calldataload(4)\n                    let _1 := 0xffffffffffffffff\n                    if gt(offset, _1) { revert(0, 0) }\n                    let value0_1, value1_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                    value0 := value0_1\n                    value1 := value1_1\n                    let offset_1 := calldataload(36)\n                    if gt(offset_1, _1) { revert(0, 0) }\n                    let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset_1), dataEnd)\n                    value2 := value2_1\n                    value3 := value3_1\n                }\n            }\n            data \".metadata\" hex\"a2646970667358221220a1d6008b25f3a8730a5f1b38e1fcb7d9964601fc5a38056cf89145b1b937222464736f6c63430008130033\"\n        }\n    }\n}\n",
        "hash": "010005c34d582af4babe0078612959a7056c6dc24aedf734d3e9f82d7a625035",
        "factoryDependencies": {
          "0100002d9de15f129ee17d082917e17a3a88c32c82a7ed5460fd1b5dff5b9695": "contracts/test/TestIsm.sol:TestIsm",
          "0100003925a0860c35a1bac2af99a75c0fa6388990ad8fe9430572deab3414be": "contracts/test/TestPostDispatchHook.sol:TestPostDispatchHook"
        }
      }
    },
    "contracts/test/TestIsm.sol": {
      "TestIsm": {
        "abi": [
          {
            "inputs": [],
            "name": "moduleType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bool",
                "name": "_verify",
                "type": "bool"
              }
            ],
            "name": "setVerify",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "verify",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_verify\",\"type\":\"bool\"}],\"name\":\"setVerify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"moduleType\":{\"details\":\"Relayers infer how to fetch and format metadata.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"moduleType()\":{\"notice\":\"Returns an enum that represents the type of security model encoded by this ISM.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestIsm.sol\":\"TestIsm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"contracts/test/TestIsm.sol\":{\"keccak256\":\"0x0e49e4fb10bd8f7c98f33b5d83c50a0f15d17953999a2fb18be4294c05497f5e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7498991b51efcb545d4846ca898b0c15841e51361430fc0359f9a73936a30c29\",\"dweb:/ipfs/QmacRJW6tzaiKcRwU3b4TaKhbVhzZdDyZwyFPDeM7CFtM8\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TestIsm.sol:TestIsm\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr2, r0, r3\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, r2\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r2, r3\n\tjump.lt\t@.BB0_2\n\tld\tr1, r3\n\tshr.s\t224, r3, r3\n\tsub.s!\t@CPI0_3[0], r3, r4\n\tjump.eq\t@.BB0_14\n\tsub.s!\t@CPI0_4[0], r3, r4\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_5[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t255, r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_1[0], r1, r1\n\tor\t262, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_14:\n\tcontext.get_context_u128\tr3\n\tsub.s!\t68, r2, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tsub!\tr4, r2, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r4, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_6[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tsload\tr0, r1\n\tand!\t65280, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tcontext.get_context_u128\tr3\n\tsub.s!\t36, r2, r2\n\tjump.lt\t@.BB0_2\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r3\n\tand\t@CPI0_8[0], r3, r2\n\tsub!\tr1, r0, r1\n\tor.ne\t256, r2, r2\n\tsstore\tr0, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_bytes_calldata:\n.func_begin1:\n\tadd\t31, r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_1[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tadd\tr1, r3, r1\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -65536\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_3:\n\t.cell 4159191790\nCPI0_4:\n\t.cell 2501519647\nCPI0_5:\n\t.cell 1684399775\nCPI0_6:\nCPI1_1:\n\t.cell 18446744073709551615\nCPI0_7:\n\t.cell 2535301200456458802993406410752\nCPI0_8:\n\t.cell -65281\nCPI0_9:\n\t.cell 2535301202817642044428229017600\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\n",
          "bytecode": {
            "object": "0001000000000002000000000302001900000000000103550000008002000039000000400020043f00000000020100190000006002200270000000210220019700000001033001900000001c0000c13d000000040320008c000000620000413d000000000301043b000000e003300270000000240430009c000000280000613d000000250430009c0000004f0000613d000000260130009c000000620000c13d0000000001000416000000000101004b000000620000c13d000000000100041a000000ff0110018f000000800010043f0000002a010000410000007e0001042e0000000001000416000000000101004b000000620000c13d000000000100041a000000220110019700000106011001bf000000000010041b00000020010000390000010000100443000001200000044300000023010000410000007e0001042e0000000003000416000000440420008c000000620000413d000000000303004b000000620000c13d0000000403100370000000000303043b000000270430009c000000620000213d0000002304300039000000000424004b000000620000813d0000000404300039000000000441034f000000000404043b000000270540009c000000620000213d00000000034300190000002403300039000000000323004b000000620000213d0000002401100370000000000101043b000000270310009c000000620000213d0000000401100039007d00640000040f000000000100041a0000ff00011001900000000001000019000000010100c039000000400200043d00000000001204350000002101000041000000210320009c0000000002018019000000400120021000000028011001c70000007e0001042e0000000003000416000000240220008c000000620000413d000000000203004b000000620000c13d0000000401100370000000000101043b000000000201004b0000000002000019000000010200c039000000000221004b000000620000c13d000000000300041a0000002902300197000000000101004b000001000220c1bf000000000020041b00000000010000190000007e0001042e00000000010000190000007f000104300000001f031000390000002b04000041000000000523004b000000000500001900000000050440190000002b062001970000002b03300197000000000763004b000000000400a019000000000363013f0000002b0330009c000000000405c019000000000304004b0000007b0000613d0000000003100367000000000303043b000000270430009c0000007b0000213d00000000013100190000002001100039000000000121004b0000007b0000213d000000000001042d00000000010000190000007f000104300000007d000004320000007e0001042e0000007f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000f7e83aee00000000000000000000000000000000000000000000000000000000951a291f000000000000000000000000000000000000000000000000000000006465e69f000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000020000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff00000000000000000000000000000000000000200000008000000000000000008000000000000000000000000000000000000000000000000000000000000000e8ddfc810f927410bd48fbd06cd62a3f844cdc4c18a4cef21d536668c0dc52cc"
          },
          "methodIdentifiers": {
            "moduleType()": "6465e69f",
            "setVerify(bool)": "951a291f",
            "verify(bytes,bytes)": "f7e83aee"
          }
        },
        "irOptimized": "/// @use-src 3:\"contracts/interfaces/IInterchainSecurityModule.sol\", 11:\"contracts/test/TestIsm.sol\"\nobject \"TestIsm_1865\" {\n    code {\n        {\n            /// @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\" */ not(65535)), 262))\n            let _2 := datasize(\"TestIsm_1865_deployed\")\n            codecopy(_1, dataoffset(\"TestIsm_1865_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"contracts/test/TestIsm.sol\"\n    object \"TestIsm_1865_deployed\" {\n        code {\n            {\n                /// @src 11:161:492  \"contract TestIsm is IInterchainSecurityModule {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x6465e69f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        mstore(_1, and(sload(_2), 0xff))\n                        return(_1, 32)\n                    }\n                    case 0x951a291f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value := calldataload(4)\n                        let _3 := iszero(iszero(value))\n                        if iszero(eq(value, _3)) { revert(_2, _2) }\n                        let _4 := sload(_2)\n                        sstore(_2, or(and(_4, not(65280)), and(shl(8, _3), 65280)))\n                        return(_2, _2)\n                    }\n                    case 0xf7e83aee {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let offset := calldataload(4)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_2, _2) }\n                        let value0, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _5) { revert(_2, _2) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                        let value_1 := and(shr(8, sload(_2)), 0xff)\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(value_1)))\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212205d2c89445b5d5663c0f03619ae7571e118a74d2d93f4f718b92b7eee0974353264736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100002d9de15f129ee17d082917e17a3a88c32c82a7ed5460fd1b5dff5b9695",
        "factoryDependencies": {}
      }
    },
    "contracts/test/TestPostDispatchHook.sol": {
      "TestPostDispatchHook": {
        "abi": [
          {
            "inputs": [],
            "name": "fee",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "hookType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "postDispatch",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              }
            ],
            "name": "quoteDispatch",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_fee",
                "type": "uint256"
              }
            ],
            "name": "setFee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "supportsMetadata",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hookType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"postDispatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"quoteDispatch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"supportsMetadata\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"}},\"quoteDispatch(bytes,bytes)\":{\"params\":{\"message\":\"The message passed from the Mailbox.dispatch() call\",\"metadata\":\"The metadata required for the hook\"},\"returns\":{\"_0\":\"Quoted payment for the postDispatch call\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hookType()\":{\"notice\":\"Returns an enum that represents the type of hook\"},\"postDispatch(bytes,bytes)\":{\"notice\":\"Post action after a message is dispatched via the Mailbox\"},\"quoteDispatch(bytes,bytes)\":{\"notice\":\"Compute the payment required by the postDispatch call\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestPostDispatchHook.sol\":\"TestPostDispatchHook\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/hooks/libs/AbstractPostDispatchHook.sol\":{\"keccak256\":\"0x1cd99f22ad0fe26864dbb37fc6ab9d657900c49d1eddf62ef6eeaf6cdff797f9\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://08a7d7de78c8d8a8f8f2939be3c0892b1de9c7c60106562ddeebd79655e3ae57\",\"dweb:/ipfs/QmTT2RVm7gUUVVvBTd3ZKjAZDc2Y4Gi1G9Qxa2bHiWE3AL\"]},\"contracts/hooks/libs/StandardHookMetadata.sol\":{\"keccak256\":\"0x28e8be5b70f6b5b7c6a52c4906635639ae5ef3fe2ac970b7c30299e939b38e42\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6a3a41ef53096ed385dd593a8b32955c12ced1b210102f84990f30ee1311b2f4\",\"dweb:/ipfs/QmZyNfa4tpL5WhpGW73RCzu6rWMFW88Uvm54J5gq1hvXgQ\"]},\"contracts/interfaces/hooks/IPostDispatchHook.sol\":{\"keccak256\":\"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447\",\"dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ\"]},\"contracts/test/TestPostDispatchHook.sol\":{\"keccak256\":\"0xd8f0eead0d1480597efdfd20a8554e17cc8e9cb6ea274ab5ef269a386e481c7f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://04d583d5e9d9c946b94398958a2f4ff7b97a640e4d3ca6329a6eabce6b859a2a\",\"dweb:/ipfs/QmdeR1rRo5JMJwFbdxXBb79w7y3vNRLri8d5Zo3wNYUMhq\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TestPostDispatchHook.sol:TestPostDispatchHook\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_9\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.eq\t@.BB0_12\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_13\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes_calldatat_bytes_calldata, @DEFAULT_UNWIND\n\tjump\t@.BB0_19\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsstore\tr0, r0\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_9:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.eq\t@.BB0_18\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_20\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_bytes_calldatat_bytes_calldata, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsstore\tr0, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n.BB0_19:\n\tsload\tr0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tst.1\t128, r0\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_bytes_calldata:\n.func_begin1:\n\tadd\t31, r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_1[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tadd\tr1, r3, r1\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_bytes_calldatat_bytes_calldata:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t67, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r4, r4\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.gt\t@.BB2_1\n\tadd\t35, r3, r4\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB2_1\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI2_1[0], r4, r5\n\tjump.gt\t@.BB2_1\n\tadd\tr3, r4, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r1, r3\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tjump.gt\t@.BB2_1\n\tadd\t35, r3, r4\n\tsub!\tr4, r1, r4\n\tjump.ge\t@.BB2_1\n\tadd\t4, r3, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI2_1[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tadd\tr3, r2, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r1, r1\n\tjump.gt\t@.BB2_1\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 3721019202\nCPI0_3:\n\t.cell 3721019203\nCPI0_4:\n\t.cell 3829786589\nCPI0_5:\n\t.cell 3845262265\nCPI0_6:\n\t.cell 140513721\nCPI0_7:\n\t.cell 1778257453\nCPI0_8:\n\t.cell 2865549872\nCPI0_9:\nCPI1_1:\nCPI2_1:\n\t.cell 18446744073709551615\nCPI0_10:\n\t.cell 2535301200456458802993406410752\nCPI0_11:\n\t.cell 2535301202817642044428229017600\nCPI1_0:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\n",
          "bytecode": {
            "object": "000100000000000200000000000103550000008003000039000000400030043f000000000301001900000060033002700000002a0330019700000001022001900000001b0000c13d000000040230008c0000005a0000413d000000000201043b000000e0022002700000002c0420009c000000240000213d000000300420009c0000003f0000613d000000310420009c000000430000613d000000320120009c0000005a0000c13d0000000001000416000000000101004b0000005a0000c13d000000000103001900a400750000040f000000500000013d0000000001000416000000000101004b0000005a0000c13d000000000000041b0000002001000039000001000010044300000120000004430000002b01000041000000a50001042e0000002d0420009c0000004d0000613d0000002e0420009c000000540000613d0000002f0220009c0000005a0000c13d0000000002000416000000240430008c0000005a0000413d000000000202004b0000005a0000c13d0000000401100370000000000101043b000000330210009c0000005a0000213d0000000401100039000000000203001900a4005c0000040f0000000101000039000000400200043d00000000001204350000002a010000410000002a0320009c0000000002018019000000400120021000000034011001c7000000a50001042e000000000103001900a400750000040f0000000001000019000000a50001042e0000000002000416000000240330008c0000005a0000413d000000000202004b0000005a0000c13d0000000401100370000000000101043b000000000010041b0000000001000019000000a50001042e0000000001000416000000000101004b0000005a0000c13d000000000100041a000000800010043f0000003501000041000000a50001042e0000000001000416000000000101004b0000005a0000c13d000000800000043f0000003501000041000000a50001042e0000000001000019000000a6000104300000001f031000390000003604000041000000000523004b0000000005000019000000000504401900000036062001970000003603300197000000000763004b000000000400a019000000000363013f000000360330009c000000000405c019000000000304004b000000730000613d0000000003100367000000000303043b000000330430009c000000730000213d00000000013100190000002001100039000000000121004b000000730000213d000000000001042d0000000001000019000000a6000104300000003602000041000000430310008c000000000300001900000000030220190000003604100197000000000504004b0000000002008019000000360440009c000000000203c019000000000202004b000000a20000613d00000000020003670000000403200370000000000303043b000000330430009c000000a20000213d0000002304300039000000000414004b000000a20000813d0000000404300039000000000442034f000000000404043b000000330540009c000000a20000213d00000000034300190000002403300039000000000313004b000000a20000213d0000002403200370000000000303043b000000330430009c000000a20000213d0000002304300039000000000414004b000000a20000813d0000000404300039000000000242034f000000000202043b000000330420009c000000a20000213d00000000022300190000002402200039000000000112004b000000a20000213d000000000001042d0000000001000019000000a600010430000000a400000432000000a50001042e000000a600010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000ddca3f4200000000000000000000000000000000000000000000000000000000ddca3f4300000000000000000000000000000000000000000000000000000000e445e7dd00000000000000000000000000000000000000000000000000000000e5320bb900000000000000000000000000000000000000000000000000000000086011b90000000000000000000000000000000000000000000000000000000069fe0e2d00000000000000000000000000000000000000000000000000000000aaccd230000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002000000080000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d9e1147865b75a318cdc9a36ac4d2c5501dea32540a273a0578abebaf437ff41"
          },
          "methodIdentifiers": {
            "fee()": "ddca3f43",
            "hookType()": "e445e7dd",
            "postDispatch(bytes,bytes)": "086011b9",
            "quoteDispatch(bytes,bytes)": "aaccd230",
            "setFee(uint256)": "69fe0e2d",
            "supportsMetadata(bytes)": "e5320bb9"
          }
        },
        "irOptimized": "/// @use-src 1:\"contracts/hooks/libs/AbstractPostDispatchHook.sol\", 6:\"contracts/interfaces/hooks/IPostDispatchHook.sol\", 12:\"contracts/test/TestPostDispatchHook.sol\"\nobject \"TestPostDispatchHook_1935\" {\n    code {\n        {\n            /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 12:404:405  \"0\" */ 0x00, 0x00)\n            /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n            let _2 := datasize(\"TestPostDispatchHook_1935_deployed\")\n            codecopy(_1, dataoffset(\"TestPostDispatchHook_1935_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"contracts/hooks/libs/AbstractPostDispatchHook.sol\", 12:\"contracts/test/TestPostDispatchHook.sol\"\n    object \"TestPostDispatchHook_1935_deployed\" {\n        code {\n            {\n                /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x086011b9 {\n                        let param, param_1, param_2, param_3 := abi_decode_bytes_calldatat_bytes_calldata(calldatasize())\n                        return(_2, _2)\n                    }\n                    case 0x69fe0e2d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        sstore(_2, calldataload(4))\n                        return(_2, _2)\n                    }\n                    case 0xaaccd230 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_4, param_5, param_6, param_7 := abi_decode_bytes_calldatat_bytes_calldata(calldatasize())\n                        mstore(_1, sload(_2))\n                        return(_1, 32)\n                    }\n                    case 0xddca3f43 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _3 := sload(_2)\n                        let memPos := mload(64)\n                        mstore(memPos, _3)\n                        return(memPos, 32)\n                    }\n                    case 0xe445e7dd {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _2)\n                        return(memPos_1, 32)\n                    }\n                    case 0xe5320bb9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                        let value0, value1 := abi_decode_bytes_calldata(add(4, offset), calldatasize())\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, /** @src 12:738:742  \"true\" */ 0x01)\n                        /// @src 12:235:1230  \"contract TestPostDispatchHook is AbstractPostDispatchHook {...\"\n                        return(memPos_2, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_decode_bytes_calldatat_bytes_calldata(dataEnd) -> value0, value1, value2, value3\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let offset := calldataload(4)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1) { revert(0, 0) }\n                let value0_1, value1_1 := abi_decode_bytes_calldata(add(4, offset), dataEnd)\n                value0 := value0_1\n                value1 := value1_1\n                let offset_1 := calldataload(36)\n                if gt(offset_1, _1) { revert(0, 0) }\n                let value2_1, value3_1 := abi_decode_bytes_calldata(add(4, offset_1), dataEnd)\n                value2 := value2_1\n                value3 := value3_1\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a1d6008b25f3a8730a5f1b38e1fcb7d9964601fc5a38056cf89145b1b937222464736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100003925a0860c35a1bac2af99a75c0fa6388990ad8fe9430572deab3414be",
        "factoryDependencies": {}
      }
    },
    "contracts/upgrade/Versioned.sol": {
      "Versioned": {
        "abi": [
          {
            "inputs": [],
            "name": "VERSION",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Versioned\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Version getter for contracts*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upgrade/Versioned.sol\":\"Versioned\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/upgrade/Versioned.sol\":{\"keccak256\":\"0xdef5b9227ee177fe0f50871897b43d8acd1be2d730e6c0e77719f7fd53dc7729\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://caf8bdbb25773c75f4fcfd8939c03ec776e44353ccf046639e1f57c5b9aa9df9\",\"dweb:/ipfs/QmbNDKaKpiPXGrnCZt3GYUCuxMQh5mzXHB7msCUkpC3cP9\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"Versioned.sol:Versioned\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tr1, r0, r2\n\tand!\t@CPI0_1[0], r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_1:\n\t.cell 340282366604025813406317257057592410112\nCPI0_2:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_3:\n\t.cell -166653341682138354300970868432653239323178786442245309441101664413292691456\nCPI0_4:\n\t.cell 2535301202817642044428229017600\n",
          "bytecode": {
            "object": "0000008003000039000000400030043f0000000102200190000000120000c13d000000000201001900000009022001980000001a0000613d000000000101043b0000000a011001970000000b0110009c0000001a0000c13d0000000001000416000000000101004b0000001a0000c13d0000000301000039000000800010043f0000000c010000410000001d0001042e0000000001000416000000000101004b0000001a0000c13d00000020010000390000010000100443000001200000044300000008010000410000001d0001042e00000000010000190000001e000104300000001c000004320000001d0001042e0000001e000104300000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000ffa1ad7400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000000000000000000000000000006cbf828cb9ffd38bfa0f9e6772363c663884857e732a81e8d4878d459d93c3c9"
          },
          "methodIdentifiers": {
            "VERSION()": "ffa1ad74"
          }
        },
        "irOptimized": "/// @use-src 13:\"contracts/upgrade/Versioned.sol\"\nobject \"Versioned_1942\" {\n    code {\n        {\n            /// @src 13:142:203  \"contract Versioned {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Versioned_1942_deployed\")\n            codecopy(_1, dataoffset(\"Versioned_1942_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 13:\"contracts/upgrade/Versioned.sol\"\n    object \"Versioned_1942_deployed\" {\n        code {\n            {\n                /// @src 13:142:203  \"contract Versioned {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    if eq(0xffa1ad74, shr(224, calldataload(_2)))\n                    {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        mstore(_1, /** @src 13:199:200  \"3\" */ 0x03)\n                        /// @src 13:142:203  \"contract Versioned {...\"\n                        return(_1, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f79e7a631b2171b69a606c8742b7ac43251d729799155a6a8660357f70f6606b64736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100000f351f9694709dc5392769e5e4a8352ea0b00bf26ab452cff59d931e2f",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
      "OwnableUpgradeable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "Initializable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "AddressUpgradeable": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"AddressUpgradeable.sol:AddressUpgradeable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000005b0323e7af20779ddfd19560fd06adbbd4a87d2ad3c14e678b4eece6cb4fa9a9"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 16:\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"\nobject \"AddressUpgradeable_2574\" {\n    code {\n        {\n            /// @src 16:194:9374  \"library AddressUpgradeable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"AddressUpgradeable_2574_deployed\")\n            codecopy(_1, dataoffset(\"AddressUpgradeable_2574_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 16:\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"\n    object \"AddressUpgradeable_2574_deployed\" {\n        code {\n            {\n                /// @src 16:194:9374  \"library AddressUpgradeable {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c7dc4fd67be96f727a5adddef108fa12f9c50d66ed51d115c3da4f2caeec523664736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000007bd843e9221f3ef65d86d814b81c66751ef965ec2309798bd808eb7e2",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "ContextUpgradeable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "Address": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000001434a78b4ef4200d60805b6a7b1edc0cce9cc7c61f9b7ff803a7069d4f1a344e"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 18:\"node_modules/@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_2955\" {\n    code {\n        {\n            /// @src 18:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_2955_deployed\")\n            codecopy(_1, dataoffset(\"Address_2955_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 18:\"node_modules/@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_2955_deployed\" {\n        code {\n            {\n                /// @src 18:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212204961be739cdadcf8d7cb104d1bd6b87f08f76a284e8f0429ea51d392cbd69cf864736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000070d090b64a9399a5c5d7e6ae87bf58efc78e325b96cb11437c80f2761",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "contracts/Mailbox.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "contracts/Mailbox.sol",
        "exportedSymbols": {
          "Address": [
            2955
          ],
          "IInterchainSecurityModule": [
            1099
          ],
          "IMailbox": [
            1273
          ],
          "IMessageRecipient": [
            1285
          ],
          "IPostDispatchHook": [
            1330
          ],
          "ISpecifiesInterchainSecurityModule": [
            1106
          ],
          "Indexed": [
            1344
          ],
          "Mailbox": [
            702
          ],
          "Message": [
            1579
          ],
          "OwnableUpgradeable": [
            2075
          ],
          "TypeCasts": [
            1620
          ],
          "Versioned": [
            1942
          ]
        },
        "id": 703,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:0"
          },
          {
            "absolutePath": "contracts/upgrade/Versioned.sol",
            "file": "./upgrade/Versioned.sol",
            "id": 3,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1943,
            "src": "118:50:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 2,
                  "name": "Versioned",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1942,
                  "src": "126:9:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/libs/Indexed.sol",
            "file": "./libs/Indexed.sol",
            "id": 5,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1345,
            "src": "169:43:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 4,
                  "name": "Indexed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1344,
                  "src": "177:7:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/libs/Message.sol",
            "file": "./libs/Message.sol",
            "id": 7,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1580,
            "src": "213:43:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 6,
                  "name": "Message",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1579,
                  "src": "221:7:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/libs/TypeCasts.sol",
            "file": "./libs/TypeCasts.sol",
            "id": 9,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1621,
            "src": "257:47:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 8,
                  "name": "TypeCasts",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1620,
                  "src": "265:9:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
            "file": "./interfaces/IInterchainSecurityModule.sol",
            "id": 12,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1107,
            "src": "305:121:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 10,
                  "name": "IInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "313:25:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              },
              {
                "foreign": {
                  "id": 11,
                  "name": "ISpecifiesInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1106,
                  "src": "340:34:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/hooks/IPostDispatchHook.sol",
            "file": "./interfaces/hooks/IPostDispatchHook.sol",
            "id": 14,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1331,
            "src": "427:75:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 13,
                  "name": "IPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1330,
                  "src": "435:17:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IMessageRecipient.sol",
            "file": "./interfaces/IMessageRecipient.sol",
            "id": 16,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1286,
            "src": "503:69:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 15,
                  "name": "IMessageRecipient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1285,
                  "src": "511:17:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IMailbox.sol",
            "file": "./interfaces/IMailbox.sol",
            "id": 18,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 1274,
            "src": "573:51:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 17,
                  "name": "IMailbox",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1273,
                  "src": "581:8:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "file": "@openzeppelin/contracts/utils/Address.sol",
            "id": 20,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 2956,
            "src": "672:66:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 19,
                  "name": "Address",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2955,
                  "src": "680:7:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
            "id": 22,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 703,
            "sourceUnit": 2076,
            "src": "739:101:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 21,
                  "name": "OwnableUpgradeable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2075,
                  "src": "747:18:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 23,
                  "name": "IMailbox",
                  "nameLocations": [
                    "862:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1273,
                  "src": "862:8:0"
                },
                "id": 24,
                "nodeType": "InheritanceSpecifier",
                "src": "862:8:0"
              },
              {
                "baseName": {
                  "id": 25,
                  "name": "Indexed",
                  "nameLocations": [
                    "872:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1344,
                  "src": "872:7:0"
                },
                "id": 26,
                "nodeType": "InheritanceSpecifier",
                "src": "872:7:0"
              },
              {
                "baseName": {
                  "id": 27,
                  "name": "Versioned",
                  "nameLocations": [
                    "881:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1942,
                  "src": "881:9:0"
                },
                "id": 28,
                "nodeType": "InheritanceSpecifier",
                "src": "881:9:0"
              },
              {
                "baseName": {
                  "id": 29,
                  "name": "OwnableUpgradeable",
                  "nameLocations": [
                    "892:18:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2075,
                  "src": "892:18:0"
                },
                "id": 30,
                "nodeType": "InheritanceSpecifier",
                "src": "892:18:0"
              }
            ],
            "canonicalName": "Mailbox",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 702,
            "linearizedBaseContracts": [
              702,
              2075,
              2625,
              2244,
              1942,
              1344,
              1273
            ],
            "name": "Mailbox",
            "nameLocation": "851:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "global": false,
                "id": 33,
                "libraryName": {
                  "id": 31,
                  "name": "Message",
                  "nameLocations": [
                    "967:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1579,
                  "src": "967:7:0"
                },
                "nodeType": "UsingForDirective",
                "src": "961:24:0",
                "typeName": {
                  "id": 32,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "979:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              },
              {
                "global": false,
                "id": 36,
                "libraryName": {
                  "id": 34,
                  "name": "TypeCasts",
                  "nameLocations": [
                    "996:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1620,
                  "src": "996:9:0"
                },
                "nodeType": "UsingForDirective",
                "src": "990:28:0",
                "typeName": {
                  "id": 35,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1010:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              },
              {
                "global": false,
                "id": 39,
                "libraryName": {
                  "id": 37,
                  "name": "TypeCasts",
                  "nameLocations": [
                    "1029:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1620,
                  "src": "1029:9:0"
                },
                "nodeType": "UsingForDirective",
                "src": "1023:28:0",
                "typeName": {
                  "id": 38,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1043:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              },
              {
                "baseFunctions": [
                  1147
                ],
                "constant": false,
                "functionSelector": "8d3638f4",
                "id": 41,
                "mutability": "immutable",
                "name": "localDomain",
                "nameLocation": "1182:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "1158:35:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 40,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1158:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "affed0e0",
                "id": 43,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "1336:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "1322:19:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 42,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1322:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1177
                ],
                "constant": false,
                "functionSelector": "134fbb4f",
                "id": 45,
                "mutability": "mutable",
                "name": "latestDispatchedId",
                "nameLocation": "1441:18:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "1426:33:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 44,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1426:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1160
                ],
                "constant": false,
                "functionSelector": "6e5f516e",
                "id": 48,
                "mutability": "mutable",
                "name": "defaultIsm",
                "nameLocation": "1567:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "1534:43:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                  "typeString": "contract IInterchainSecurityModule"
                },
                "typeName": {
                  "id": 47,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 46,
                    "name": "IInterchainSecurityModule",
                    "nameLocations": [
                      "1534:25:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1099,
                    "src": "1534:25:0"
                  },
                  "referencedDeclaration": 1099,
                  "src": "1534:25:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                    "typeString": "contract IInterchainSecurityModule"
                  }
                },
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1166
                ],
                "constant": false,
                "functionSelector": "3d1250b7",
                "id": 51,
                "mutability": "mutable",
                "name": "defaultHook",
                "nameLocation": "1698:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "1673:36:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                  "typeString": "contract IPostDispatchHook"
                },
                "typeName": {
                  "id": 50,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 49,
                    "name": "IPostDispatchHook",
                    "nameLocations": [
                      "1673:17:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1330,
                    "src": "1673:17:0"
                  },
                  "referencedDeclaration": 1330,
                  "src": "1673:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                    "typeString": "contract IPostDispatchHook"
                  }
                },
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1172
                ],
                "constant": false,
                "functionSelector": "d6d08a09",
                "id": 54,
                "mutability": "mutable",
                "name": "requiredHook",
                "nameLocation": "1825:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "1800:37:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                  "typeString": "contract IPostDispatchHook"
                },
                "typeName": {
                  "id": 53,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 52,
                    "name": "IPostDispatchHook",
                    "nameLocations": [
                      "1800:17:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1330,
                    "src": "1800:17:0"
                  },
                  "referencedDeclaration": 1330,
                  "src": "1800:17:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                    "typeString": "contract IPostDispatchHook"
                  }
                },
                "visibility": "public"
              },
              {
                "canonicalName": "Mailbox.Delivery",
                "id": 59,
                "members": [
                  {
                    "constant": false,
                    "id": 56,
                    "mutability": "mutable",
                    "name": "processor",
                    "nameLocation": "1955:9:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 59,
                    "src": "1947:17:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 55,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1947:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 58,
                    "mutability": "mutable",
                    "name": "blockNumber",
                    "nameLocation": "1981:11:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 59,
                    "src": "1974:18:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint48",
                      "typeString": "uint48"
                    },
                    "typeName": {
                      "id": 57,
                      "name": "uint48",
                      "nodeType": "ElementaryTypeName",
                      "src": "1974:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Delivery",
                "nameLocation": "1928:8:0",
                "nodeType": "StructDefinition",
                "scope": 702,
                "src": "1921:78:0",
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 64,
                "mutability": "mutable",
                "name": "deliveries",
                "nameLocation": "2042:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 702,
                "src": "2004:48:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Delivery_$59_storage_$",
                  "typeString": "mapping(bytes32 => struct Mailbox.Delivery)"
                },
                "typeName": {
                  "id": 63,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 60,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "2004:28:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Delivery_$59_storage_$",
                    "typeString": "mapping(bytes32 => struct Mailbox.Delivery)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 62,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 61,
                      "name": "Delivery",
                      "nameLocations": [
                        "2023:8:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 59,
                      "src": "2023:8:0"
                    },
                    "referencedDeclaration": 59,
                    "src": "2023:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Delivery_$59_storage_ptr",
                      "typeString": "struct Mailbox.Delivery"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 65,
                  "nodeType": "StructuredDocumentation",
                  "src": "2100:107:0",
                  "text": " @notice Emitted when the default ISM is updated\n @param module The new default ISM"
                },
                "eventSelector": "a76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa",
                "id": 69,
                "name": "DefaultIsmSet",
                "nameLocation": "2218:13:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 68,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 67,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "module",
                      "nameLocation": "2248:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "2232:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2232:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2231:24:0"
                },
                "src": "2212:44:0"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 70,
                  "nodeType": "StructuredDocumentation",
                  "src": "2262:107:0",
                  "text": " @notice Emitted when the default hook is updated\n @param hook The new default hook"
                },
                "eventSelector": "65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d7",
                "id": 74,
                "name": "DefaultHookSet",
                "nameLocation": "2380:14:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 73,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 72,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "hook",
                      "nameLocation": "2411:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 74,
                      "src": "2395:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 71,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2395:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2394:22:0"
                },
                "src": "2374:43:0"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 75,
                  "nodeType": "StructuredDocumentation",
                  "src": "2423:109:0",
                  "text": " @notice Emitted when the required hook is updated\n @param hook The new required hook"
                },
                "eventSelector": "329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b1",
                "id": 79,
                "name": "RequiredHookSet",
                "nameLocation": "2543:15:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 78,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 77,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "hook",
                      "nameLocation": "2575:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "2559:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 76,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2559:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2558:22:0"
                },
                "src": "2537:44:0"
              },
              {
                "body": {
                  "id": 88,
                  "nodeType": "Block",
                  "src": "2665:43:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 84,
                          "name": "localDomain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "2675:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 85,
                          "name": "_localDomain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "2689:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "2675:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 87,
                      "nodeType": "ExpressionStatement",
                      "src": "2675:26:0"
                    }
                  ]
                },
                "id": 89,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 82,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 81,
                      "mutability": "mutable",
                      "name": "_localDomain",
                      "nameLocation": "2651:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "2644:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 80,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2644:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2643:21:0"
                },
                "returnParameters": {
                  "id": 83,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2665:0:0"
                },
                "scope": 702,
                "src": "2632:76:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 121,
                  "nodeType": "Block",
                  "src": "2921:182:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 102,
                          "name": "__Ownable_init",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1970,
                          "src": "2931:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2931:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 104,
                      "nodeType": "ExpressionStatement",
                      "src": "2931:16:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "_defaultIsm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "2971:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 105,
                          "name": "setDefaultIsm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 565,
                          "src": "2957:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2957:26:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 108,
                      "nodeType": "ExpressionStatement",
                      "src": "2957:26:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 110,
                            "name": "_defaultHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "3008:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 109,
                          "name": "setDefaultHook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "2993:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2993:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 112,
                      "nodeType": "ExpressionStatement",
                      "src": "2993:28:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 114,
                            "name": "_requiredHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "3047:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 113,
                          "name": "setRequiredHook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 619,
                          "src": "3031:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3031:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 116,
                      "nodeType": "ExpressionStatement",
                      "src": "3031:30:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 118,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91,
                            "src": "3089:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 117,
                          "name": "transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "3071:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3071:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 120,
                      "nodeType": "ExpressionStatement",
                      "src": "3071:25:0"
                    }
                  ]
                },
                "functionSelector": "f8c8765e",
                "id": 122,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 100,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 99,
                      "name": "initializer",
                      "nameLocations": [
                        "2909:11:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2146,
                      "src": "2909:11:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2909:11:0"
                  }
                ],
                "name": "initialize",
                "nameLocation": "2769:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 98,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 91,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "2797:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "2789:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2789:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 93,
                      "mutability": "mutable",
                      "name": "_defaultIsm",
                      "nameLocation": "2821:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "2813:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 95,
                      "mutability": "mutable",
                      "name": "_defaultHook",
                      "nameLocation": "2850:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "2842:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 94,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2842:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "_requiredHook",
                      "nameLocation": "2880:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "2872:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2872:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2779:120:0"
                },
                "returnParameters": {
                  "id": 101,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2921:0:0"
                },
                "scope": 702,
                "src": "2760:343:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1188
                ],
                "body": {
                  "id": 146,
                  "nodeType": "Block",
                  "src": "3753:223:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 136,
                            "name": "_destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 125,
                            "src": "3808:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 137,
                            "name": "_recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 127,
                            "src": "3844:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 138,
                            "name": "_messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3879:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 139,
                              "name": "_messageBody",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3909:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "30",
                              "id": 141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3924:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "3909:17:0",
                            "startExpression": {
                              "hexValue": "30",
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3922:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          },
                          {
                            "id": 143,
                            "name": "defaultHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "3944:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            },
                            {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          ],
                          "id": 135,
                          "name": "dispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "3782:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_contract$_IPostDispatchHook_$1330_$returns$_t_bytes32_$",
                            "typeString": "function (uint32,bytes32,bytes calldata,bytes calldata,contract IPostDispatchHook) returns (bytes32)"
                          }
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3782:187:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 134,
                      "id": 145,
                      "nodeType": "Return",
                      "src": "3763:206:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 123,
                  "nodeType": "StructuredDocumentation",
                  "src": "3161:412:0",
                  "text": " @notice Dispatches a message to the destination domain & recipient\n using the default hook and empty metadata.\n @param _destinationDomain Domain of destination chain\n @param _recipientAddress Address of recipient on destination chain as bytes32\n @param _messageBody Raw bytes content of message body\n @return The message ID inserted into the Mailbox's merkle tree"
                },
                "functionSelector": "fa31de01",
                "id": 147,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "3587:8:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 131,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3726:8:0"
                },
                "parameters": {
                  "id": 130,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 125,
                      "mutability": "mutable",
                      "name": "_destinationDomain",
                      "nameLocation": "3612:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 147,
                      "src": "3605:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3605:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "_recipientAddress",
                      "nameLocation": "3648:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 147,
                      "src": "3640:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 126,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3640:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 129,
                      "mutability": "mutable",
                      "name": "_messageBody",
                      "nameLocation": "3690:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 147,
                      "src": "3675:27:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 128,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3675:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3595:113:0"
                },
                "returnParameters": {
                  "id": 134,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 133,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 147,
                      "src": "3744:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 132,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3744:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3743:9:0"
                },
                "scope": 702,
                "src": "3578:398:0",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1212
                ],
                "body": {
                  "id": 170,
                  "nodeType": "Block",
                  "src": "4623:215:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 163,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "4678:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 164,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "4713:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 165,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 166,
                            "name": "hookMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "4776:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 167,
                            "name": "defaultHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "4806:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          ],
                          "id": 162,
                          "name": "dispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 468,
                          "src": "4652:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_contract$_IPostDispatchHook_$1330_$returns$_t_bytes32_$",
                            "typeString": "function (uint32,bytes32,bytes calldata,bytes calldata,contract IPostDispatchHook) returns (bytes32)"
                          }
                        },
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4652:179:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 161,
                      "id": 169,
                      "nodeType": "Return",
                      "src": "4633:198:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 148,
                  "nodeType": "StructuredDocumentation",
                  "src": "3982:427:0",
                  "text": " @notice Dispatches a message to the destination domain & recipient.\n @param destinationDomain Domain of destination chain\n @param recipientAddress Address of recipient on destination chain as bytes32\n @param messageBody Raw bytes content of message body\n @param hookMetadata Metadata used by the post dispatch hook\n @return The message ID inserted into the Mailbox's merkle tree"
                },
                "functionSelector": "48aee8d4",
                "id": 171,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "4423:8:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 158,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4596:8:0"
                },
                "parameters": {
                  "id": 157,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "4448:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 171,
                      "src": "4441:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4441:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "4483:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 171,
                      "src": "4475:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4475:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 154,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "4524:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 171,
                      "src": "4509:26:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4509:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 156,
                      "mutability": "mutable",
                      "name": "hookMetadata",
                      "nameLocation": "4560:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 171,
                      "src": "4545:27:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 155,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4545:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4431:147:0"
                },
                "returnParameters": {
                  "id": 161,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 160,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 171,
                      "src": "4614:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4614:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4613:9:0"
                },
                "scope": 702,
                "src": "4414:424:0",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1199
                ],
                "body": {
                  "id": 194,
                  "nodeType": "Block",
                  "src": "5440:224:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 184,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "5500:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 185,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "5535:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 186,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 178,
                            "src": "5569:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 187,
                              "name": "messageBody",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 178,
                              "src": "5598:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "hexValue": "30",
                              "id": 189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5612:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "5598:16:0",
                            "startExpression": {
                              "hexValue": "30",
                              "id": 188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5610:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          },
                          {
                            "id": 191,
                            "name": "defaultHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "5632:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            },
                            {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          ],
                          "id": 183,
                          "name": "quoteDispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "5469:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_contract$_IPostDispatchHook_$1330_$returns$_t_uint256_$",
                            "typeString": "function (uint32,bytes32,bytes calldata,bytes calldata,contract IPostDispatchHook) view returns (uint256)"
                          }
                        },
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5469:188:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 182,
                      "id": 193,
                      "nodeType": "Return",
                      "src": "5450:207:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 172,
                  "nodeType": "StructuredDocumentation",
                  "src": "4844:422:0",
                  "text": " @notice Computes quote for dipatching a message to the destination domain & recipient\n using the default hook and empty metadata.\n @param destinationDomain Domain of destination chain\n @param recipientAddress Address of recipient on destination chain as bytes32\n @param messageBody Raw bytes content of message body\n @return fee The payment required to dispatch the message"
                },
                "functionSelector": "9c42bd18",
                "id": 195,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "5280:13:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 179,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 174,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "5310:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 195,
                      "src": "5303:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 173,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5303:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 176,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "5345:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 195,
                      "src": "5337:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5337:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "5386:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 195,
                      "src": "5371:26:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 177,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5371:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5293:110:0"
                },
                "returnParameters": {
                  "id": 182,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 181,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "5435:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 195,
                      "src": "5427:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 180,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5427:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5426:13:0"
                },
                "scope": 702,
                "src": "5271:393:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1225
                ],
                "body": {
                  "id": 217,
                  "nodeType": "Block",
                  "src": "6344:227:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 210,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "6404:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 211,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "6439:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 212,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "6473:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 213,
                            "name": "defaultHookMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 204,
                            "src": "6502:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 214,
                            "name": "defaultHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "6539:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          ],
                          "id": 209,
                          "name": "quoteDispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "6373:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_contract$_IPostDispatchHook_$1330_$returns$_t_uint256_$",
                            "typeString": "function (uint32,bytes32,bytes calldata,bytes calldata,contract IPostDispatchHook) view returns (uint256)"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6373:191:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 208,
                      "id": 216,
                      "nodeType": "Return",
                      "src": "6354:210:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 196,
                  "nodeType": "StructuredDocumentation",
                  "src": "5670:456:0",
                  "text": " @notice Computes quote for dispatching a message to the destination domain & recipient.\n @param destinationDomain Domain of destination chain\n @param recipientAddress Address of recipient on destination chain as bytes32\n @param messageBody Raw bytes content of message body\n @param defaultHookMetadata Metadata used by the default post dispatch hook\n @return fee The payment required to dispatch the message"
                },
                "functionSelector": "f7ccd321",
                "id": 218,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "6140:13:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 205,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "6170:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "6163:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6163:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "6205:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "6197:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6197:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "6246:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "6231:26:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6231:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "defaultHookMetadata",
                      "nameLocation": "6282:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "6267:34:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6267:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6153:154:0"
                },
                "returnParameters": {
                  "id": 208,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 207,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "6339:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 218,
                      "src": "6331:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 206,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6331:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6330:13:0"
                },
                "scope": 702,
                "src": "6131:440:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1264
                ],
                "body": {
                  "id": 328,
                  "nodeType": "Block",
                  "src": "7002:1314:0",
                  "statements": [
                    {
                      "documentation": "CHECKS ///",
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 228,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 223,
                                  "src": "7109:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7118:7:0",
                                "memberName": "version",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "7109:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint8_$attached_to$_t_bytes_calldata_ptr_$",
                                  "typeString": "function (bytes calldata) pure returns (uint8)"
                                }
                              },
                              "id": 230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7109:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 231,
                              "name": "VERSION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1941,
                              "src": "7131:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "7109:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a206261642076657273696f6e",
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7140:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1b9aed6030c03496ab5f00c4e52bd1bc733302676379701483400b3967af03dc",
                              "typeString": "literal_string \"Mailbox: bad version\""
                            },
                            "value": "Mailbox: bad version"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_1b9aed6030c03496ab5f00c4e52bd1bc733302676379701483400b3967af03dc",
                              "typeString": "literal_string \"Mailbox: bad version\""
                            }
                          ],
                          "id": 227,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7101:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7101:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 235,
                      "nodeType": "ExpressionStatement",
                      "src": "7101:62:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 237,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 223,
                                  "src": "7194:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7203:11:0",
                                "memberName": "destination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1530,
                                "src": "7194:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint32_$attached_to$_t_bytes_calldata_ptr_$",
                                  "typeString": "function (bytes calldata) pure returns (uint32)"
                                }
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7194:22:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 240,
                              "name": "localDomain",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "7220:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "src": "7194:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a20756e65787065637465642064657374696e6174696f6e",
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7245:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5206b540ce39517dcfc281fabef815c1e72c7e7b08213fafed9890df919395bc",
                              "typeString": "literal_string \"Mailbox: unexpected destination\""
                            },
                            "value": "Mailbox: unexpected destination"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5206b540ce39517dcfc281fabef815c1e72c7e7b08213fafed9890df919395bc",
                              "typeString": "literal_string \"Mailbox: unexpected destination\""
                            }
                          ],
                          "id": 236,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7173:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7173:115:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 244,
                      "nodeType": "ExpressionStatement",
                      "src": "7173:115:0"
                    },
                    {
                      "assignments": [
                        246
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 246,
                          "mutability": "mutable",
                          "name": "_id",
                          "nameLocation": "7372:3:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 328,
                          "src": "7364:11:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 245,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7364:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 250,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 247,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "7378:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7387:2:0",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1418,
                          "src": "7378:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$attached_to$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7378:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7364:27:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 253,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 246,
                                  "src": "7419:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 252,
                                "name": "delivered",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 538,
                                "src": "7409:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bool_$",
                                  "typeString": "function (bytes32) view returns (bool)"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7409:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "66616c7365",
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7427:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "src": "7409:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a20616c72656164792064656c697665726564",
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7434:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e069e8709b1019c7cf2bfdadd0ffc8c15e15599c2ca8aa23a98128ee80dfdcdd",
                              "typeString": "literal_string \"Mailbox: already delivered\""
                            },
                            "value": "Mailbox: already delivered"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e069e8709b1019c7cf2bfdadd0ffc8c15e15599c2ca8aa23a98128ee80dfdcdd",
                              "typeString": "literal_string \"Mailbox: already delivered\""
                            }
                          ],
                          "id": 251,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7401:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7401:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 259,
                      "nodeType": "ExpressionStatement",
                      "src": "7401:62:0"
                    },
                    {
                      "assignments": [
                        261
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 261,
                          "mutability": "mutable",
                          "name": "recipient",
                          "nameLocation": "7518:9:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 328,
                          "src": "7510:17:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 260,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7510:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 265,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 262,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 223,
                            "src": "7530:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7539:16:0",
                          "memberName": "recipientAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1562,
                          "src": "7530:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$attached_to$_t_bytes_calldata_ptr_$",
                            "typeString": "function (bytes calldata) pure returns (address)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7530:27:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7510:47:0"
                    },
                    {
                      "assignments": [
                        268
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 268,
                          "mutability": "mutable",
                          "name": "ism",
                          "nameLocation": "7593:3:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 328,
                          "src": "7567:29:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                            "typeString": "contract IInterchainSecurityModule"
                          },
                          "typeName": {
                            "id": 267,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 266,
                              "name": "IInterchainSecurityModule",
                              "nameLocations": [
                                "7567:25:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1099,
                              "src": "7567:25:0"
                            },
                            "referencedDeclaration": 1099,
                            "src": "7567:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                              "typeString": "contract IInterchainSecurityModule"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 272,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 270,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "7612:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 269,
                          "name": "recipientIsm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 675,
                          "src": "7599:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IInterchainSecurityModule_$1099_$",
                            "typeString": "function (address) view returns (contract IInterchainSecurityModule)"
                          }
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7599:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7567:55:0"
                    },
                    {
                      "documentation": "EFFECTS ///",
                      "expression": {
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 273,
                            "name": "deliveries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "7658:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Delivery_$59_storage_$",
                              "typeString": "mapping(bytes32 => struct Mailbox.Delivery storage ref)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "7669:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "7658:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delivery_$59_storage",
                            "typeString": "struct Mailbox.Delivery storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 277,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7710:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7714:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7710:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 281,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7754:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7760:6:0",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "7754:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7747:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint48_$",
                                  "typeString": "type(uint48)"
                                },
                                "typeName": {
                                  "id": 279,
                                  "name": "uint48",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7747:6:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 283,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7747:20:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint48",
                                "typeString": "uint48"
                              }
                            ],
                            "id": 276,
                            "name": "Delivery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "7676:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Delivery_$59_storage_ptr_$",
                              "typeString": "type(struct Mailbox.Delivery storage pointer)"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "7699:9:0",
                            "7734:11:0"
                          ],
                          "names": [
                            "processor",
                            "blockNumber"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "7676:102:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delivery_$59_memory_ptr",
                            "typeString": "struct Mailbox.Delivery memory"
                          }
                        },
                        "src": "7658:120:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Delivery_$59_storage",
                          "typeString": "struct Mailbox.Delivery storage ref"
                        }
                      },
                      "id": 286,
                      "nodeType": "ExpressionStatement",
                      "src": "7658:120:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 288,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "7801:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7810:6:0",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1478,
                              "src": "7801:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint32_$attached_to$_t_bytes_calldata_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (uint32)"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7801:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 291,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "7820:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7829:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1495,
                              "src": "7820:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_bytes_calldata_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (bytes32)"
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7820:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 294,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "7839:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 287,
                          "name": "Process",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1142,
                          "src": "7793:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (uint32,bytes32,address)"
                          }
                        },
                        "id": 295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7793:56:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 296,
                      "nodeType": "EmitStatement",
                      "src": "7788:61:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 298,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "7874:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 297,
                          "name": "ProcessId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1133,
                          "src": "7864:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32)"
                          }
                        },
                        "id": 299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7864:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 300,
                      "nodeType": "EmitStatement",
                      "src": "7859:19:0"
                    },
                    {
                      "documentation": "INTERACTIONS ///",
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 304,
                                "name": "_metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 221,
                                "src": "8017:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              {
                                "id": 305,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "8028:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "id": 302,
                                "name": "ism",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "8006:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                                  "typeString": "contract IInterchainSecurityModule"
                                }
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8010:6:0",
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1098,
                              "src": "8006:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                "typeString": "function (bytes memory,bytes memory) external returns (bool)"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8006:31:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a2049534d20766572696669636174696f6e206661696c6564",
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8051:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f698d647c839a72d7d7e46c0603df7e74456c194ee03cd79ff8ab1b45a1266cd",
                              "typeString": "literal_string \"Mailbox: ISM verification failed\""
                            },
                            "value": "Mailbox: ISM verification failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f698d647c839a72d7d7e46c0603df7e74456c194ee03cd79ff8ab1b45a1266cd",
                              "typeString": "literal_string \"Mailbox: ISM verification failed\""
                            }
                          ],
                          "id": 301,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7985:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7985:110:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 309,
                      "nodeType": "ExpressionStatement",
                      "src": "7985:110:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 317,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "8222:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8231:6:0",
                              "memberName": "origin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1478,
                              "src": "8222:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint32_$attached_to$_t_bytes_calldata_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (uint32)"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8222:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 320,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "8253:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8262:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1495,
                              "src": "8253:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_bytes_calldata_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (bytes32)"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8253:17:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 323,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "8284:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8293:4:0",
                              "memberName": "body",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1578,
                              "src": "8284:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes_calldata_ptr_$attached_to$_t_bytes_calldata_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (bytes calldata)"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8284:15:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 311,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "8173:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 310,
                                "name": "IMessageRecipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1285,
                                "src": "8155:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMessageRecipient_$1285_$",
                                  "typeString": "type(contract IMessageRecipient)"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8155:28:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMessageRecipient_$1285",
                                "typeString": "contract IMessageRecipient"
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8184:6:0",
                            "memberName": "handle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1284,
                            "src": "8155:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint32,bytes32,bytes memory) payable external"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "id": 314,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8198:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8202:5:0",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8198:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "8155:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_uint32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$value",
                            "typeString": "function (uint32,bytes32,bytes memory) payable external"
                          }
                        },
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8155:154:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 327,
                      "nodeType": "ExpressionStatement",
                      "src": "8155:154:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 219,
                  "nodeType": "StructuredDocumentation",
                  "src": "6577:304:0",
                  "text": " @notice Attempts to deliver `_message` to its recipient. Verifies\n `_message` via the recipient's ISM using the provided `_metadata`.\n @param _metadata Metadata used by the ISM to verify `_message`.\n @param _message Formatted Hyperlane message (refer to Message.sol)."
                },
                "functionSelector": "7c39d130",
                "id": 329,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "process",
                "nameLocation": "6895:7:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 225,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "6993:8:0"
                },
                "parameters": {
                  "id": 224,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "6927:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "6912:24:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6912:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "6961:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 329,
                      "src": "6946:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6946:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6902:73:0"
                },
                "returnParameters": {
                  "id": 226,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7002:0:0"
                },
                "scope": 702,
                "src": "6886:1430:0",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 342,
                  "nodeType": "Block",
                  "src": "8563:49:0",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 337,
                            "name": "deliveries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "8580:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Delivery_$59_storage_$",
                              "typeString": "mapping(bytes32 => struct Mailbox.Delivery storage ref)"
                            }
                          },
                          "id": 339,
                          "indexExpression": {
                            "id": 338,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 332,
                            "src": "8591:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8580:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delivery_$59_storage",
                            "typeString": "struct Mailbox.Delivery storage ref"
                          }
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8596:9:0",
                        "memberName": "processor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 56,
                        "src": "8580:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 336,
                      "id": 341,
                      "nodeType": "Return",
                      "src": "8573:32:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 330,
                  "nodeType": "StructuredDocumentation",
                  "src": "8322:172:0",
                  "text": " @notice Returns the account that processed the message.\n @param _id The message ID to check.\n @return The account that processed the message."
                },
                "functionSelector": "5d1fe5a9",
                "id": 343,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "processor",
                "nameLocation": "8508:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 333,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 332,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "8526:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "8518:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 331,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8518:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8517:13:0"
                },
                "returnParameters": {
                  "id": 336,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 343,
                      "src": "8554:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8554:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8553:9:0"
                },
                "scope": 702,
                "src": "8499:113:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 356,
                  "nodeType": "Block",
                  "src": "8879:51:0",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 351,
                            "name": "deliveries",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "8896:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Delivery_$59_storage_$",
                              "typeString": "mapping(bytes32 => struct Mailbox.Delivery storage ref)"
                            }
                          },
                          "id": 353,
                          "indexExpression": {
                            "id": 352,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "8907:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8896:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Delivery_$59_storage",
                            "typeString": "struct Mailbox.Delivery storage ref"
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8912:11:0",
                        "memberName": "blockNumber",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58,
                        "src": "8896:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "functionReturnParameters": 350,
                      "id": 355,
                      "nodeType": "Return",
                      "src": "8889:34:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 344,
                  "nodeType": "StructuredDocumentation",
                  "src": "8618:191:0",
                  "text": " @notice Returns the account that processed the message.\n @param _id The message ID to check.\n @return The number of the block that the message was processed at."
                },
                "functionSelector": "07a2fda1",
                "id": 357,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "processedAt",
                "nameLocation": "8823:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 347,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "8843:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "8835:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8835:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8834:13:0"
                },
                "returnParameters": {
                  "id": 350,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 349,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 357,
                      "src": "8871:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint48",
                        "typeString": "uint48"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "uint48",
                        "nodeType": "ElementaryTypeName",
                        "src": "8871:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8870:8:0"
                },
                "scope": 702,
                "src": "8814:116:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1241
                ],
                "body": {
                  "id": 467,
                  "nodeType": "Block",
                  "src": "9710:978:0",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 376,
                              "name": "hook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "9732:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            ],
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9724:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 374,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9724:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9724:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9749:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9741:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 378,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9741:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9741:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9724:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 388,
                      "nodeType": "IfStatement",
                      "src": "9720:76:0",
                      "trueBody": {
                        "id": 387,
                        "nodeType": "Block",
                        "src": "9753:43:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 383,
                                "name": "hook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 369,
                                "src": "9767:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                  "typeString": "contract IPostDispatchHook"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 384,
                                "name": "defaultHook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "9774:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                  "typeString": "contract IPostDispatchHook"
                                }
                              },
                              "src": "9767:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            },
                            "id": 386,
                            "nodeType": "ExpressionStatement",
                            "src": "9767:18:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        391
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 391,
                          "mutability": "mutable",
                          "name": "message",
                          "nameLocation": "9892:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 467,
                          "src": "9879:20:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 390,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9879:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "documentation": "CHECKS ///",
                      "id": 397,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 393,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "9929:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 394,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "9960:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 395,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "9990:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 392,
                          "name": "_buildMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "9902:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint32,bytes32,bytes calldata) view returns (bytes memory)"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9902:109:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9879:132:0"
                    },
                    {
                      "assignments": [
                        399
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 399,
                          "mutability": "mutable",
                          "name": "id",
                          "nameLocation": "10029:2:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 467,
                          "src": "10021:10:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 398,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10021:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 403,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 400,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "10034:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10042:2:0",
                          "memberName": "id",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1418,
                          "src": "10034:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$attached_to$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10034:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10021:25:0"
                    },
                    {
                      "documentation": "EFFECTS ///",
                      "expression": {
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 404,
                          "name": "latestDispatchedId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "10082:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 405,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "10103:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10082:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 407,
                      "nodeType": "ExpressionStatement",
                      "src": "10082:23:0"
                    },
                    {
                      "expression": {
                        "id": 410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 408,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "10115:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10124:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10115:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 411,
                      "nodeType": "ExpressionStatement",
                      "src": "10115:10:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 413,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10149:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10153:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10149:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 415,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "10161:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 416,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "10180:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 417,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "10198:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 412,
                          "name": "Dispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1123,
                          "src": "10140:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint32_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (address,uint32,bytes32,bytes memory)"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10140:66:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 419,
                      "nodeType": "EmitStatement",
                      "src": "10135:71:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 421,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "10232:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 420,
                          "name": "DispatchId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "10221:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                            "typeString": "function (bytes32)"
                          }
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10221:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 423,
                      "nodeType": "EmitStatement",
                      "src": "10216:19:0"
                    },
                    {
                      "assignments": [
                        426
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 426,
                          "mutability": "mutable",
                          "name": "requiredValue",
                          "nameLocation": "10283:13:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 467,
                          "src": "10275:21:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 425,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10275:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "documentation": "INTERACTIONS ///",
                      "id": 432,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 429,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "10326:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 430,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "10336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 427,
                            "name": "requiredHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "10299:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10312:13:0",
                          "memberName": "quoteDispatch",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1329,
                          "src": "10299:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes memory,bytes memory) view external returns (uint256)"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10299:45:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "10275:69:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 433,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10429:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10433:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10429:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 435,
                          "name": "requiredValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 426,
                          "src": "10441:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10429:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 443,
                      "nodeType": "IfStatement",
                      "src": "10425:81:0",
                      "trueBody": {
                        "id": 442,
                        "nodeType": "Block",
                        "src": "10456:50:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 437,
                                "name": "requiredValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 426,
                                "src": "10470:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "id": 438,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10486:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10490:5:0",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "10486:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10470:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 441,
                            "nodeType": "ExpressionStatement",
                            "src": "10470:25:0"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 449,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "10563:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 450,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "10573:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 444,
                              "name": "requiredHook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "10515:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10528:12:0",
                            "memberName": "postDispatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1319,
                            "src": "10515:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory) payable external"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 447,
                              "name": "requiredValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "10548:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "10515:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$value",
                            "typeString": "function (bytes memory,bytes memory) payable external"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10515:66:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 452,
                      "nodeType": "ExpressionStatement",
                      "src": "10515:66:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 461,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "10643:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 462,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "10653:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 453,
                              "name": "hook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 369,
                              "src": "10591:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            },
                            "id": 455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10596:12:0",
                            "memberName": "postDispatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1319,
                            "src": "10591:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory) payable external"
                            }
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 456,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "10616:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10620:5:0",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "10616:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 458,
                                "name": "requiredValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 426,
                                "src": "10628:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10616:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "10591:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$value",
                            "typeString": "function (bytes memory,bytes memory) payable external"
                          }
                        },
                        "id": 463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10591:70:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 464,
                      "nodeType": "ExpressionStatement",
                      "src": "10591:70:0"
                    },
                    {
                      "expression": {
                        "id": 465,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "10679:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 373,
                      "id": 466,
                      "nodeType": "Return",
                      "src": "10672:9:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 358,
                  "nodeType": "StructuredDocumentation",
                  "src": "8987:484:0",
                  "text": " @notice Dispatches a message to the destination domain & recipient.\n @param destinationDomain Domain of destination chain\n @param recipientAddress Address of recipient on destination chain as bytes32\n @param messageBody Raw bytes content of message body\n @param metadata Metadata used by the post dispatch hook\n @param hook Custom hook to use instead of the default\n @return The message ID inserted into the Mailbox's merkle tree"
                },
                "functionSelector": "10b83dc0",
                "id": 468,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "9485:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 370,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "9510:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "9503:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9503:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "9545:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "9537:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9537:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "9586:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "9571:26:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9571:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "9622:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "9607:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 365,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "9607:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 369,
                      "mutability": "mutable",
                      "name": "hook",
                      "nameLocation": "9658:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "9640:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 368,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 367,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "9640:17:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "9640:17:0"
                        },
                        "referencedDeclaration": 1330,
                        "src": "9640:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9493:175:0"
                },
                "returnParameters": {
                  "id": 373,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 372,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 468,
                      "src": "9701:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 371,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9701:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9700:9:0"
                },
                "scope": 702,
                "src": "9476:1212:0",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1257
                ],
                "body": {
                  "id": 520,
                  "nodeType": "Block",
                  "src": "11429:361:0",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 487,
                              "name": "hook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "11451:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            ],
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11443:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 485,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11443:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11443:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11468:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11460:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 489,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11460:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11460:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11443:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 499,
                      "nodeType": "IfStatement",
                      "src": "11439:76:0",
                      "trueBody": {
                        "id": 498,
                        "nodeType": "Block",
                        "src": "11472:43:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 494,
                                "name": "hook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 480,
                                "src": "11486:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                  "typeString": "contract IPostDispatchHook"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 495,
                                "name": "defaultHook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 51,
                                "src": "11493:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                  "typeString": "contract IPostDispatchHook"
                                }
                              },
                              "src": "11486:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            },
                            "id": 497,
                            "nodeType": "ExpressionStatement",
                            "src": "11486:18:0"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        501
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 501,
                          "mutability": "mutable",
                          "name": "message",
                          "nameLocation": "11538:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 520,
                          "src": "11525:20:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 500,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "11525:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 507,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 503,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "11575:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 504,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 473,
                            "src": "11606:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 505,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "11636:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 502,
                          "name": "_buildMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "11548:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint32,bytes32,bytes calldata) view returns (bytes memory)"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11548:109:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "11525:132:0"
                    },
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 510,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 477,
                              "src": "11713:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 511,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "11723:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 508,
                              "name": "requiredHook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54,
                              "src": "11686:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            },
                            "id": 509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11699:13:0",
                            "memberName": "quoteDispatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1329,
                            "src": "11686:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory,bytes memory) view external returns (uint256)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11686:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 477,
                              "src": "11765:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 516,
                              "name": "message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "11775:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 513,
                              "name": "hook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "11746:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                                "typeString": "contract IPostDispatchHook"
                              }
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11751:13:0",
                            "memberName": "quoteDispatch",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1329,
                            "src": "11746:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory,bytes memory) view external returns (uint256)"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11746:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11686:97:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 484,
                      "id": 519,
                      "nodeType": "Return",
                      "src": "11667:116:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 469,
                  "nodeType": "StructuredDocumentation",
                  "src": "10694:498:0",
                  "text": " @notice Computes quote for dispatching a message to the destination domain & recipient.\n @param destinationDomain Domain of destination chain\n @param recipientAddress Address of recipient on destination chain as bytes32\n @param messageBody Raw bytes content of message body\n @param metadata Metadata used by the post dispatch hook\n @param hook Custom hook to use instead of the default\n @return fee The payment required to dispatch the message"
                },
                "functionSelector": "81d2ea95",
                "id": 521,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "11206:13:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 481,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 471,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "11236:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "11229:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 470,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11229:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 473,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "11271:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "11263:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 472,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11263:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 475,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "11312:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "11297:26:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 474,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11297:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 477,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "11348:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "11333:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 476,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11333:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 480,
                      "mutability": "mutable",
                      "name": "hook",
                      "nameLocation": "11384:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "11366:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 479,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 478,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "11366:17:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "11366:17:0"
                        },
                        "referencedDeclaration": 1330,
                        "src": "11366:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11219:175:0"
                },
                "returnParameters": {
                  "id": 484,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 483,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "11424:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "11416:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 482,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11416:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11415:13:0"
                },
                "scope": 702,
                "src": "11197:593:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1154
                ],
                "body": {
                  "id": 537,
                  "nodeType": "Block",
                  "src": "12041:55:0",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint48",
                          "typeString": "uint48"
                        },
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 530,
                              "name": "deliveries",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "12058:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Delivery_$59_storage_$",
                                "typeString": "mapping(bytes32 => struct Mailbox.Delivery storage ref)"
                              }
                            },
                            "id": 532,
                            "indexExpression": {
                              "id": 531,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "12069:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12058:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Delivery_$59_storage",
                              "typeString": "struct Mailbox.Delivery storage ref"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12074:11:0",
                          "memberName": "blockNumber",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "12058:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint48",
                            "typeString": "uint48"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12088:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12058:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 529,
                      "id": 536,
                      "nodeType": "Return",
                      "src": "12051:38:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 522,
                  "nodeType": "StructuredDocumentation",
                  "src": "11796:172:0",
                  "text": " @notice Returns true if the message has been processed.\n @param _id The message ID to check.\n @return True if the message has been delivered."
                },
                "functionSelector": "e495f1d4",
                "id": 538,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "delivered",
                "nameLocation": "11982:9:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 526,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "12017:8:0"
                },
                "parameters": {
                  "id": 525,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 524,
                      "mutability": "mutable",
                      "name": "_id",
                      "nameLocation": "12000:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 538,
                      "src": "11992:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 523,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11991:13:0"
                },
                "returnParameters": {
                  "id": 529,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 528,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 538,
                      "src": "12035:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 527,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12035:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12034:6:0"
                },
                "scope": 702,
                "src": "11973:123:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 564,
                  "nodeType": "Block",
                  "src": "12291:218:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 549,
                                "name": "_module",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 541,
                                "src": "12341:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 547,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "12322:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$2955_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12330:10:0",
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2643,
                              "src": "12322:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12322:27:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a2064656661756c742049534d206e6f7420636f6e7472616374",
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12363:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_914622a3001c51f20721d2855b8baff860aff38c0b7c62e369d1616fde9ad5ff",
                              "typeString": "literal_string \"Mailbox: default ISM not contract\""
                            },
                            "value": "Mailbox: default ISM not contract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_914622a3001c51f20721d2855b8baff860aff38c0b7c62e369d1616fde9ad5ff",
                              "typeString": "literal_string \"Mailbox: default ISM not contract\""
                            }
                          ],
                          "id": 546,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "12301:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12301:107:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 553,
                      "nodeType": "ExpressionStatement",
                      "src": "12301:107:0"
                    },
                    {
                      "expression": {
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 554,
                          "name": "defaultIsm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "12418:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                            "typeString": "contract IInterchainSecurityModule"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 556,
                              "name": "_module",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "12457:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 555,
                            "name": "IInterchainSecurityModule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1099,
                            "src": "12431:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IInterchainSecurityModule_$1099_$",
                              "typeString": "type(contract IInterchainSecurityModule)"
                            }
                          },
                          "id": 557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12431:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                            "typeString": "contract IInterchainSecurityModule"
                          }
                        },
                        "src": "12418:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "id": 559,
                      "nodeType": "ExpressionStatement",
                      "src": "12418:47:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 561,
                            "name": "_module",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "12494:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 560,
                          "name": "DefaultIsmSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69,
                          "src": "12480:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12480:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 563,
                      "nodeType": "EmitStatement",
                      "src": "12475:27:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 539,
                  "nodeType": "StructuredDocumentation",
                  "src": "12102:127:0",
                  "text": " @notice Sets the default ISM for the Mailbox.\n @param _module The new default ISM. Must be a contract."
                },
                "functionSelector": "f794687a",
                "id": 565,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 544,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 543,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "12281:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1989,
                      "src": "12281:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "12281:9:0"
                  }
                ],
                "name": "setDefaultIsm",
                "nameLocation": "12243:13:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 542,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "_module",
                      "nameLocation": "12265:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 565,
                      "src": "12257:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12257:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12256:17:0"
                },
                "returnParameters": {
                  "id": 545,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12291:0:0"
                },
                "scope": 702,
                "src": "12234:275:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 591,
                  "nodeType": "Block",
                  "src": "12731:207:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 576,
                                "name": "_hook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 568,
                                "src": "12781:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 574,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "12762:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$2955_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12770:10:0",
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2643,
                              "src": "12762:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12762:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e7472616374",
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12801:36:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_e320cda6a47d6f36faf5d4d757de32b78f19e3e5ac0c21a40dd51198b9231ae2",
                              "typeString": "literal_string \"Mailbox: default hook not contract\""
                            },
                            "value": "Mailbox: default hook not contract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_e320cda6a47d6f36faf5d4d757de32b78f19e3e5ac0c21a40dd51198b9231ae2",
                              "typeString": "literal_string \"Mailbox: default hook not contract\""
                            }
                          ],
                          "id": 573,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "12741:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12741:106:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 580,
                      "nodeType": "ExpressionStatement",
                      "src": "12741:106:0"
                    },
                    {
                      "expression": {
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 581,
                          "name": "defaultHook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "12857:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                            "typeString": "contract IPostDispatchHook"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 583,
                              "name": "_hook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "12889:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 582,
                            "name": "IPostDispatchHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "12871:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPostDispatchHook_$1330_$",
                              "typeString": "type(contract IPostDispatchHook)"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12871:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                            "typeString": "contract IPostDispatchHook"
                          }
                        },
                        "src": "12857:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "id": 586,
                      "nodeType": "ExpressionStatement",
                      "src": "12857:38:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 588,
                            "name": "_hook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 568,
                            "src": "12925:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 587,
                          "name": "DefaultHookSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "12910:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12910:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 590,
                      "nodeType": "EmitStatement",
                      "src": "12905:26:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 566,
                  "nodeType": "StructuredDocumentation",
                  "src": "12515:155:0",
                  "text": " @notice Sets the default post dispatch hook for the Mailbox.\n @param _hook The new default post dispatch hook. Must be a contract."
                },
                "functionSelector": "99b04809",
                "id": 592,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 571,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 570,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "12721:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1989,
                      "src": "12721:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "12721:9:0"
                  }
                ],
                "name": "setDefaultHook",
                "nameLocation": "12684:14:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 569,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 568,
                      "mutability": "mutable",
                      "name": "_hook",
                      "nameLocation": "12707:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 592,
                      "src": "12699:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12699:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12698:15:0"
                },
                "returnParameters": {
                  "id": 572,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12731:0:0"
                },
                "scope": 702,
                "src": "12675:263:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 618,
                  "nodeType": "Block",
                  "src": "13162:210:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 603,
                                "name": "_hook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 595,
                                "src": "13212:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 601,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2955,
                                "src": "13193:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$2955_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13201:10:0",
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2643,
                              "src": "13193:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13193:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e7472616374",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13232:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6a3cf5c5d9d28364173ad01fc7c63b65cf3914bf9297e9f8c70410e713380588",
                              "typeString": "literal_string \"Mailbox: required hook not contract\""
                            },
                            "value": "Mailbox: required hook not contract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6a3cf5c5d9d28364173ad01fc7c63b65cf3914bf9297e9f8c70410e713380588",
                              "typeString": "literal_string \"Mailbox: required hook not contract\""
                            }
                          ],
                          "id": 600,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "13172:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13172:107:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 607,
                      "nodeType": "ExpressionStatement",
                      "src": "13172:107:0"
                    },
                    {
                      "expression": {
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 608,
                          "name": "requiredHook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "13289:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                            "typeString": "contract IPostDispatchHook"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 610,
                              "name": "_hook",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "13322:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 609,
                            "name": "IPostDispatchHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1330,
                            "src": "13304:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IPostDispatchHook_$1330_$",
                              "typeString": "type(contract IPostDispatchHook)"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13304:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                            "typeString": "contract IPostDispatchHook"
                          }
                        },
                        "src": "13289:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "id": 613,
                      "nodeType": "ExpressionStatement",
                      "src": "13289:39:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 615,
                            "name": "_hook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 595,
                            "src": "13359:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 614,
                          "name": "RequiredHookSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "13343:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13343:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 617,
                      "nodeType": "EmitStatement",
                      "src": "13338:27:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 593,
                  "nodeType": "StructuredDocumentation",
                  "src": "12944:156:0",
                  "text": " @notice Sets the required post dispatch hook for the Mailbox.\n @param _hook The new default post dispatch hook. Must be a contract."
                },
                "functionSelector": "1426b7f4",
                "id": 619,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 598,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 597,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "13152:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1989,
                      "src": "13152:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "13152:9:0"
                  }
                ],
                "name": "setRequiredHook",
                "nameLocation": "13114:15:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 596,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "_hook",
                      "nameLocation": "13138:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "13130:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13130:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13129:15:0"
                },
                "returnParameters": {
                  "id": 599,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13162:0:0"
                },
                "scope": 702,
                "src": "13105:267:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1272
                ],
                "body": {
                  "id": 674,
                  "nodeType": "Block",
                  "src": "13739:792:0",
                  "statements": [
                    {
                      "assignments": [
                        629,
                        631
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 629,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "13830:7:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 674,
                          "src": "13825:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 628,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "13825:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 631,
                          "mutability": "mutable",
                          "name": "returnData",
                          "nameLocation": "13852:10:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 674,
                          "src": "13839:23:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 630,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "13839:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 641,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 636,
                                  "name": "ISpecifiesInterchainSecurityModule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1106,
                                  "src": "13933:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISpecifiesInterchainSecurityModule_$1106_$",
                                    "typeString": "type(contract ISpecifiesInterchainSecurityModule)"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "13968:24:0",
                                "memberName": "interchainSecurityModule",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1105,
                                "src": "13933:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_declaration_view$__$returns$_t_contract$_IInterchainSecurityModule_$1099_$",
                                  "typeString": "function ISpecifiesInterchainSecurityModule.interchainSecurityModule() view returns (contract IInterchainSecurityModule)"
                                }
                              },
                              {
                                "components": [],
                                "id": 638,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14010:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_function_declaration_view$__$returns$_t_contract$_IInterchainSecurityModule_$1099_$",
                                  "typeString": "function ISpecifiesInterchainSecurityModule.interchainSecurityModule() view returns (contract IInterchainSecurityModule)"
                                },
                                {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              ],
                              "expression": {
                                "id": 634,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "13901:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "13905:10:0",
                              "memberName": "encodeCall",
                              "nodeType": "MemberAccess",
                              "src": "13901:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13901:125:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 632,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "13866:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13877:10:0",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "13866:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13866:170:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "13824:212:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 642,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 629,
                          "src": "14108:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 643,
                              "name": "returnData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "14119:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14130:6:0",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14119:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14140:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14119:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14108:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 671,
                      "nodeType": "IfStatement",
                      "src": "14104:317:0",
                      "trueBody": {
                        "id": 670,
                        "nodeType": "Block",
                        "src": "14143:278:0",
                        "statements": [
                          {
                            "assignments": [
                              649
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 649,
                                "mutability": "mutable",
                                "name": "ism",
                                "nameLocation": "14219:3:0",
                                "nodeType": "VariableDeclaration",
                                "scope": 670,
                                "src": "14211:11:0",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "typeName": {
                                  "id": 648,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14211:7:0",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 657,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 652,
                                  "name": "returnData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 631,
                                  "src": "14236:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 654,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14249:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 653,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14249:7:0",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 655,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "14248:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  }
                                ],
                                "expression": {
                                  "id": 650,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "14225:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "14229:6:0",
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "14225:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14225:33:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "14211:47:0"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 658,
                                "name": "ism",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 649,
                                "src": "14322:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 661,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14337:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14329:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 659,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14329:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14329:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14322:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 669,
                            "nodeType": "IfStatement",
                            "src": "14318:93:0",
                            "trueBody": {
                              "id": 668,
                              "nodeType": "Block",
                              "src": "14341:70:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 665,
                                        "name": "ism",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 649,
                                        "src": "14392:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 664,
                                      "name": "IInterchainSecurityModule",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1099,
                                      "src": "14366:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IInterchainSecurityModule_$1099_$",
                                        "typeString": "type(contract IInterchainSecurityModule)"
                                      }
                                    },
                                    "id": 666,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14366:30:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                                      "typeString": "contract IInterchainSecurityModule"
                                    }
                                  },
                                  "functionReturnParameters": 627,
                                  "id": 667,
                                  "nodeType": "Return",
                                  "src": "14359:37:0"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 672,
                        "name": "defaultIsm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "14514:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "functionReturnParameters": 627,
                      "id": 673,
                      "nodeType": "Return",
                      "src": "14507:17:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 620,
                  "nodeType": "StructuredDocumentation",
                  "src": "13378:252:0",
                  "text": " @notice Returns the ISM to use for the recipient, defaulting to the\n default ISM if none is specified.\n @param _recipient The message recipient whose ISM should be returned.\n @return The ISM to use for `_recipient`."
                },
                "functionSelector": "e70f48ac",
                "id": 675,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "recipientIsm",
                "nameLocation": "13644:12:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 623,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 622,
                      "mutability": "mutable",
                      "name": "_recipient",
                      "nameLocation": "13674:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "13666:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 621,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13666:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13656:34:0"
                },
                "returnParameters": {
                  "id": 627,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 675,
                      "src": "13712:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                        "typeString": "contract IInterchainSecurityModule"
                      },
                      "typeName": {
                        "id": 625,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 624,
                          "name": "IInterchainSecurityModule",
                          "nameLocations": [
                            "13712:25:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1099,
                          "src": "13712:25:0"
                        },
                        "referencedDeclaration": 1099,
                        "src": "13712:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13711:27:0"
                },
                "scope": 702,
                "src": "13635:896:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 700,
                  "nodeType": "Block",
                  "src": "14759:293:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 688,
                            "name": "VERSION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1941,
                            "src": "14827:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 689,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43,
                            "src": "14852:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 690,
                            "name": "localDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "14875:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "expression": {
                                  "id": 691,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14904:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14908:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "14904:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14915:16:0",
                              "memberName": "addressToBytes32",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1600,
                              "src": "14904:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$attached_to$_t_address_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14904:29:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 695,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "14951:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 696,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 679,
                            "src": "14986:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 697,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "15020:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 686,
                            "name": "Message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1579,
                            "src": "14788:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Message_$1579_$",
                              "typeString": "type(library Message)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14796:13:0",
                          "memberName": "formatMessage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1405,
                          "src": "14788:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint32_$_t_uint32_$_t_bytes32_$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint8,uint32,uint32,bytes32,uint32,bytes32,bytes calldata) pure returns (bytes memory)"
                          }
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14788:257:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 685,
                      "id": 699,
                      "nodeType": "Return",
                      "src": "14769:276:0"
                    }
                  ]
                },
                "id": 701,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_buildMessage",
                "nameLocation": "14598:13:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 682,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "14628:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "14621:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 676,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14621:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 679,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "14663:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "14655:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 678,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14655:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 681,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "14704:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "14689:26:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 680,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14689:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14611:110:0"
                },
                "returnParameters": {
                  "id": 685,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 684,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 701,
                      "src": "14745:12:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 683,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14745:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "14744:14:0"
                },
                "scope": 702,
                "src": "14589:463:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 703,
            "src": "842:14212:0",
            "usedErrors": []
          }
        ],
        "src": "46:15009:0"
      }
    },
    "contracts/hooks/libs/AbstractPostDispatchHook.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "contracts/hooks/libs/AbstractPostDispatchHook.sol",
        "exportedSymbols": {
          "AbstractPostDispatchHook": [
            801
          ],
          "IPostDispatchHook": [
            1330
          ],
          "StandardHookMetadata": [
            1071
          ]
        },
        "id": 802,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 704,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:1"
          },
          {
            "absolutePath": "contracts/hooks/libs/StandardHookMetadata.sol",
            "file": "./StandardHookMetadata.sol",
            "id": 706,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 802,
            "sourceUnit": 1072,
            "src": "431:64:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 705,
                  "name": "StandardHookMetadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1071,
                  "src": "439:20:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/hooks/IPostDispatchHook.sol",
            "file": "../../interfaces/hooks/IPostDispatchHook.sol",
            "id": 708,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 802,
            "sourceUnit": 1331,
            "src": "496:79:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 707,
                  "name": "IPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1330,
                  "src": "504:17:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 710,
                  "name": "IPostDispatchHook",
                  "nameLocations": [
                    "754:17:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1330,
                  "src": "754:17:1"
                },
                "id": 711,
                "nodeType": "InheritanceSpecifier",
                "src": "754:17:1"
              }
            ],
            "canonicalName": "AbstractPostDispatchHook",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 709,
              "nodeType": "StructuredDocumentation",
              "src": "577:130:1",
              "text": " @title AbstractPostDispatch\n @notice Abstract post dispatch hook supporting the current global hook metadata variant."
            },
            "fullyImplemented": false,
            "id": 801,
            "linearizedBaseContracts": [
              801,
              1330
            ],
            "name": "AbstractPostDispatchHook",
            "nameLocation": "726:24:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "global": false,
                "id": 714,
                "libraryName": {
                  "id": 712,
                  "name": "StandardHookMetadata",
                  "nameLocations": [
                    "784:20:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1071,
                  "src": "784:20:1"
                },
                "nodeType": "UsingForDirective",
                "src": "778:37:1",
                "typeName": {
                  "id": 713,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              },
              {
                "baseFunctions": [
                  1311
                ],
                "body": {
                  "id": 735,
                  "nodeType": "Block",
                  "src": "1021:122:1",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 723,
                              "name": "metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "1050:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1059:6:1",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1050:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1069:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1050:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 727,
                                "name": "metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 717,
                                "src": "1086:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1095:7:1",
                              "memberName": "variant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 862,
                              "src": "1086:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_uint16_$attached_to$_t_bytes_calldata_ptr_$",
                                "typeString": "function (bytes calldata) pure returns (uint16)"
                              }
                            },
                            "id": 729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1086:18:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 730,
                              "name": "StandardHookMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "1108:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StandardHookMetadata_$1071_$",
                                "typeString": "type(library StandardHookMetadata)"
                              }
                            },
                            "id": 731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1129:7:1",
                            "memberName": "VARIANT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 831,
                            "src": "1108:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "1086:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1050:86:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 722,
                      "id": 734,
                      "nodeType": "Return",
                      "src": "1031:105:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 715,
                  "nodeType": "StructuredDocumentation",
                  "src": "874:33:1",
                  "text": "@inheritdoc IPostDispatchHook"
                },
                "functionSelector": "e5320bb9",
                "id": 736,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsMetadata",
                "nameLocation": "921:16:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 719,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "997:8:1"
                },
                "parameters": {
                  "id": 718,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 717,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "962:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 736,
                      "src": "947:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 716,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "947:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "937:39:1"
                },
                "returnParameters": {
                  "id": 722,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 721,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 736,
                      "src": "1015:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 720,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1015:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1014:6:1"
                },
                "scope": 801,
                "src": "912:231:1",
                "stateMutability": "pure",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1319
                ],
                "body": {
                  "id": 757,
                  "nodeType": "Block",
                  "src": "1306:182:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 747,
                                "name": "metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 739,
                                "src": "1354:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 746,
                              "name": "supportsMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "1337:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (bytes calldata) pure returns (bool)"
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1337:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6964206d657461646174612076617269616e74",
                            "id": 749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1377:52:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f2dabc271bac455eedda3a53347238bedb042da35e573fcfe8668404e12e17c6",
                              "typeString": "literal_string \"AbstractPostDispatchHook: invalid metadata variant\""
                            },
                            "value": "AbstractPostDispatchHook: invalid metadata variant"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f2dabc271bac455eedda3a53347238bedb042da35e573fcfe8668404e12e17c6",
                              "typeString": "literal_string \"AbstractPostDispatchHook: invalid metadata variant\""
                            }
                          ],
                          "id": 745,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1316:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1316:123:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 751,
                      "nodeType": "ExpressionStatement",
                      "src": "1316:123:1"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 753,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "1463:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 754,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 741,
                            "src": "1473:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 752,
                          "name": "_postDispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 790,
                          "src": "1449:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$returns$__$",
                            "typeString": "function (bytes calldata,bytes calldata)"
                          }
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1449:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 756,
                      "nodeType": "ExpressionStatement",
                      "src": "1449:32:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 737,
                  "nodeType": "StructuredDocumentation",
                  "src": "1149:33:1",
                  "text": "@inheritdoc IPostDispatchHook"
                },
                "functionSelector": "086011b9",
                "id": 758,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "postDispatch",
                "nameLocation": "1196:12:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 743,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1297:8:1"
                },
                "parameters": {
                  "id": 742,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 739,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "1233:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "1218:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 738,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1218:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 741,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1266:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 758,
                      "src": "1251:22:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 740,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1251:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1208:71:1"
                },
                "returnParameters": {
                  "id": 744,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1306:0:1"
                },
                "scope": 801,
                "src": "1187:301:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1329
                ],
                "body": {
                  "id": 781,
                  "nodeType": "Block",
                  "src": "1665:190:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 771,
                                "name": "metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 761,
                                "src": "1713:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 770,
                              "name": "supportsMetadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "1696:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bool_$",
                                "typeString": "function (bytes calldata) pure returns (bool)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1696:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4162737472616374506f73744469737061746368486f6f6b3a20696e76616c6964206d657461646174612076617269616e74",
                            "id": 773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1736:52:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f2dabc271bac455eedda3a53347238bedb042da35e573fcfe8668404e12e17c6",
                              "typeString": "literal_string \"AbstractPostDispatchHook: invalid metadata variant\""
                            },
                            "value": "AbstractPostDispatchHook: invalid metadata variant"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f2dabc271bac455eedda3a53347238bedb042da35e573fcfe8668404e12e17c6",
                              "typeString": "literal_string \"AbstractPostDispatchHook: invalid metadata variant\""
                            }
                          ],
                          "id": 769,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1675:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1675:123:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 775,
                      "nodeType": "ExpressionStatement",
                      "src": "1675:123:1"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 777,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "1830:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 778,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "1840:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 776,
                          "name": "_quoteDispatch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 800,
                          "src": "1815:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_uint256_$",
                            "typeString": "function (bytes calldata,bytes calldata) view returns (uint256)"
                          }
                        },
                        "id": 779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:33:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 768,
                      "id": 780,
                      "nodeType": "Return",
                      "src": "1808:40:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 759,
                  "nodeType": "StructuredDocumentation",
                  "src": "1494:33:1",
                  "text": "@inheritdoc IPostDispatchHook"
                },
                "functionSelector": "aaccd230",
                "id": 782,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "1541:13:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 765,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1638:8:1"
                },
                "parameters": {
                  "id": 764,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "1579:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "1564:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1612:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "1597:22:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1597:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1554:71:1"
                },
                "returnParameters": {
                  "id": 768,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 782,
                      "src": "1656:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 766,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1656:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1655:9:1"
                },
                "scope": 801,
                "src": "1532:323:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "documentation": {
                  "id": 783,
                  "nodeType": "StructuredDocumentation",
                  "src": "1914:182:1",
                  "text": " @notice Post dispatch hook implementation.\n @param metadata The metadata of the message being dispatched.\n @param message The message being dispatched."
                },
                "id": 790,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "_postDispatch",
                "nameLocation": "2110:13:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 788,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 785,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "2148:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 790,
                      "src": "2133:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2133:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 787,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "2181:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 790,
                      "src": "2166:22:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 786,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2166:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2123:71:1"
                },
                "returnParameters": {
                  "id": 789,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2211:0:1"
                },
                "scope": 801,
                "src": "2101:111:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "documentation": {
                  "id": 791,
                  "nodeType": "StructuredDocumentation",
                  "src": "2218:226:1",
                  "text": " @notice Quote dispatch hook implementation.\n @param metadata The metadata of the message being dispatched.\n @param message The message being dispatched.\n @return The quote for the dispatch."
                },
                "id": 800,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "_quoteDispatch",
                "nameLocation": "2458:14:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 796,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 793,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "2497:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 800,
                      "src": "2482:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 792,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2482:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 795,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "2530:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 800,
                      "src": "2515:22:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 794,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2515:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2472:71:1"
                },
                "returnParameters": {
                  "id": 799,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 800,
                      "src": "2575:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2575:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2574:9:1"
                },
                "scope": 801,
                "src": "2449:135:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 802,
            "src": "708:1878:1",
            "usedErrors": []
          }
        ],
        "src": "46:2541:1"
      }
    },
    "contracts/hooks/libs/StandardHookMetadata.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "contracts/hooks/libs/StandardHookMetadata.sol",
        "exportedSymbols": {
          "StandardHookMetadata": [
            1071
          ]
        },
        "id": 1072,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 803,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:2"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "StandardHookMetadata",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 804,
              "nodeType": "StructuredDocumentation",
              "src": "385:178:2",
              "text": " Format of metadata:\n [0:2] variant\n [2:34] msg.value\n [34:66] Gas limit for message (IGP)\n [66:86] Refund address for message (IGP)\n [86:] Custom metadata"
            },
            "fullyImplemented": true,
            "id": 1071,
            "linearizedBaseContracts": [
              1071
            ],
            "name": "StandardHookMetadata",
            "nameLocation": "572:20:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "StandardHookMetadata.Metadata",
                "id": 813,
                "members": [
                  {
                    "constant": false,
                    "id": 806,
                    "mutability": "mutable",
                    "name": "variant",
                    "nameLocation": "632:7:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 813,
                    "src": "625:14:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 805,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "625:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 808,
                    "mutability": "mutable",
                    "name": "msgValue",
                    "nameLocation": "657:8:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 813,
                    "src": "649:16:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 807,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "649:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 810,
                    "mutability": "mutable",
                    "name": "gasLimit",
                    "nameLocation": "683:8:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 813,
                    "src": "675:16:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 809,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "675:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 812,
                    "mutability": "mutable",
                    "name": "refundAddress",
                    "nameLocation": "709:13:2",
                    "nodeType": "VariableDeclaration",
                    "scope": 813,
                    "src": "701:21:2",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 811,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "701:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Metadata",
                "nameLocation": "606:8:2",
                "nodeType": "StructDefinition",
                "scope": 1071,
                "src": "599:130:2",
                "visibility": "public"
              },
              {
                "constant": true,
                "id": 816,
                "mutability": "constant",
                "name": "VARIANT_OFFSET",
                "nameLocation": "758:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 1071,
                "src": "735:41:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 814,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "735:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "hexValue": "30",
                  "id": 815,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "775:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 819,
                "mutability": "constant",
                "name": "MSG_VALUE_OFFSET",
                "nameLocation": "805:16:2",
                "nodeType": "VariableDeclaration",
                "scope": 1071,
                "src": "782:43:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 817,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "782:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "hexValue": "32",
                  "id": 818,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "824:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 822,
                "mutability": "constant",
                "name": "GAS_LIMIT_OFFSET",
                "nameLocation": "854:16:2",
                "nodeType": "VariableDeclaration",
                "scope": 1071,
                "src": "831:44:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 820,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "831:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "hexValue": "3334",
                  "id": 821,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "873:2:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_34_by_1",
                    "typeString": "int_const 34"
                  },
                  "value": "34"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 825,
                "mutability": "constant",
                "name": "REFUND_ADDRESS_OFFSET",
                "nameLocation": "904:21:2",
                "nodeType": "VariableDeclaration",
                "scope": 1071,
                "src": "881:49:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 823,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "881:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "hexValue": "3636",
                  "id": 824,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "928:2:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_66_by_1",
                    "typeString": "int_const 66"
                  },
                  "value": "66"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 828,
                "mutability": "constant",
                "name": "MIN_METADATA_LENGTH",
                "nameLocation": "961:19:2",
                "nodeType": "VariableDeclaration",
                "scope": 1071,
                "src": "936:49:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 826,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "936:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "3836",
                  "id": 827,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "983:2:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_86_by_1",
                    "typeString": "int_const 86"
                  },
                  "value": "86"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "functionSelector": "26418953",
                "id": 831,
                "mutability": "constant",
                "name": "VARIANT",
                "nameLocation": "1015:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 1071,
                "src": "992:34:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 829,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "992:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": {
                  "hexValue": "31",
                  "id": 830,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1025:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 861,
                  "nodeType": "Block",
                  "src": "1284:145:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 839,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 834,
                            "src": "1298:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1308:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1298:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 841,
                            "name": "VARIANT_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 816,
                            "src": "1317:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1334:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1317:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1298:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 847,
                      "nodeType": "IfStatement",
                      "src": "1294:51:2",
                      "trueBody": {
                        "expression": {
                          "hexValue": "30",
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1344:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 838,
                        "id": 846,
                        "nodeType": "Return",
                        "src": "1337:8:2"
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 852,
                                  "name": "_metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 834,
                                  "src": "1376:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 854,
                                    "name": "VARIANT_OFFSET",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 816,
                                    "src": "1401:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1418:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "1401:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "1376:44:2",
                                "startExpression": {
                                  "id": 853,
                                  "name": "VARIANT_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 816,
                                  "src": "1386:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1369:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes2_$",
                                "typeString": "type(bytes2)"
                              },
                              "typeName": {
                                "id": 850,
                                "name": "bytes2",
                                "nodeType": "ElementaryTypeName",
                                "src": "1369:6:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1369:52:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes2",
                              "typeString": "bytes2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes2",
                              "typeString": "bytes2"
                            }
                          ],
                          "id": 849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1362:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint16_$",
                            "typeString": "type(uint16)"
                          },
                          "typeName": {
                            "id": 848,
                            "name": "uint16",
                            "nodeType": "ElementaryTypeName",
                            "src": "1362:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1362:60:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "functionReturnParameters": 838,
                      "id": 860,
                      "nodeType": "Return",
                      "src": "1355:67:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 832,
                  "nodeType": "StructuredDocumentation",
                  "src": "1033:172:2",
                  "text": " @notice Returns the variant of the metadata.\n @param _metadata ABI encoded standard hook metadata.\n @return variant of the metadata as uint8."
                },
                "id": 862,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "variant",
                "nameLocation": "1219:7:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 835,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 834,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "1242:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "1227:24:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 833,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1227:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1226:26:2"
                },
                "returnParameters": {
                  "id": 838,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 837,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 862,
                      "src": "1276:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 836,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "1276:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1275:8:2"
                },
                "scope": 1071,
                "src": "1210:219:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 894,
                  "nodeType": "Block",
                  "src": "1783:174:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 872,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "1797:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1807:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1797:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 874,
                            "name": "MSG_VALUE_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 819,
                            "src": "1816:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1835:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "1816:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "1797:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 880,
                      "nodeType": "IfStatement",
                      "src": "1793:61:2",
                      "trueBody": {
                        "expression": {
                          "id": 878,
                          "name": "_default",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 867,
                          "src": "1846:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 871,
                        "id": 879,
                        "nodeType": "Return",
                        "src": "1839:15:2"
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 885,
                                  "name": "_metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 865,
                                  "src": "1899:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 887,
                                    "name": "MSG_VALUE_OFFSET",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 819,
                                    "src": "1926:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "3332",
                                    "id": 888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1945:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_32_by_1",
                                      "typeString": "int_const 32"
                                    },
                                    "value": "32"
                                  },
                                  "src": "1926:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "1899:49:2",
                                "startExpression": {
                                  "id": 886,
                                  "name": "MSG_VALUE_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 819,
                                  "src": "1909:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1891:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 883,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "1891:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1891:58:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1883:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 881,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1883:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1883:67:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 871,
                      "id": 893,
                      "nodeType": "Return",
                      "src": "1864:86:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 863,
                  "nodeType": "StructuredDocumentation",
                  "src": "1435:227:2",
                  "text": " @notice Returns the specified value for the message.\n @param _metadata ABI encoded standard hook metadata.\n @param _default Default fallback value.\n @return Value for the message as uint256."
                },
                "id": 895,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "msgValue",
                "nameLocation": "1676:8:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 868,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "1709:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 895,
                      "src": "1694:24:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 864,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1694:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 867,
                      "mutability": "mutable",
                      "name": "_default",
                      "nameLocation": "1736:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 895,
                      "src": "1728:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 866,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1728:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1684:66:2"
                },
                "returnParameters": {
                  "id": 871,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 870,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 895,
                      "src": "1774:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 869,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1774:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1773:9:2"
                },
                "scope": 1071,
                "src": "1667:290:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 927,
                  "nodeType": "Block",
                  "src": "2323:174:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 905,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "2337:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2347:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2337:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 907,
                            "name": "GAS_LIMIT_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 822,
                            "src": "2356:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2375:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "2356:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2337:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 913,
                      "nodeType": "IfStatement",
                      "src": "2333:61:2",
                      "trueBody": {
                        "expression": {
                          "id": 911,
                          "name": "_default",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "2386:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 904,
                        "id": 912,
                        "nodeType": "Return",
                        "src": "2379:15:2"
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 918,
                                  "name": "_metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 898,
                                  "src": "2439:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 920,
                                    "name": "GAS_LIMIT_OFFSET",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 822,
                                    "src": "2466:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "3332",
                                    "id": 921,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2485:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_32_by_1",
                                      "typeString": "int_const 32"
                                    },
                                    "value": "32"
                                  },
                                  "src": "2466:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "2439:49:2",
                                "startExpression": {
                                  "id": 919,
                                  "name": "GAS_LIMIT_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 822,
                                  "src": "2449:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2431:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 916,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "2431:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2431:58:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2423:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 914,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2423:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2423:67:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 904,
                      "id": 926,
                      "nodeType": "Return",
                      "src": "2404:86:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 896,
                  "nodeType": "StructuredDocumentation",
                  "src": "1963:239:2",
                  "text": " @notice Returns the specified gas limit for the message.\n @param _metadata ABI encoded standard hook metadata.\n @param _default Default fallback gas limit.\n @return Gas limit for the message as uint256."
                },
                "id": 928,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "gasLimit",
                "nameLocation": "2216:8:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 901,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 898,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "2249:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "2234:24:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 897,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2234:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 900,
                      "mutability": "mutable",
                      "name": "_default",
                      "nameLocation": "2276:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "2268:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 899,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2268:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2224:66:2"
                },
                "returnParameters": {
                  "id": 904,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 903,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 928,
                      "src": "2314:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 902,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2314:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2313:9:2"
                },
                "scope": 1071,
                "src": "2207:290:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 960,
                  "nodeType": "Block",
                  "src": "2883:257:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 938,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 931,
                            "src": "2897:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2907:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2897:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 940,
                            "name": "REFUND_ADDRESS_OFFSET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "2916:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3230",
                            "id": 941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2940:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20_by_1",
                              "typeString": "int_const 20"
                            },
                            "value": "20"
                          },
                          "src": "2916:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2897:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 946,
                      "nodeType": "IfStatement",
                      "src": "2893:66:2",
                      "trueBody": {
                        "expression": {
                          "id": 944,
                          "name": "_default",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 933,
                          "src": "2951:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 937,
                        "id": 945,
                        "nodeType": "Return",
                        "src": "2944:15:2"
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 951,
                                  "name": "_metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 931,
                                  "src": "3042:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 955,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 953,
                                    "name": "REFUND_ADDRESS_OFFSET",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 825,
                                    "src": "3074:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "3230",
                                    "id": 954,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3098:2:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_20_by_1",
                                      "typeString": "int_const 20"
                                    },
                                    "value": "20"
                                  },
                                  "src": "3074:26:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "3042:59:2",
                                "startExpression": {
                                  "id": 952,
                                  "name": "REFUND_ADDRESS_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 825,
                                  "src": "3052:21:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3013:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes20_$",
                                "typeString": "type(bytes20)"
                              },
                              "typeName": {
                                "id": 949,
                                "name": "bytes20",
                                "nodeType": "ElementaryTypeName",
                                "src": "3013:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3013:106:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            }
                          ],
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2988:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2988:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2988:145:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 937,
                      "id": 959,
                      "nodeType": "Return",
                      "src": "2969:164:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 929,
                  "nodeType": "StructuredDocumentation",
                  "src": "2503:254:2",
                  "text": " @notice Returns the specified refund address for the message.\n @param _metadata ABI encoded standard hook metadata.\n @param _default Default fallback refund address.\n @return Refund address for the message as address."
                },
                "id": 961,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "refundAddress",
                "nameLocation": "2771:13:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 934,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 931,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "2809:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "2794:24:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 930,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2794:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 933,
                      "mutability": "mutable",
                      "name": "_default",
                      "nameLocation": "2836:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "2828:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 932,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2828:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2784:66:2"
                },
                "returnParameters": {
                  "id": 937,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 936,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "2874:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 935,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2874:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2873:9:2"
                },
                "scope": 1071,
                "src": "2762:378:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 983,
                  "nodeType": "Block",
                  "src": "3404:130:2",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 969,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "3418:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3428:6:2",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3418:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 971,
                          "name": "MIN_METADATA_LENGTH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 828,
                          "src": "3437:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3418:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 978,
                      "nodeType": "IfStatement",
                      "src": "3414:65:2",
                      "trueBody": {
                        "expression": {
                          "baseExpression": {
                            "id": 973,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "3465:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "endExpression": {
                            "hexValue": "30",
                            "id": 975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3477:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexRangeAccess",
                          "src": "3465:14:2",
                          "startExpression": {
                            "hexValue": "30",
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3475:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr_slice",
                            "typeString": "bytes calldata slice"
                          }
                        },
                        "functionReturnParameters": 968,
                        "id": 977,
                        "nodeType": "Return",
                        "src": "3458:21:2"
                      }
                    },
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 979,
                          "name": "_metadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 964,
                          "src": "3496:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexRangeAccess",
                        "src": "3496:31:2",
                        "startExpression": {
                          "id": 980,
                          "name": "MIN_METADATA_LENGTH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 828,
                          "src": "3506:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr_slice",
                          "typeString": "bytes calldata slice"
                        }
                      },
                      "functionReturnParameters": 968,
                      "id": 982,
                      "nodeType": "Return",
                      "src": "3489:38:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 962,
                  "nodeType": "StructuredDocumentation",
                  "src": "3146:147:2",
                  "text": " @notice Returns any custom metadata.\n @param _metadata ABI encoded standard hook metadata.\n @return Custom metadata."
                },
                "id": 984,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getCustomMetadata",
                "nameLocation": "3307:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 965,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "3349:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 984,
                      "src": "3334:24:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3334:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3324:40:2"
                },
                "returnParameters": {
                  "id": 968,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 967,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 984,
                      "src": "3388:14:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 966,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3388:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3387:16:2"
                },
                "scope": 1071,
                "src": "3298:236:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1007,
                  "nodeType": "Block",
                  "src": "4148:210:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1000,
                            "name": "VARIANT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "4211:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "id": 1001,
                            "name": "_msgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 987,
                            "src": "4236:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1002,
                            "name": "_gasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 989,
                            "src": "4263:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1003,
                            "name": "_refundAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "4290:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1004,
                            "name": "_customMetadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "4322:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 998,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4177:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4181:12:2",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4177:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4177:174:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 997,
                      "id": 1006,
                      "nodeType": "Return",
                      "src": "4158:193:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 985,
                  "nodeType": "StructuredDocumentation",
                  "src": "3540:412:2",
                  "text": " @notice Formats the specified gas limit and refund address into standard hook metadata.\n @param _msgValue msg.value for the message.\n @param _gasLimit Gas limit for the message.\n @param _refundAddress Refund address for the message.\n @param _customMetadata Additional metadata to include in the standard hook metadata.\n @return ABI encoded standard hook metadata."
                },
                "id": 1008,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "formatMetadata",
                "nameLocation": "3966:14:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 994,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 987,
                      "mutability": "mutable",
                      "name": "_msgValue",
                      "nameLocation": "3998:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1008,
                      "src": "3990:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 986,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3990:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 989,
                      "mutability": "mutable",
                      "name": "_gasLimit",
                      "nameLocation": "4025:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1008,
                      "src": "4017:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 988,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4017:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 991,
                      "mutability": "mutable",
                      "name": "_refundAddress",
                      "nameLocation": "4052:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1008,
                      "src": "4044:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 990,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4044:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 993,
                      "mutability": "mutable",
                      "name": "_customMetadata",
                      "nameLocation": "4089:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1008,
                      "src": "4076:28:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 992,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4076:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3980:130:2"
                },
                "returnParameters": {
                  "id": 997,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 996,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1008,
                      "src": "4134:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 995,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4134:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4133:14:2"
                },
                "scope": 1071,
                "src": "3957:401:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1027,
                  "nodeType": "Block",
                  "src": "4673:77:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1017,
                            "name": "_msgValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "4705:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4724:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4716:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1018,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "4716:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4716:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1022,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4728:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4732:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4728:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4740:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 1016,
                          "name": "formatMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "4690:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256,uint256,address,bytes memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4690:53:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1015,
                      "id": 1026,
                      "nodeType": "Return",
                      "src": "4683:60:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 1009,
                  "nodeType": "StructuredDocumentation",
                  "src": "4364:208:2",
                  "text": " @notice Formats the specified gas limit and refund address into standard hook metadata.\n @param _msgValue msg.value for the message.\n @return ABI encoded standard hook metadata."
                },
                "id": 1028,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "overrideMsgValue",
                "nameLocation": "4586:16:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1012,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1011,
                      "mutability": "mutable",
                      "name": "_msgValue",
                      "nameLocation": "4620:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1028,
                      "src": "4612:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1010,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4612:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4602:33:2"
                },
                "returnParameters": {
                  "id": 1015,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1014,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1028,
                      "src": "4659:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1013,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4659:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4658:14:2"
                },
                "scope": 1071,
                "src": "4577:173:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1047,
                  "nodeType": "Block",
                  "src": "5065:77:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5105:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5097:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1037,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5097:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5097:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1041,
                            "name": "_gasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "5109:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1042,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5120:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5124:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5120:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 1044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5132:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 1036,
                          "name": "formatMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "5082:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256,uint256,address,bytes memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5082:53:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1035,
                      "id": 1046,
                      "nodeType": "Return",
                      "src": "5075:60:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 1029,
                  "nodeType": "StructuredDocumentation",
                  "src": "4756:208:2",
                  "text": " @notice Formats the specified gas limit and refund address into standard hook metadata.\n @param _gasLimit Gas limit for the message.\n @return ABI encoded standard hook metadata."
                },
                "id": 1048,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "overrideGasLimit",
                "nameLocation": "4978:16:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1032,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1031,
                      "mutability": "mutable",
                      "name": "_gasLimit",
                      "nameLocation": "5012:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1048,
                      "src": "5004:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1030,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5004:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4994:33:2"
                },
                "returnParameters": {
                  "id": 1035,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1034,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1048,
                      "src": "5051:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1033,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5051:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5050:14:2"
                },
                "scope": 1071,
                "src": "4969:173:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1069,
                  "nodeType": "Block",
                  "src": "5463:82:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5503:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5495:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1057,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5495:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1060,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5495:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5515:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5507:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1061,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5507:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5507:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1065,
                            "name": "_refundAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1051,
                            "src": "5519:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5535:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 1056,
                          "name": "formatMetadata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1008,
                          "src": "5480:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256,uint256,address,bytes memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5480:58:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1055,
                      "id": 1068,
                      "nodeType": "Return",
                      "src": "5473:65:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 1049,
                  "nodeType": "StructuredDocumentation",
                  "src": "5148:204:2",
                  "text": " @notice Formats the specified refund address into standard hook metadata.\n @param _refundAddress Refund address for the message.\n @return ABI encoded standard hook metadata."
                },
                "id": 1070,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "overrideRefundAddress",
                "nameLocation": "5366:21:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1052,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1051,
                      "mutability": "mutable",
                      "name": "_refundAddress",
                      "nameLocation": "5405:14:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "5397:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1050,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5397:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5387:38:2"
                },
                "returnParameters": {
                  "id": 1055,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1054,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1070,
                      "src": "5449:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1053,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5449:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5448:14:2"
                },
                "scope": 1071,
                "src": "5357:188:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1072,
            "src": "564:4983:2",
            "usedErrors": []
          }
        ],
        "src": "46:5502:2"
      }
    },
    "contracts/interfaces/IInterchainSecurityModule.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            1099
          ],
          "ISpecifiesInterchainSecurityModule": [
            1106
          ]
        },
        "id": 1107,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1073,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:3"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IInterchainSecurityModule",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1099,
            "linearizedBaseContracts": [
              1099
            ],
            "name": "IInterchainSecurityModule",
            "nameLocation": "83:25:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "IInterchainSecurityModule.Types",
                "id": 1082,
                "members": [
                  {
                    "id": 1074,
                    "name": "UNUSED",
                    "nameLocation": "136:6:3",
                    "nodeType": "EnumValue",
                    "src": "136:6:3"
                  },
                  {
                    "id": 1075,
                    "name": "ROUTING",
                    "nameLocation": "152:7:3",
                    "nodeType": "EnumValue",
                    "src": "152:7:3"
                  },
                  {
                    "id": 1076,
                    "name": "AGGREGATION",
                    "nameLocation": "169:11:3",
                    "nodeType": "EnumValue",
                    "src": "169:11:3"
                  },
                  {
                    "id": 1077,
                    "name": "LEGACY_MULTISIG",
                    "nameLocation": "190:15:3",
                    "nodeType": "EnumValue",
                    "src": "190:15:3"
                  },
                  {
                    "id": 1078,
                    "name": "MERKLE_ROOT_MULTISIG",
                    "nameLocation": "215:20:3",
                    "nodeType": "EnumValue",
                    "src": "215:20:3"
                  },
                  {
                    "id": 1079,
                    "name": "MESSAGE_ID_MULTISIG",
                    "nameLocation": "245:19:3",
                    "nodeType": "EnumValue",
                    "src": "245:19:3"
                  },
                  {
                    "id": 1080,
                    "name": "NULL",
                    "nameLocation": "274:4:3",
                    "nodeType": "EnumValue",
                    "src": "274:4:3"
                  },
                  {
                    "id": 1081,
                    "name": "CCIP_READ",
                    "nameLocation": "330:9:3",
                    "nodeType": "EnumValue",
                    "src": "330:9:3"
                  }
                ],
                "name": "Types",
                "nameLocation": "120:5:3",
                "nodeType": "EnumDefinition",
                "src": "115:230:3"
              },
              {
                "documentation": {
                  "id": 1083,
                  "nodeType": "StructuredDocumentation",
                  "src": "351:174:3",
                  "text": " @notice Returns an enum that represents the type of security model\n encoded by this ISM.\n @dev Relayers infer how to fetch and format metadata."
                },
                "functionSelector": "6465e69f",
                "id": 1088,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "moduleType",
                "nameLocation": "539:10:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1084,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "549:2:3"
                },
                "returnParameters": {
                  "id": 1087,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1086,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1088,
                      "src": "575:5:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1085,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "575:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "574:7:3"
                },
                "scope": 1099,
                "src": "530:52:3",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1089,
                  "nodeType": "StructuredDocumentation",
                  "src": "588:398:3",
                  "text": " @notice Defines a security model responsible for verifying interchain\n messages based on the provided metadata.\n @param _metadata Off-chain metadata provided by a relayer, specific to\n the security model encoded by the module (e.g. validator signatures)\n @param _message Hyperlane encoded interchain message\n @return True if the message was verified"
                },
                "functionSelector": "f7e83aee",
                "id": 1098,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "verify",
                "nameLocation": "1000:6:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1094,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1091,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "1031:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "1016:24:3",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1016:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "1065:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "1050:23:3",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1050:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1006:73:3"
                },
                "returnParameters": {
                  "id": 1097,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1096,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "1098:4:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1095,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1098:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1097:6:3"
                },
                "scope": 1099,
                "src": "991:113:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1107,
            "src": "73:1033:3",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "ISpecifiesInterchainSecurityModule",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1106,
            "linearizedBaseContracts": [
              1106
            ],
            "name": "ISpecifiesInterchainSecurityModule",
            "nameLocation": "1118:34:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "de523cf3",
                "id": 1105,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "interchainSecurityModule",
                "nameLocation": "1168:24:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1100,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1192:2:3"
                },
                "returnParameters": {
                  "id": 1104,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1103,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "1242:25:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                        "typeString": "contract IInterchainSecurityModule"
                      },
                      "typeName": {
                        "id": 1102,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1101,
                          "name": "IInterchainSecurityModule",
                          "nameLocations": [
                            "1242:25:3"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1099,
                          "src": "1242:25:3"
                        },
                        "referencedDeclaration": 1099,
                        "src": "1242:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1241:27:3"
                },
                "scope": 1106,
                "src": "1159:110:3",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1107,
            "src": "1108:163:3",
            "usedErrors": []
          }
        ],
        "src": "46:1226:3"
      }
    },
    "contracts/interfaces/IMailbox.sol": {
      "id": 4,
      "ast": {
        "absolutePath": "contracts/interfaces/IMailbox.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            1099
          ],
          "IMailbox": [
            1273
          ],
          "IPostDispatchHook": [
            1330
          ]
        },
        "id": 1274,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1108,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:4"
          },
          {
            "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
            "file": "./IInterchainSecurityModule.sol",
            "id": 1110,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1274,
            "sourceUnit": 1107,
            "src": "72:74:4",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1109,
                  "name": "IInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "80:25:4",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/hooks/IPostDispatchHook.sol",
            "file": "./hooks/IPostDispatchHook.sol",
            "id": 1112,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1274,
            "sourceUnit": 1331,
            "src": "147:64:4",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1111,
                  "name": "IPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1330,
                  "src": "155:17:4",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IMailbox",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1273,
            "linearizedBaseContracts": [
              1273
            ],
            "name": "IMailbox",
            "nameLocation": "223:8:4",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": {
                  "id": 1113,
                  "nodeType": "StructuredDocumentation",
                  "src": "278:320:4",
                  "text": " @notice Emitted when a new message is dispatched via Hyperlane\n @param sender The address that dispatched the message\n @param destination The destination domain of the message\n @param recipient The message recipient address on `destination`\n @param message Raw bytes of message"
                },
                "eventSelector": "769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814",
                "id": 1123,
                "name": "Dispatch",
                "nameLocation": "609:8:4",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1122,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1115,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "643:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "627:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1114,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "627:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1117,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "destination",
                      "nameLocation": "674:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "659:26:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "659:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1119,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "711:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "695:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1118,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "695:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1121,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "736:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1123,
                      "src": "730:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1120,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "730:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "617:132:4"
                },
                "src": "603:147:4"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 1124,
                  "nodeType": "StructuredDocumentation",
                  "src": "756:135:4",
                  "text": " @notice Emitted when a new message is dispatched via Hyperlane\n @param messageId The unique message identifier"
                },
                "eventSelector": "788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a",
                "id": 1128,
                "name": "DispatchId",
                "nameLocation": "902:10:4",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1127,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1126,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "messageId",
                      "nameLocation": "929:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1128,
                      "src": "913:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1125,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "913:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "912:27:4"
                },
                "src": "896:44:4"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 1129,
                  "nodeType": "StructuredDocumentation",
                  "src": "946:126:4",
                  "text": " @notice Emitted when a Hyperlane message is processed\n @param messageId The unique message identifier"
                },
                "eventSelector": "1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a9",
                "id": 1133,
                "name": "ProcessId",
                "nameLocation": "1083:9:4",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1132,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1131,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "messageId",
                      "nameLocation": "1109:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1133,
                      "src": "1093:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1130,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1093:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1092:27:4"
                },
                "src": "1077:43:4"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 1134,
                  "nodeType": "StructuredDocumentation",
                  "src": "1126:247:4",
                  "text": " @notice Emitted when a Hyperlane message is delivered\n @param origin The origin domain of the message\n @param sender The message sender address on `origin`\n @param recipient The address that handled the message"
                },
                "eventSelector": "0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca6574",
                "id": 1142,
                "name": "Process",
                "nameLocation": "1384:7:4",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1141,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1136,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "origin",
                      "nameLocation": "1416:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "1401:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1135,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1401:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1138,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "1448:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "1432:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1137,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1432:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1140,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1480:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1142,
                      "src": "1464:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1139,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1464:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1391:104:4"
                },
                "src": "1378:118:4"
              },
              {
                "functionSelector": "8d3638f4",
                "id": 1147,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "localDomain",
                "nameLocation": "1511:11:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1143,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1522:2:4"
                },
                "returnParameters": {
                  "id": 1146,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1145,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1147,
                      "src": "1548:6:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1144,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1548:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1547:8:4"
                },
                "scope": 1273,
                "src": "1502:54:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "e495f1d4",
                "id": 1154,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "delivered",
                "nameLocation": "1571:9:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1150,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1149,
                      "mutability": "mutable",
                      "name": "messageId",
                      "nameLocation": "1589:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1154,
                      "src": "1581:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1148,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1581:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1580:19:4"
                },
                "returnParameters": {
                  "id": 1153,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1152,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1154,
                      "src": "1623:4:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1151,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1623:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1622:6:4"
                },
                "scope": 1273,
                "src": "1562:67:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "6e5f516e",
                "id": 1160,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "defaultIsm",
                "nameLocation": "1644:10:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1155,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1654:2:4"
                },
                "returnParameters": {
                  "id": 1159,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1158,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1160,
                      "src": "1680:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                        "typeString": "contract IInterchainSecurityModule"
                      },
                      "typeName": {
                        "id": 1157,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1156,
                          "name": "IInterchainSecurityModule",
                          "nameLocations": [
                            "1680:25:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1099,
                          "src": "1680:25:4"
                        },
                        "referencedDeclaration": 1099,
                        "src": "1680:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1679:27:4"
                },
                "scope": 1273,
                "src": "1635:72:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "3d1250b7",
                "id": 1166,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "defaultHook",
                "nameLocation": "1722:11:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1161,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1733:2:4"
                },
                "returnParameters": {
                  "id": 1165,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1164,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1166,
                      "src": "1759:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 1163,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1162,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "1759:17:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "1759:17:4"
                        },
                        "referencedDeclaration": 1330,
                        "src": "1759:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1758:19:4"
                },
                "scope": 1273,
                "src": "1713:65:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "d6d08a09",
                "id": 1172,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "requiredHook",
                "nameLocation": "1793:12:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1167,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1805:2:4"
                },
                "returnParameters": {
                  "id": 1171,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1170,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1172,
                      "src": "1831:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 1169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1168,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "1831:17:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "1831:17:4"
                        },
                        "referencedDeclaration": 1330,
                        "src": "1831:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1830:19:4"
                },
                "scope": 1273,
                "src": "1784:66:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "134fbb4f",
                "id": 1177,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "latestDispatchedId",
                "nameLocation": "1865:18:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1173,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1883:2:4"
                },
                "returnParameters": {
                  "id": 1176,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1175,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1177,
                      "src": "1909:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1174,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1909:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1908:9:4"
                },
                "scope": 1273,
                "src": "1856:62:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "fa31de01",
                "id": 1188,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "1933:8:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1184,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "1958:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1188,
                      "src": "1951:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1951:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1181,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "1993:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1188,
                      "src": "1985:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1180,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "2034:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1188,
                      "src": "2019:26:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2019:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1941:110:4"
                },
                "returnParameters": {
                  "id": 1187,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "messageId",
                      "nameLocation": "2086:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1188,
                      "src": "2078:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2078:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2077:19:4"
                },
                "scope": 1273,
                "src": "1924:173:4",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "9c42bd18",
                "id": 1199,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "2112:13:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1195,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1190,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "2142:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "2135:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1189,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2135:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1192,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "2177:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "2169:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1191,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2169:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "2218:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "2203:26:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2203:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2125:110:4"
                },
                "returnParameters": {
                  "id": 1198,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1197,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "2267:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1199,
                      "src": "2259:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1196,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2259:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2258:13:4"
                },
                "scope": 1273,
                "src": "2103:169:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "48aee8d4",
                "id": 1212,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "2287:8:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1208,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1201,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "2312:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2305:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1200,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2305:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1203,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "2347:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2339:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1202,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2339:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1205,
                      "mutability": "mutable",
                      "name": "body",
                      "nameLocation": "2388:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2373:19:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1204,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2373:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1207,
                      "mutability": "mutable",
                      "name": "defaultHookMetadata",
                      "nameLocation": "2417:19:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2402:34:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1206,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2402:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2295:147:4"
                },
                "returnParameters": {
                  "id": 1211,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "messageId",
                      "nameLocation": "2477:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2469:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2469:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2468:19:4"
                },
                "scope": 1273,
                "src": "2278:210:4",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "f7ccd321",
                "id": 1225,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "2503:13:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1221,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "2533:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "2526:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2526:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1216,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "2568:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "2560:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1215,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2560:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1218,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "2609:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "2594:26:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1217,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2594:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1220,
                      "mutability": "mutable",
                      "name": "defaultHookMetadata",
                      "nameLocation": "2645:19:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "2630:34:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1219,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2630:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2516:154:4"
                },
                "returnParameters": {
                  "id": 1224,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1223,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "2702:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1225,
                      "src": "2694:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1222,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2694:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2693:13:4"
                },
                "scope": 1273,
                "src": "2494:213:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "10b83dc0",
                "id": 1241,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "2722:8:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1237,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "2747:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "2740:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2740:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1229,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "2782:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "2774:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2774:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1231,
                      "mutability": "mutable",
                      "name": "body",
                      "nameLocation": "2823:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "2808:19:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2808:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1233,
                      "mutability": "mutable",
                      "name": "customHookMetadata",
                      "nameLocation": "2852:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "2837:33:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1232,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2837:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1236,
                      "mutability": "mutable",
                      "name": "customHook",
                      "nameLocation": "2898:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "2880:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 1235,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1234,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "2880:17:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "2880:17:4"
                        },
                        "referencedDeclaration": 1330,
                        "src": "2880:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2730:184:4"
                },
                "returnParameters": {
                  "id": 1240,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "messageId",
                      "nameLocation": "2949:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "2941:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2941:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2940:19:4"
                },
                "scope": 1273,
                "src": "2713:247:4",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "81d2ea95",
                "id": 1257,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "2975:13:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1253,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1243,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "3005:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "2998:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1242,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2998:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1245,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "3040:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "3032:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1244,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3032:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "3081:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "3066:26:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1246,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3066:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1249,
                      "mutability": "mutable",
                      "name": "customHookMetadata",
                      "nameLocation": "3117:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "3102:33:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1248,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3102:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1252,
                      "mutability": "mutable",
                      "name": "customHook",
                      "nameLocation": "3163:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "3145:28:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 1251,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1250,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "3145:17:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "3145:17:4"
                        },
                        "referencedDeclaration": 1330,
                        "src": "3145:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2988:191:4"
                },
                "returnParameters": {
                  "id": 1256,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1255,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "3211:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "3203:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1254,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3203:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3202:13:4"
                },
                "scope": 1273,
                "src": "2966:250:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "7c39d130",
                "id": 1264,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "process",
                "nameLocation": "3231:7:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1262,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1259,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "3263:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "3248:23:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1258,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3248:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1261,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "3296:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1264,
                      "src": "3281:22:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1260,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3281:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3238:71:4"
                },
                "returnParameters": {
                  "id": 1263,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3326:0:4"
                },
                "scope": 1273,
                "src": "3222:105:4",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "e70f48ac",
                "id": 1272,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "recipientIsm",
                "nameLocation": "3342:12:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1267,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1266,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "3372:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "3364:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1265,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3364:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3354:33:4"
                },
                "returnParameters": {
                  "id": 1271,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1270,
                      "mutability": "mutable",
                      "name": "module",
                      "nameLocation": "3437:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "3411:32:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                        "typeString": "contract IInterchainSecurityModule"
                      },
                      "typeName": {
                        "id": 1269,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1268,
                          "name": "IInterchainSecurityModule",
                          "nameLocations": [
                            "3411:25:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1099,
                          "src": "3411:25:4"
                        },
                        "referencedDeclaration": 1099,
                        "src": "3411:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3410:34:4"
                },
                "scope": 1273,
                "src": "3333:112:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1274,
            "src": "213:3234:4",
            "usedErrors": []
          }
        ],
        "src": "46:3402:4"
      }
    },
    "contracts/interfaces/IMessageRecipient.sol": {
      "id": 5,
      "ast": {
        "absolutePath": "contracts/interfaces/IMessageRecipient.sol",
        "exportedSymbols": {
          "IMessageRecipient": [
            1285
          ]
        },
        "id": 1286,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1275,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:5"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IMessageRecipient",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1285,
            "linearizedBaseContracts": [
              1285
            ],
            "name": "IMessageRecipient",
            "nameLocation": "83:17:5",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "56d5d475",
                "id": 1284,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "handle",
                "nameLocation": "116:6:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1282,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "_origin",
                      "nameLocation": "139:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1284,
                      "src": "132:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "132:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1279,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "164:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1284,
                      "src": "156:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1278,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "156:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "196:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1284,
                      "src": "181:23:5",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "181:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "122:88:5"
                },
                "returnParameters": {
                  "id": 1283,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "227:0:5"
                },
                "scope": 1285,
                "src": "107:121:5",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1286,
            "src": "73:157:5",
            "usedErrors": []
          }
        ],
        "src": "46:185:5"
      }
    },
    "contracts/interfaces/hooks/IPostDispatchHook.sol": {
      "id": 6,
      "ast": {
        "absolutePath": "contracts/interfaces/hooks/IPostDispatchHook.sol",
        "exportedSymbols": {
          "IPostDispatchHook": [
            1330
          ]
        },
        "id": 1331,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1287,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:6"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IPostDispatchHook",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1330,
            "linearizedBaseContracts": [
              1330
            ],
            "name": "IPostDispatchHook",
            "nameLocation": "395:17:6",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "IPostDispatchHook.Types",
                "id": 1297,
                "members": [
                  {
                    "id": 1288,
                    "name": "UNUSED",
                    "nameLocation": "440:6:6",
                    "nodeType": "EnumValue",
                    "src": "440:6:6"
                  },
                  {
                    "id": 1289,
                    "name": "ROUTING",
                    "nameLocation": "456:7:6",
                    "nodeType": "EnumValue",
                    "src": "456:7:6"
                  },
                  {
                    "id": 1290,
                    "name": "AGGREGATION",
                    "nameLocation": "473:11:6",
                    "nodeType": "EnumValue",
                    "src": "473:11:6"
                  },
                  {
                    "id": 1291,
                    "name": "MERKLE_TREE",
                    "nameLocation": "494:11:6",
                    "nodeType": "EnumValue",
                    "src": "494:11:6"
                  },
                  {
                    "id": 1292,
                    "name": "INTERCHAIN_GAS_PAYMASTER",
                    "nameLocation": "515:24:6",
                    "nodeType": "EnumValue",
                    "src": "515:24:6"
                  },
                  {
                    "id": 1293,
                    "name": "FALLBACK_ROUTING",
                    "nameLocation": "549:16:6",
                    "nodeType": "EnumValue",
                    "src": "549:16:6"
                  },
                  {
                    "id": 1294,
                    "name": "ID_AUTH_ISM",
                    "nameLocation": "575:11:6",
                    "nodeType": "EnumValue",
                    "src": "575:11:6"
                  },
                  {
                    "id": 1295,
                    "name": "PAUSABLE",
                    "nameLocation": "596:8:6",
                    "nodeType": "EnumValue",
                    "src": "596:8:6"
                  },
                  {
                    "id": 1296,
                    "name": "PROTOCOL_FEE",
                    "nameLocation": "614:12:6",
                    "nodeType": "EnumValue",
                    "src": "614:12:6"
                  }
                ],
                "name": "Types",
                "nameLocation": "424:5:6",
                "nodeType": "EnumDefinition",
                "src": "419:213:6"
              },
              {
                "documentation": {
                  "id": 1298,
                  "nodeType": "StructuredDocumentation",
                  "src": "638:75:6",
                  "text": " @notice Returns an enum that represents the type of hook"
                },
                "functionSelector": "e445e7dd",
                "id": 1303,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "hookType",
                "nameLocation": "727:8:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1299,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "735:2:6"
                },
                "returnParameters": {
                  "id": 1302,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1301,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1303,
                      "src": "761:5:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1300,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "761:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "760:7:6"
                },
                "scope": 1330,
                "src": "718:50:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1304,
                  "nodeType": "StructuredDocumentation",
                  "src": "774:151:6",
                  "text": " @notice Returns whether the hook supports metadata\n @param metadata metadata\n @return Whether the hook supports metadata"
                },
                "functionSelector": "e5320bb9",
                "id": 1311,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "supportsMetadata",
                "nameLocation": "939:16:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1307,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1306,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "980:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1311,
                      "src": "965:23:6",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1305,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "965:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "955:39:6"
                },
                "returnParameters": {
                  "id": 1310,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1309,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1311,
                      "src": "1018:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1308,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1018:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1017:6:6"
                },
                "scope": 1330,
                "src": "930:94:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1312,
                  "nodeType": "StructuredDocumentation",
                  "src": "1030:216:6",
                  "text": " @notice Post action after a message is dispatched via the Mailbox\n @param metadata The metadata required for the hook\n @param message The message passed from the Mailbox.dispatch() call"
                },
                "functionSelector": "086011b9",
                "id": 1319,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "postDispatch",
                "nameLocation": "1260:12:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1317,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1314,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "1297:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "1282:23:6",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1313,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1282:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1316,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1330:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "1315:22:6",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1315,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1315:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1272:71:6"
                },
                "returnParameters": {
                  "id": 1318,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1360:0:6"
                },
                "scope": 1330,
                "src": "1251:110:6",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1320,
                  "nodeType": "StructuredDocumentation",
                  "src": "1367:268:6",
                  "text": " @notice Compute the payment required by the postDispatch call\n @param metadata The metadata required for the hook\n @param message The message passed from the Mailbox.dispatch() call\n @return Quoted payment for the postDispatch call"
                },
                "functionSelector": "aaccd230",
                "id": 1329,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "quoteDispatch",
                "nameLocation": "1649:13:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1325,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1322,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "1687:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1329,
                      "src": "1672:23:6",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1321,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1672:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1324,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1720:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1329,
                      "src": "1705:22:6",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1323,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1705:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1662:71:6"
                },
                "returnParameters": {
                  "id": 1328,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1329,
                      "src": "1757:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1757:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1756:9:6"
                },
                "scope": 1330,
                "src": "1640:126:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1331,
            "src": "385:1383:6",
            "usedErrors": []
          }
        ],
        "src": "46:1723:6"
      }
    },
    "contracts/libs/Indexed.sol": {
      "id": 7,
      "ast": {
        "absolutePath": "contracts/libs/Indexed.sol",
        "exportedSymbols": {
          "Indexed": [
            1344
          ]
        },
        "id": 1345,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1332,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:7"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "Indexed",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 1344,
            "linearizedBaseContracts": [
              1344
            ],
            "name": "Indexed",
            "nameLocation": "81:7:7",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "functionSelector": "82ea7bfe",
                "id": 1334,
                "mutability": "immutable",
                "name": "deployedBlock",
                "nameLocation": "120:13:7",
                "nodeType": "VariableDeclaration",
                "scope": 1344,
                "src": "95:38:7",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1333,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "95:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1342,
                  "nodeType": "Block",
                  "src": "154:45:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1337,
                          "name": "deployedBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "164:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 1338,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "180:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "186:6:7",
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "180:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "164:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1341,
                      "nodeType": "ExpressionStatement",
                      "src": "164:28:7"
                    }
                  ]
                },
                "id": 1343,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1335,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "151:2:7"
                },
                "returnParameters": {
                  "id": 1336,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "154:0:7"
                },
                "scope": 1344,
                "src": "140:59:7",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1345,
            "src": "72:129:7",
            "usedErrors": []
          }
        ],
        "src": "46:156:7"
      }
    },
    "contracts/libs/Message.sol": {
      "id": 8,
      "ast": {
        "absolutePath": "contracts/libs/Message.sol",
        "exportedSymbols": {
          "Message": [
            1579
          ],
          "TypeCasts": [
            1620
          ]
        },
        "id": 1580,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1346,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:8"
          },
          {
            "absolutePath": "contracts/libs/TypeCasts.sol",
            "file": "./TypeCasts.sol",
            "id": 1348,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1580,
            "sourceUnit": 1621,
            "src": "72:42:8",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1347,
                  "name": "TypeCasts",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1620,
                  "src": "80:9:8",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "Message",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 1349,
              "nodeType": "StructuredDocumentation",
              "src": "116:102:8",
              "text": " @title Hyperlane Message Library\n @notice Library for formatted messages used by Mailbox*"
            },
            "fullyImplemented": true,
            "id": 1579,
            "linearizedBaseContracts": [
              1579
            ],
            "name": "Message",
            "nameLocation": "227:7:8",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "global": false,
                "id": 1352,
                "libraryName": {
                  "id": 1350,
                  "name": "TypeCasts",
                  "nameLocations": [
                    "247:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1620,
                  "src": "247:9:8"
                },
                "nodeType": "UsingForDirective",
                "src": "241:28:8",
                "typeName": {
                  "id": 1351,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "261:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                }
              },
              {
                "constant": true,
                "id": 1355,
                "mutability": "constant",
                "name": "VERSION_OFFSET",
                "nameLocation": "300:14:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "275:43:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1353,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "275:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "30",
                  "id": 1354,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "317:1:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1358,
                "mutability": "constant",
                "name": "NONCE_OFFSET",
                "nameLocation": "349:12:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "324:41:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1356,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "324:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "31",
                  "id": 1357,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "364:1:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1361,
                "mutability": "constant",
                "name": "ORIGIN_OFFSET",
                "nameLocation": "396:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "371:42:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1359,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "371:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "35",
                  "id": 1360,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "412:1:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5_by_1",
                    "typeString": "int_const 5"
                  },
                  "value": "5"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1364,
                "mutability": "constant",
                "name": "SENDER_OFFSET",
                "nameLocation": "444:13:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "419:42:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1362,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "419:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "39",
                  "id": 1363,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "460:1:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_9_by_1",
                    "typeString": "int_const 9"
                  },
                  "value": "9"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1367,
                "mutability": "constant",
                "name": "DESTINATION_OFFSET",
                "nameLocation": "492:18:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "467:48:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1365,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "467:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "3431",
                  "id": 1366,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "513:2:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_41_by_1",
                    "typeString": "int_const 41"
                  },
                  "value": "41"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1370,
                "mutability": "constant",
                "name": "RECIPIENT_OFFSET",
                "nameLocation": "546:16:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "521:46:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1368,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "521:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "3435",
                  "id": 1369,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "565:2:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_45_by_1",
                    "typeString": "int_const 45"
                  },
                  "value": "45"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "id": 1373,
                "mutability": "constant",
                "name": "BODY_OFFSET",
                "nameLocation": "598:11:8",
                "nodeType": "VariableDeclaration",
                "scope": 1579,
                "src": "573:41:8",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1371,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "573:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "3737",
                  "id": 1372,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "612:2:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_77_by_1",
                    "typeString": "int_const 77"
                  },
                  "value": "77"
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1404,
                  "nodeType": "Block",
                  "src": "1548:266:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1395,
                            "name": "_version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1376,
                            "src": "1611:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 1396,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "1637:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 1397,
                            "name": "_originDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1380,
                            "src": "1661:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 1398,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1382,
                            "src": "1692:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1399,
                            "name": "_destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1384,
                            "src": "1717:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 1400,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1386,
                            "src": "1753:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1401,
                            "name": "_messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "1781:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 1393,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1577:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1581:12:8",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1577:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1577:230:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1392,
                      "id": 1403,
                      "nodeType": "Return",
                      "src": "1558:249:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1374,
                  "nodeType": "StructuredDocumentation",
                  "src": "621:654:8",
                  "text": " @notice Returns formatted (packed) Hyperlane message with provided fields\n @dev This function should only be used in memory message construction.\n @param _version The version of the origin and destination Mailboxes\n @param _nonce A nonce to uniquely identify the message on its origin chain\n @param _originDomain Domain of origin chain\n @param _sender Address of sender as bytes32\n @param _destinationDomain Domain of destination chain\n @param _recipient Address of recipient on destination chain as bytes32\n @param _messageBody Raw bytes of message body\n @return Formatted message"
                },
                "id": 1405,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "formatMessage",
                "nameLocation": "1289:13:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1389,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1376,
                      "mutability": "mutable",
                      "name": "_version",
                      "nameLocation": "1318:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1312:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1375,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1312:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "_nonce",
                      "nameLocation": "1343:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1336:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1377,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1336:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1380,
                      "mutability": "mutable",
                      "name": "_originDomain",
                      "nameLocation": "1366:13:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1359:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1379,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1359:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1382,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "1397:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1389:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1381,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1389:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1384,
                      "mutability": "mutable",
                      "name": "_destinationDomain",
                      "nameLocation": "1421:18:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1414:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1383,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1414:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1386,
                      "mutability": "mutable",
                      "name": "_recipient",
                      "nameLocation": "1457:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1449:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1385,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1449:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1388,
                      "mutability": "mutable",
                      "name": "_messageBody",
                      "nameLocation": "1492:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1477:27:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1387,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1477:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1302:208:8"
                },
                "returnParameters": {
                  "id": 1392,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1391,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1405,
                      "src": "1534:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1390,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1534:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1533:14:8"
                },
                "scope": 1579,
                "src": "1280:534:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1417,
                  "nodeType": "Block",
                  "src": "2028:43:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1414,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "2055:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1413,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2045:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 1415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2045:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 1412,
                      "id": 1416,
                      "nodeType": "Return",
                      "src": "2038:26:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1406,
                  "nodeType": "StructuredDocumentation",
                  "src": "1820:136:8",
                  "text": " @notice Returns the message ID.\n @param _message ABI encoded Hyperlane message.\n @return ID of `_message`"
                },
                "id": 1418,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "id",
                "nameLocation": "1970:2:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1409,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1408,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "1986:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1418,
                      "src": "1973:21:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1407,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1973:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1972:23:8"
                },
                "returnParameters": {
                  "id": 1412,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1411,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1418,
                      "src": "2019:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1410,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2019:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2018:9:8"
                },
                "scope": 1579,
                "src": "1961:110:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1437,
                  "nodeType": "Block",
                  "src": "2300:76:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1430,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "2330:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "id": 1432,
                                  "name": "NONCE_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1358,
                                  "src": "2354:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "2330:37:8",
                                "startExpression": {
                                  "id": 1431,
                                  "name": "VERSION_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1355,
                                  "src": "2339:14:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 1429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2323:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 1428,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "2323:6:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2323:45:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          ],
                          "id": 1427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2317:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1426,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "2317:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2317:52:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 1425,
                      "id": 1436,
                      "nodeType": "Return",
                      "src": "2310:59:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1419,
                  "nodeType": "StructuredDocumentation",
                  "src": "2077:146:8",
                  "text": " @notice Returns the message version.\n @param _message ABI encoded Hyperlane message.\n @return Version of `_message`"
                },
                "id": 1438,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "version",
                "nameLocation": "2237:7:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1422,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1421,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "2260:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1438,
                      "src": "2245:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1420,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2245:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2244:25:8"
                },
                "returnParameters": {
                  "id": 1425,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1424,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1438,
                      "src": "2293:5:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1423,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2293:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2292:7:8"
                },
                "scope": 1579,
                "src": "2228:148:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1457,
                  "nodeType": "Block",
                  "src": "2600:76:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1450,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1441,
                                  "src": "2631:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "id": 1452,
                                  "name": "ORIGIN_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1361,
                                  "src": "2653:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "2631:36:8",
                                "startExpression": {
                                  "id": 1451,
                                  "name": "NONCE_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1358,
                                  "src": "2640:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2624:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 1448,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "2624:6:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2624:44:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2617:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 1446,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2617:6:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2617:52:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "functionReturnParameters": 1445,
                      "id": 1456,
                      "nodeType": "Return",
                      "src": "2610:59:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1439,
                  "nodeType": "StructuredDocumentation",
                  "src": "2382:142:8",
                  "text": " @notice Returns the message nonce.\n @param _message ABI encoded Hyperlane message.\n @return Nonce of `_message`"
                },
                "id": 1458,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "nonce",
                "nameLocation": "2538:5:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1442,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1441,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "2559:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1458,
                      "src": "2544:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1440,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2544:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2543:25:8"
                },
                "returnParameters": {
                  "id": 1445,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1444,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1458,
                      "src": "2592:6:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1443,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2592:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2591:8:8"
                },
                "scope": 1579,
                "src": "2529:147:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1477,
                  "nodeType": "Block",
                  "src": "2917:77:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1470,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1461,
                                  "src": "2948:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "id": 1472,
                                  "name": "SENDER_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1364,
                                  "src": "2971:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "2948:37:8",
                                "startExpression": {
                                  "id": 1471,
                                  "name": "ORIGIN_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1361,
                                  "src": "2957:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 1469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2941:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 1468,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "2941:6:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2941:45:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2934:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 1466,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2934:6:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2934:53:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "functionReturnParameters": 1465,
                      "id": 1476,
                      "nodeType": "Return",
                      "src": "2927:60:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1459,
                  "nodeType": "StructuredDocumentation",
                  "src": "2682:158:8",
                  "text": " @notice Returns the message origin domain.\n @param _message ABI encoded Hyperlane message.\n @return Origin domain of `_message`"
                },
                "id": 1478,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "origin",
                "nameLocation": "2854:6:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1462,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1461,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "2876:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "2861:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1460,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2861:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2860:25:8"
                },
                "returnParameters": {
                  "id": 1465,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1464,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1478,
                      "src": "2909:6:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1463,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2909:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2908:8:8"
                },
                "scope": 1579,
                "src": "2845:149:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1494,
                  "nodeType": "Block",
                  "src": "3244:75:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1488,
                              "name": "_message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "3269:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "id": 1490,
                              "name": "DESTINATION_OFFSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "3292:18:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "3269:42:8",
                            "startExpression": {
                              "id": 1489,
                              "name": "SENDER_OFFSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1364,
                              "src": "3278:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3261:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1486,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3261:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3261:51:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 1485,
                      "id": 1493,
                      "nodeType": "Return",
                      "src": "3254:58:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1479,
                  "nodeType": "StructuredDocumentation",
                  "src": "3000:166:8",
                  "text": " @notice Returns the message sender as bytes32.\n @param _message ABI encoded Hyperlane message.\n @return Sender of `_message` as bytes32"
                },
                "id": 1495,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sender",
                "nameLocation": "3180:6:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1482,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1481,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "3202:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "3187:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1480,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3187:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3186:25:8"
                },
                "returnParameters": {
                  "id": 1485,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1484,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1495,
                      "src": "3235:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1483,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3235:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3234:9:8"
                },
                "scope": 1579,
                "src": "3171:148:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1509,
                  "nodeType": "Block",
                  "src": "3590:59:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1504,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1498,
                                "src": "3614:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 1503,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1495,
                              "src": "3607:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes calldata) pure returns (bytes32)"
                              }
                            },
                            "id": 1505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3607:16:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3624:16:8",
                          "memberName": "bytes32ToAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1619,
                          "src": "3607:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$attached_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (address)"
                          }
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3607:35:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1502,
                      "id": 1508,
                      "nodeType": "Return",
                      "src": "3600:42:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1496,
                  "nodeType": "StructuredDocumentation",
                  "src": "3325:166:8",
                  "text": " @notice Returns the message sender as address.\n @param _message ABI encoded Hyperlane message.\n @return Sender of `_message` as address"
                },
                "id": 1510,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "senderAddress",
                "nameLocation": "3505:13:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1499,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "3543:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1510,
                      "src": "3528:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3528:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3518:39:8"
                },
                "returnParameters": {
                  "id": 1502,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1501,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1510,
                      "src": "3581:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1500,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3581:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3580:9:8"
                },
                "scope": 1579,
                "src": "3496:153:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1529,
                  "nodeType": "Block",
                  "src": "3919:85:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 1522,
                                  "name": "_message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1513,
                                  "src": "3950:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "endExpression": {
                                  "id": 1524,
                                  "name": "RECIPIENT_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1370,
                                  "src": "3978:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1525,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexRangeAccess",
                                "src": "3950:45:8",
                                "startExpression": {
                                  "id": 1523,
                                  "name": "DESTINATION_OFFSET",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1367,
                                  "src": "3959:18:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                  "typeString": "bytes calldata slice"
                                }
                              ],
                              "id": 1521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3943:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              },
                              "typeName": {
                                "id": 1520,
                                "name": "bytes4",
                                "nodeType": "ElementaryTypeName",
                                "src": "3943:6:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3943:53:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "id": 1519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3936:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint32_$",
                            "typeString": "type(uint32)"
                          },
                          "typeName": {
                            "id": 1518,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3936:6:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3936:61:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "functionReturnParameters": 1517,
                      "id": 1528,
                      "nodeType": "Return",
                      "src": "3929:68:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1511,
                  "nodeType": "StructuredDocumentation",
                  "src": "3655:168:8",
                  "text": " @notice Returns the message destination domain.\n @param _message ABI encoded Hyperlane message.\n @return Destination domain of `_message`"
                },
                "id": 1530,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "destination",
                "nameLocation": "3837:11:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1514,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1513,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "3873:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1530,
                      "src": "3858:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1512,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3858:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3848:39:8"
                },
                "returnParameters": {
                  "id": 1517,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1516,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1530,
                      "src": "3911:6:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1515,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3911:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3910:8:8"
                },
                "scope": 1579,
                "src": "3828:176:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1546,
                  "nodeType": "Block",
                  "src": "4277:71:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1540,
                              "name": "_message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "4302:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "endExpression": {
                              "id": 1542,
                              "name": "BODY_OFFSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "4328:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "4302:38:8",
                            "startExpression": {
                              "id": 1541,
                              "name": "RECIPIENT_OFFSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1370,
                              "src": "4311:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 1539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4294:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1538,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4294:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4294:47:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 1537,
                      "id": 1545,
                      "nodeType": "Return",
                      "src": "4287:54:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1531,
                  "nodeType": "StructuredDocumentation",
                  "src": "4010:172:8",
                  "text": " @notice Returns the message recipient as bytes32.\n @param _message ABI encoded Hyperlane message.\n @return Recipient of `_message` as bytes32"
                },
                "id": 1547,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "recipient",
                "nameLocation": "4196:9:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1534,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1533,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "4230:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1547,
                      "src": "4215:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1532,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4215:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4205:39:8"
                },
                "returnParameters": {
                  "id": 1537,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1536,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1547,
                      "src": "4268:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1535,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4268:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4267:9:8"
                },
                "scope": 1579,
                "src": "4187:161:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1561,
                  "nodeType": "Block",
                  "src": "4628:62:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1556,
                                "name": "_message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1550,
                                "src": "4655:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 1555,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1547,
                              "src": "4645:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes calldata) pure returns (bytes32)"
                              }
                            },
                            "id": 1557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4645:19:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4665:16:8",
                          "memberName": "bytes32ToAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1619,
                          "src": "4645:36:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_address_$attached_to$_t_bytes32_$",
                            "typeString": "function (bytes32) pure returns (address)"
                          }
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4645:38:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1554,
                      "id": 1560,
                      "nodeType": "Return",
                      "src": "4638:45:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1548,
                  "nodeType": "StructuredDocumentation",
                  "src": "4354:172:8",
                  "text": " @notice Returns the message recipient as address.\n @param _message ABI encoded Hyperlane message.\n @return Recipient of `_message` as address"
                },
                "id": 1562,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "recipientAddress",
                "nameLocation": "4540:16:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1551,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1550,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "4581:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1562,
                      "src": "4566:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1549,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4566:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4556:39:8"
                },
                "returnParameters": {
                  "id": 1554,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1553,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1562,
                      "src": "4619:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1552,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4619:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4618:9:8"
                },
                "scope": 1579,
                "src": "4531:159:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1577,
                  "nodeType": "Block",
                  "src": "4933:53:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 1572,
                              "name": "_message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1565,
                              "src": "4956:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 1574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "4956:22:8",
                            "startExpression": {
                              "id": 1573,
                              "name": "BODY_OFFSET",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "4965:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          ],
                          "id": 1571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4950:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 1570,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4950:5:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4950:29:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 1569,
                      "id": 1576,
                      "nodeType": "Return",
                      "src": "4943:36:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1563,
                  "nodeType": "StructuredDocumentation",
                  "src": "4696:140:8",
                  "text": " @notice Returns the message body.\n @param _message ABI encoded Hyperlane message.\n @return Body of `_message`"
                },
                "id": 1578,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "body",
                "nameLocation": "4850:4:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1566,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1565,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "4879:8:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1578,
                      "src": "4864:23:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1564,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4864:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4854:39:8"
                },
                "returnParameters": {
                  "id": 1569,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1568,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1578,
                      "src": "4917:14:8",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1567,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4917:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4916:16:8"
                },
                "scope": 1579,
                "src": "4841:145:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1580,
            "src": "219:4769:8",
            "usedErrors": []
          }
        ],
        "src": "46:4943:8"
      }
    },
    "contracts/libs/TypeCasts.sol": {
      "id": 9,
      "ast": {
        "absolutePath": "contracts/libs/TypeCasts.sol",
        "exportedSymbols": {
          "TypeCasts": [
            1620
          ]
        },
        "id": 1621,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1581,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:9"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "TypeCasts",
            "contractDependencies": [],
            "contractKind": "library",
            "fullyImplemented": true,
            "id": 1620,
            "linearizedBaseContracts": [
              1620
            ],
            "name": "TypeCasts",
            "nameLocation": "81:9:9",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1599,
                  "nodeType": "Block",
                  "src": "203:56:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1594,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1583,
                                    "src": "244:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "236:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 1592,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "236:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1595,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "236:14:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 1591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "228:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1590,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "228:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "228:23:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "220:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1588,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "220:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "220:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 1587,
                      "id": 1598,
                      "nodeType": "Return",
                      "src": "213:39:9"
                    }
                  ]
                },
                "id": 1600,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "addressToBytes32",
                "nameLocation": "139:16:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1584,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1583,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nameLocation": "164:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1600,
                      "src": "156:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1582,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "156:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "155:15:9"
                },
                "returnParameters": {
                  "id": 1587,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1586,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1600,
                      "src": "194:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1585,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "194:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "193:9:9"
                },
                "scope": 1620,
                "src": "130:129:9",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1618,
                  "nodeType": "Block",
                  "src": "370:55:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1613,
                                    "name": "_buf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1602,
                                    "src": "411:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 1612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "403:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1611,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "403:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "403:13:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "395:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 1609,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "395:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "395:22:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "387:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "387:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "387:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1606,
                      "id": 1617,
                      "nodeType": "Return",
                      "src": "380:38:9"
                    }
                  ]
                },
                "id": 1619,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "bytes32ToAddress",
                "nameLocation": "307:16:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1603,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1602,
                      "mutability": "mutable",
                      "name": "_buf",
                      "nameLocation": "332:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1619,
                      "src": "324:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1601,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "324:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "323:14:9"
                },
                "returnParameters": {
                  "id": 1606,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1605,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1619,
                      "src": "361:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1604,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "361:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "360:9:9"
                },
                "scope": 1620,
                "src": "298:127:9",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1621,
            "src": "73:354:9",
            "usedErrors": []
          }
        ],
        "src": "46:382:9"
      }
    },
    "contracts/mock/MockMailbox.sol": {
      "id": 10,
      "ast": {
        "absolutePath": "contracts/mock/MockMailbox.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            1099
          ],
          "IMessageRecipient": [
            1285
          ],
          "IPostDispatchHook": [
            1330
          ],
          "ISpecifiesInterchainSecurityModule": [
            1106
          ],
          "Mailbox": [
            702
          ],
          "Message": [
            1579
          ],
          "MockMailbox": [
            1826
          ],
          "TestIsm": [
            1865
          ],
          "TestPostDispatchHook": [
            1935
          ],
          "TypeCasts": [
            1620
          ],
          "Versioned": [
            1942
          ]
        },
        "id": 1827,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1622,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:10"
          },
          {
            "absolutePath": "contracts/upgrade/Versioned.sol",
            "file": "../upgrade/Versioned.sol",
            "id": 1624,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1943,
            "src": "57:51:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1623,
                  "name": "Versioned",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1942,
                  "src": "65:9:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/libs/TypeCasts.sol",
            "file": "../libs/TypeCasts.sol",
            "id": 1626,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1621,
            "src": "109:48:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1625,
                  "name": "TypeCasts",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1620,
                  "src": "117:9:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/libs/Message.sol",
            "file": "../libs/Message.sol",
            "id": 1628,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1580,
            "src": "158:44:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1627,
                  "name": "Message",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1579,
                  "src": "166:7:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IMessageRecipient.sol",
            "file": "../interfaces/IMessageRecipient.sol",
            "id": 1630,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1286,
            "src": "203:70:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1629,
                  "name": "IMessageRecipient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1285,
                  "src": "211:17:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
            "file": "../interfaces/IInterchainSecurityModule.sol",
            "id": 1633,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1107,
            "src": "274:122:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1631,
                  "name": "IInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "282:25:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              },
              {
                "foreign": {
                  "id": 1632,
                  "name": "ISpecifiesInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1106,
                  "src": "309:34:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/Mailbox.sol",
            "file": "../Mailbox.sol",
            "id": 1635,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 703,
            "src": "397:39:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1634,
                  "name": "Mailbox",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 702,
                  "src": "405:7:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/hooks/IPostDispatchHook.sol",
            "file": "../interfaces/hooks/IPostDispatchHook.sol",
            "id": 1637,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1331,
            "src": "437:76:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1636,
                  "name": "IPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1330,
                  "src": "445:17:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/test/TestIsm.sol",
            "file": "../test/TestIsm.sol",
            "id": 1639,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1866,
            "src": "515:44:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1638,
                  "name": "TestIsm",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1865,
                  "src": "523:7:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/test/TestPostDispatchHook.sol",
            "file": "../test/TestPostDispatchHook.sol",
            "id": 1641,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1827,
            "sourceUnit": 1936,
            "src": "560:70:10",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1640,
                  "name": "TestPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1935,
                  "src": "568:20:10",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1642,
                  "name": "Mailbox",
                  "nameLocations": [
                    "656:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 702,
                  "src": "656:7:10"
                },
                "id": 1643,
                "nodeType": "InheritanceSpecifier",
                "src": "656:7:10"
              }
            ],
            "canonicalName": "MockMailbox",
            "contractDependencies": [
              1865,
              1935
            ],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 1826,
            "linearizedBaseContracts": [
              1826,
              702,
              2075,
              2625,
              2244,
              1942,
              1344,
              1273
            ],
            "name": "MockMailbox",
            "nameLocation": "641:11:10",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "global": false,
                "id": 1646,
                "libraryName": {
                  "id": 1644,
                  "name": "Message",
                  "nameLocations": [
                    "676:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1579,
                  "src": "676:7:10"
                },
                "nodeType": "UsingForDirective",
                "src": "670:24:10",
                "typeName": {
                  "id": 1645,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "688:5:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                }
              },
              {
                "constant": false,
                "functionSelector": "8209d312",
                "id": 1649,
                "mutability": "mutable",
                "name": "inboundUnprocessedNonce",
                "nameLocation": "714:23:10",
                "nodeType": "VariableDeclaration",
                "scope": 1826,
                "src": "700:41:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 1647,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "700:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": {
                  "hexValue": "30",
                  "id": 1648,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "740:1:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "d12164e4",
                "id": 1652,
                "mutability": "mutable",
                "name": "inboundProcessedNonce",
                "nameLocation": "761:21:10",
                "nodeType": "VariableDeclaration",
                "scope": 1826,
                "src": "747:39:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 1650,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "747:6:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "value": {
                  "hexValue": "30",
                  "id": 1651,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "785:1:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "a3b4919f",
                "id": 1657,
                "mutability": "mutable",
                "name": "remoteMailboxes",
                "nameLocation": "831:15:10",
                "nodeType": "VariableDeclaration",
                "scope": 1826,
                "src": "793:53:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_contract$_MockMailbox_$1826_$",
                  "typeString": "mapping(uint32 => contract MockMailbox)"
                },
                "typeName": {
                  "id": 1656,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 1653,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "793:30:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint32_$_t_contract$_MockMailbox_$1826_$",
                    "typeString": "mapping(uint32 => contract MockMailbox)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 1655,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1654,
                      "name": "MockMailbox",
                      "nameLocations": [
                        "811:11:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1826,
                      "src": "811:11:10"
                    },
                    "referencedDeclaration": 1826,
                    "src": "811:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockMailbox_$1826",
                      "typeString": "contract MockMailbox"
                    }
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "92d28b3d",
                "id": 1661,
                "mutability": "mutable",
                "name": "inboundMessages",
                "nameLocation": "885:15:10",
                "nodeType": "VariableDeclaration",
                "scope": 1826,
                "src": "852:48:10",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                  "typeString": "mapping(uint256 => bytes)"
                },
                "typeName": {
                  "id": 1660,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "852:25:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                    "typeString": "mapping(uint256 => bytes)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 1659,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  }
                },
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1705,
                  "nodeType": "Block",
                  "src": "952:265:10",
                  "statements": [
                    {
                      "assignments": [
                        1671
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1671,
                          "mutability": "mutable",
                          "name": "ism",
                          "nameLocation": "970:3:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1705,
                          "src": "962:11:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestIsm_$1865",
                            "typeString": "contract TestIsm"
                          },
                          "typeName": {
                            "id": 1670,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1669,
                              "name": "TestIsm",
                              "nameLocations": [
                                "962:7:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1865,
                              "src": "962:7:10"
                            },
                            "referencedDeclaration": 1865,
                            "src": "962:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestIsm_$1865",
                              "typeString": "contract TestIsm"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1676,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "976:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestIsm_$1865_$",
                            "typeString": "function () returns (contract TestIsm)"
                          },
                          "typeName": {
                            "id": 1673,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1672,
                              "name": "TestIsm",
                              "nameLocations": [
                                "980:7:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1865,
                              "src": "980:7:10"
                            },
                            "referencedDeclaration": 1865,
                            "src": "980:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestIsm_$1865",
                              "typeString": "contract TestIsm"
                            }
                          }
                        },
                        "id": 1675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "976:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestIsm_$1865",
                          "typeString": "contract TestIsm"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "962:27:10"
                    },
                    {
                      "expression": {
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1677,
                          "name": "defaultIsm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "999:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                            "typeString": "contract IInterchainSecurityModule"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1678,
                          "name": "ism",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "1012:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestIsm_$1865",
                            "typeString": "contract TestIsm"
                          }
                        },
                        "src": "999:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$1099",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "id": 1680,
                      "nodeType": "ExpressionStatement",
                      "src": "999:16:10"
                    },
                    {
                      "assignments": [
                        1683
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1683,
                          "mutability": "mutable",
                          "name": "hook",
                          "nameLocation": "1047:4:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1705,
                          "src": "1026:25:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestPostDispatchHook_$1935",
                            "typeString": "contract TestPostDispatchHook"
                          },
                          "typeName": {
                            "id": 1682,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1681,
                              "name": "TestPostDispatchHook",
                              "nameLocations": [
                                "1026:20:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1935,
                              "src": "1026:20:10"
                            },
                            "referencedDeclaration": 1935,
                            "src": "1026:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestPostDispatchHook_$1935",
                              "typeString": "contract TestPostDispatchHook"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1688,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1054:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestPostDispatchHook_$1935_$",
                            "typeString": "function () returns (contract TestPostDispatchHook)"
                          },
                          "typeName": {
                            "id": 1685,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1684,
                              "name": "TestPostDispatchHook",
                              "nameLocations": [
                                "1058:20:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1935,
                              "src": "1058:20:10"
                            },
                            "referencedDeclaration": 1935,
                            "src": "1058:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestPostDispatchHook_$1935",
                              "typeString": "contract TestPostDispatchHook"
                            }
                          }
                        },
                        "id": 1687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1054:26:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestPostDispatchHook_$1935",
                          "typeString": "contract TestPostDispatchHook"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1026:54:10"
                    },
                    {
                      "expression": {
                        "id": 1691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1689,
                          "name": "defaultHook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1090:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                            "typeString": "contract IPostDispatchHook"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1690,
                          "name": "hook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "1104:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestPostDispatchHook_$1935",
                            "typeString": "contract TestPostDispatchHook"
                          }
                        },
                        "src": "1090:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "id": 1692,
                      "nodeType": "ExpressionStatement",
                      "src": "1090:18:10"
                    },
                    {
                      "expression": {
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1693,
                          "name": "requiredHook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1118:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                            "typeString": "contract IPostDispatchHook"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1694,
                          "name": "hook",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "1133:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestPostDispatchHook_$1935",
                            "typeString": "contract TestPostDispatchHook"
                          }
                        },
                        "src": "1118:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "id": 1696,
                      "nodeType": "ExpressionStatement",
                      "src": "1118:19:10"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1698,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1167:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1171:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1167:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1697,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2069,
                          "src": "1148:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 1700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:30:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1701,
                      "nodeType": "ExpressionStatement",
                      "src": "1148:30:10"
                    },
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1702,
                          "name": "_disableInitializers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2225,
                          "src": "1188:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1704,
                      "nodeType": "ExpressionStatement",
                      "src": "1188:22:10"
                    }
                  ]
                },
                "id": 1706,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "id": 1666,
                        "name": "_domain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1663,
                        "src": "943:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "id": 1667,
                    "kind": "baseConstructorSpecifier",
                    "modifierName": {
                      "id": 1665,
                      "name": "Mailbox",
                      "nameLocations": [
                        "935:7:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 702,
                      "src": "935:7:10"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "935:16:10"
                  }
                ],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1664,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1663,
                      "mutability": "mutable",
                      "name": "_domain",
                      "nameLocation": "926:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1706,
                      "src": "919:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1662,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "919:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "918:16:10"
                },
                "returnParameters": {
                  "id": 1668,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "952:0:10"
                },
                "scope": 1826,
                "src": "907:310:10",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1720,
                  "nodeType": "Block",
                  "src": "1296:52:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1714,
                            "name": "remoteMailboxes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1657,
                            "src": "1306:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_contract$_MockMailbox_$1826_$",
                              "typeString": "mapping(uint32 => contract MockMailbox)"
                            }
                          },
                          "id": 1716,
                          "indexExpression": {
                            "id": 1715,
                            "name": "_domain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1708,
                            "src": "1322:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1306:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockMailbox_$1826",
                            "typeString": "contract MockMailbox"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1717,
                          "name": "_mailbox",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1711,
                          "src": "1333:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockMailbox_$1826",
                            "typeString": "contract MockMailbox"
                          }
                        },
                        "src": "1306:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockMailbox_$1826",
                          "typeString": "contract MockMailbox"
                        }
                      },
                      "id": 1719,
                      "nodeType": "ExpressionStatement",
                      "src": "1306:35:10"
                    }
                  ]
                },
                "functionSelector": "59b3f6e0",
                "id": 1721,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "addRemoteMailbox",
                "nameLocation": "1232:16:10",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1712,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1708,
                      "mutability": "mutable",
                      "name": "_domain",
                      "nameLocation": "1256:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1721,
                      "src": "1249:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1707,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1249:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1711,
                      "mutability": "mutable",
                      "name": "_mailbox",
                      "nameLocation": "1277:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1721,
                      "src": "1265:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockMailbox_$1826",
                        "typeString": "contract MockMailbox"
                      },
                      "typeName": {
                        "id": 1710,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1709,
                          "name": "MockMailbox",
                          "nameLocations": [
                            "1265:11:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1826,
                          "src": "1265:11:10"
                        },
                        "referencedDeclaration": 1826,
                        "src": "1265:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockMailbox_$1826",
                          "typeString": "contract MockMailbox"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1248:38:10"
                },
                "returnParameters": {
                  "id": 1713,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1296:0:10"
                },
                "scope": 1826,
                "src": "1223:125:10",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  468
                ],
                "body": {
                  "id": 1785,
                  "nodeType": "Block",
                  "src": "1589:598:10",
                  "statements": [
                    {
                      "assignments": [
                        1739
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1739,
                          "mutability": "mutable",
                          "name": "message",
                          "nameLocation": "1612:7:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1785,
                          "src": "1599:20:10",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1738,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1599:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1745,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1741,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1723,
                            "src": "1649:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 1742,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1725,
                            "src": "1680:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1743,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1727,
                            "src": "1710:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 1740,
                          "name": "_buildMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 701,
                          "src": "1622:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint32,bytes32,bytes calldata) view returns (bytes memory)"
                          }
                        },
                        "id": 1744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1622:109:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1599:132:10"
                    },
                    {
                      "assignments": [
                        1747
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1747,
                          "mutability": "mutable",
                          "name": "id",
                          "nameLocation": "1749:2:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1785,
                          "src": "1741:10:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 1746,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1741:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1756,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1750,
                            "name": "destinationDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1723,
                            "src": "1782:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 1751,
                            "name": "recipientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1725,
                            "src": "1813:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1752,
                            "name": "messageBody",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1727,
                            "src": "1843:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 1753,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1729,
                            "src": "1868:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 1754,
                            "name": "hook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1732,
                            "src": "1890:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                              "typeString": "contract IPostDispatchHook"
                            }
                          ],
                          "expression": {
                            "id": 1748,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "1754:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_MockMailbox_$1826_$",
                              "typeString": "type(contract super MockMailbox)"
                            }
                          },
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1760:8:10",
                          "memberName": "dispatch",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 468,
                          "src": "1754:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint32_$_t_bytes32_$_t_bytes_calldata_ptr_$_t_bytes_calldata_ptr_$_t_contract$_IPostDispatchHook_$1330_$returns$_t_bytes32_$",
                            "typeString": "function (uint32,bytes32,bytes calldata,bytes calldata,contract IPostDispatchHook) returns (bytes32)"
                          }
                        },
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1754:150:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1741:163:10"
                    },
                    {
                      "assignments": [
                        1759
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1759,
                          "mutability": "mutable",
                          "name": "_destinationMailbox",
                          "nameLocation": "1927:19:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1785,
                          "src": "1915:31:10",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockMailbox_$1826",
                            "typeString": "contract MockMailbox"
                          },
                          "typeName": {
                            "id": 1758,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1757,
                              "name": "MockMailbox",
                              "nameLocations": [
                                "1915:11:10"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1826,
                              "src": "1915:11:10"
                            },
                            "referencedDeclaration": 1826,
                            "src": "1915:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockMailbox_$1826",
                              "typeString": "contract MockMailbox"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1763,
                      "initialValue": {
                        "baseExpression": {
                          "id": 1760,
                          "name": "remoteMailboxes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1657,
                          "src": "1949:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_contract$_MockMailbox_$1826_$",
                            "typeString": "mapping(uint32 => contract MockMailbox)"
                          }
                        },
                        "id": 1762,
                        "indexExpression": {
                          "id": 1761,
                          "name": "destinationDomain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1723,
                          "src": "1965:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1949:34:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockMailbox_$1826",
                          "typeString": "contract MockMailbox"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1915:68:10"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1767,
                                  "name": "_destinationMailbox",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1759,
                                  "src": "2022:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockMailbox_$1826",
                                    "typeString": "contract MockMailbox"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockMailbox_$1826",
                                    "typeString": "contract MockMailbox"
                                  }
                                ],
                                "id": 1766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2014:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1765,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2014:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2014:28:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2054:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2046:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1769,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2046:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2046:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2014:42:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d697373696e672072656d6f7465206d61696c626f78",
                            "id": 1774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2070:24:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ee29209b0af12c5ef6bb649a063145e2a4893e1fd0a4e4b8579fbd6fcfaeaaec",
                              "typeString": "literal_string \"Missing remote mailbox\""
                            },
                            "value": "Missing remote mailbox"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ee29209b0af12c5ef6bb649a063145e2a4893e1fd0a4e4b8579fbd6fcfaeaaec",
                              "typeString": "literal_string \"Missing remote mailbox\""
                            }
                          ],
                          "id": 1764,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1993:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1993:111:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1776,
                      "nodeType": "ExpressionStatement",
                      "src": "1993:111:10"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1780,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1739,
                            "src": "2152:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1777,
                            "name": "_destinationMailbox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1759,
                            "src": "2114:19:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockMailbox_$1826",
                              "typeString": "contract MockMailbox"
                            }
                          },
                          "id": 1779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2134:17:10",
                          "memberName": "addInboundMessage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1801,
                          "src": "2114:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory) external"
                          }
                        },
                        "id": 1781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2114:46:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1782,
                      "nodeType": "ExpressionStatement",
                      "src": "2114:46:10"
                    },
                    {
                      "expression": {
                        "id": 1783,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1747,
                        "src": "2178:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 1737,
                      "id": 1784,
                      "nodeType": "Return",
                      "src": "2171:9:10"
                    }
                  ]
                },
                "functionSelector": "10b83dc0",
                "id": 1786,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "dispatch",
                "nameLocation": "1363:8:10",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1734,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1562:8:10"
                },
                "parameters": {
                  "id": 1733,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1723,
                      "mutability": "mutable",
                      "name": "destinationDomain",
                      "nameLocation": "1388:17:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1786,
                      "src": "1381:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 1722,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1381:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1725,
                      "mutability": "mutable",
                      "name": "recipientAddress",
                      "nameLocation": "1423:16:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1786,
                      "src": "1415:24:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1724,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1415:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1727,
                      "mutability": "mutable",
                      "name": "messageBody",
                      "nameLocation": "1464:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1786,
                      "src": "1449:26:10",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1726,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1449:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1729,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "1500:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1786,
                      "src": "1485:23:10",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1728,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1485:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1732,
                      "mutability": "mutable",
                      "name": "hook",
                      "nameLocation": "1536:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1786,
                      "src": "1518:22:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                        "typeString": "contract IPostDispatchHook"
                      },
                      "typeName": {
                        "id": 1731,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1730,
                          "name": "IPostDispatchHook",
                          "nameLocations": [
                            "1518:17:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1330,
                          "src": "1518:17:10"
                        },
                        "referencedDeclaration": 1330,
                        "src": "1518:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPostDispatchHook_$1330",
                          "typeString": "contract IPostDispatchHook"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1371:175:10"
                },
                "returnParameters": {
                  "id": 1737,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1736,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1786,
                      "src": "1580:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1735,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1579:9:10"
                },
                "scope": 1826,
                "src": "1354:833:10",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1800,
                  "nodeType": "Block",
                  "src": "2253:102:10",
                  "statements": [
                    {
                      "expression": {
                        "id": 1795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 1791,
                            "name": "inboundMessages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1661,
                            "src": "2263:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                              "typeString": "mapping(uint256 => bytes storage ref)"
                            }
                          },
                          "id": 1793,
                          "indexExpression": {
                            "id": 1792,
                            "name": "inboundUnprocessedNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1649,
                            "src": "2279:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2263:40:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1794,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1788,
                          "src": "2306:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "src": "2263:50:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 1796,
                      "nodeType": "ExpressionStatement",
                      "src": "2263:50:10"
                    },
                    {
                      "expression": {
                        "id": 1798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "2323:25:10",
                        "subExpression": {
                          "id": 1797,
                          "name": "inboundUnprocessedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1649,
                          "src": "2323:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 1799,
                      "nodeType": "ExpressionStatement",
                      "src": "2323:25:10"
                    }
                  ]
                },
                "functionSelector": "3288990c",
                "id": 1801,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "addInboundMessage",
                "nameLocation": "2202:17:10",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1789,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1788,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "2235:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1801,
                      "src": "2220:22:10",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1787,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2220:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2219:24:10"
                },
                "returnParameters": {
                  "id": 1790,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2253:0:10"
                },
                "scope": 1826,
                "src": "2193:162:10",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 1824,
                  "nodeType": "Block",
                  "src": "2405:166:10",
                  "statements": [
                    {
                      "assignments": [
                        1805
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1805,
                          "mutability": "mutable",
                          "name": "_message",
                          "nameLocation": "2428:8:10",
                          "nodeType": "VariableDeclaration",
                          "scope": 1824,
                          "src": "2415:21:10",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1804,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2415:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1809,
                      "initialValue": {
                        "baseExpression": {
                          "id": 1806,
                          "name": "inboundMessages",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1661,
                          "src": "2439:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                            "typeString": "mapping(uint256 => bytes storage ref)"
                          }
                        },
                        "id": 1808,
                        "indexExpression": {
                          "id": 1807,
                          "name": "inboundProcessedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1652,
                          "src": "2455:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2439:38:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2415:62:10"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 1817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2518:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          {
                            "id": 1818,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1805,
                            "src": "2522:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1813,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2503:4:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MockMailbox_$1826",
                                      "typeString": "contract MockMailbox"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MockMailbox_$1826",
                                      "typeString": "contract MockMailbox"
                                    }
                                  ],
                                  "id": 1812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2495:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1811,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2495:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2495:13:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1810,
                              "name": "Mailbox",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 702,
                              "src": "2487:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Mailbox_$702_$",
                                "typeString": "type(contract Mailbox)"
                              }
                            },
                            "id": 1815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2487:22:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Mailbox_$702",
                              "typeString": "contract Mailbox"
                            }
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2510:7:10",
                          "memberName": "process",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 329,
                          "src": "2487:30:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                            "typeString": "function (bytes memory,bytes memory) payable external"
                          }
                        },
                        "id": 1819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2487:44:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1820,
                      "nodeType": "ExpressionStatement",
                      "src": "2487:44:10"
                    },
                    {
                      "expression": {
                        "id": 1822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "2541:23:10",
                        "subExpression": {
                          "id": 1821,
                          "name": "inboundProcessedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1652,
                          "src": "2541:21:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 1823,
                      "nodeType": "ExpressionStatement",
                      "src": "2541:23:10"
                    }
                  ]
                },
                "functionSelector": "1605c306",
                "id": 1825,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "processNextInboundMessage",
                "nameLocation": "2370:25:10",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1802,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2395:2:10"
                },
                "returnParameters": {
                  "id": 1803,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2405:0:10"
                },
                "scope": 1826,
                "src": "2361:210:10",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1827,
            "src": "632:1941:10",
            "usedErrors": []
          }
        ],
        "src": "32:2542:10"
      }
    },
    "contracts/test/TestIsm.sol": {
      "id": 11,
      "ast": {
        "absolutePath": "contracts/test/TestIsm.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            1099
          ],
          "TestIsm": [
            1865
          ]
        },
        "id": 1866,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1828,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:11"
          },
          {
            "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
            "file": "../interfaces/IInterchainSecurityModule.sol",
            "id": 1830,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1866,
            "sourceUnit": 1107,
            "src": "73:86:11",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1829,
                  "name": "IInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1099,
                  "src": "81:25:11",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1831,
                  "name": "IInterchainSecurityModule",
                  "nameLocations": [
                    "181:25:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1099,
                  "src": "181:25:11"
                },
                "id": 1832,
                "nodeType": "InheritanceSpecifier",
                "src": "181:25:11"
              }
            ],
            "canonicalName": "TestIsm",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 1865,
            "linearizedBaseContracts": [
              1865,
              1099
            ],
            "name": "TestIsm",
            "nameLocation": "170:7:11",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "baseFunctions": [
                  1088
                ],
                "constant": false,
                "functionSelector": "6465e69f",
                "id": 1839,
                "mutability": "mutable",
                "name": "moduleType",
                "nameLocation": "226:10:11",
                "nodeType": "VariableDeclaration",
                "scope": 1865,
                "src": "213:43:11",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1833,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "213:5:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "expression": {
                        "id": 1836,
                        "name": "Types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "245:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Types_$1082_$",
                          "typeString": "type(enum IInterchainSecurityModule.Types)"
                        }
                      },
                      "id": 1837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "251:4:11",
                      "memberName": "NULL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1080,
                      "src": "245:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Types_$1082",
                        "typeString": "enum IInterchainSecurityModule.Types"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_enum$_Types_$1082",
                        "typeString": "enum IInterchainSecurityModule.Types"
                      }
                    ],
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "239:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint8_$",
                      "typeString": "type(uint8)"
                    },
                    "typeName": {
                      "id": 1834,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "239:5:11",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 1838,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "239:17:11",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 1842,
                "mutability": "mutable",
                "name": "verifyResult",
                "nameLocation": "268:12:11",
                "nodeType": "VariableDeclaration",
                "scope": 1865,
                "src": "263:24:11",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1840,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "263:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": {
                  "hexValue": "74727565",
                  "id": 1841,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "bool",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "283:4:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "value": "true"
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1851,
                  "nodeType": "Block",
                  "src": "334:39:11",
                  "statements": [
                    {
                      "expression": {
                        "id": 1849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1847,
                          "name": "verifyResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1842,
                          "src": "344:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1848,
                          "name": "_verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1844,
                          "src": "359:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "344:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1850,
                      "nodeType": "ExpressionStatement",
                      "src": "344:22:11"
                    }
                  ]
                },
                "functionSelector": "951a291f",
                "id": 1852,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "setVerify",
                "nameLocation": "303:9:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1845,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1844,
                      "mutability": "mutable",
                      "name": "_verify",
                      "nameLocation": "318:7:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1852,
                      "src": "313:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1843,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "313:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "312:14:11"
                },
                "returnParameters": {
                  "id": 1846,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "334:0:11"
                },
                "scope": 1865,
                "src": "294:79:11",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1098
                ],
                "body": {
                  "id": 1863,
                  "nodeType": "Block",
                  "src": "454:36:11",
                  "statements": [
                    {
                      "expression": {
                        "id": 1861,
                        "name": "verifyResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "471:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1860,
                      "id": 1862,
                      "nodeType": "Return",
                      "src": "464:19:11"
                    }
                  ]
                },
                "functionSelector": "f7e83aee",
                "id": 1864,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verify",
                "nameLocation": "388:6:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1857,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1854,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1864,
                      "src": "395:14:11",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1853,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "395:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1856,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1864,
                      "src": "411:14:11",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1855,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "411:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "394:32:11"
                },
                "returnParameters": {
                  "id": 1860,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1859,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1864,
                      "src": "448:4:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1858,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "448:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "447:6:11"
                },
                "scope": 1865,
                "src": "379:111:11",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1866,
            "src": "161:331:11",
            "usedErrors": []
          }
        ],
        "src": "46:447:11"
      }
    },
    "contracts/test/TestPostDispatchHook.sol": {
      "id": 12,
      "ast": {
        "absolutePath": "contracts/test/TestPostDispatchHook.sol",
        "exportedSymbols": {
          "AbstractPostDispatchHook": [
            801
          ],
          "IPostDispatchHook": [
            1330
          ],
          "TestPostDispatchHook": [
            1935
          ]
        },
        "id": 1936,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1867,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:12"
          },
          {
            "absolutePath": "contracts/interfaces/hooks/IPostDispatchHook.sol",
            "file": "../interfaces/hooks/IPostDispatchHook.sol",
            "id": 1869,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1936,
            "sourceUnit": 1331,
            "src": "72:76:12",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1868,
                  "name": "IPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1330,
                  "src": "80:17:12",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/hooks/libs/AbstractPostDispatchHook.sol",
            "file": "../hooks/libs/AbstractPostDispatchHook.sol",
            "id": 1871,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1936,
            "sourceUnit": 802,
            "src": "149:84:12",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1870,
                  "name": "AbstractPostDispatchHook",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 801,
                  "src": "157:24:12",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1872,
                  "name": "AbstractPostDispatchHook",
                  "nameLocations": [
                    "268:24:12"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 801,
                  "src": "268:24:12"
                },
                "id": 1873,
                "nodeType": "InheritanceSpecifier",
                "src": "268:24:12"
              }
            ],
            "canonicalName": "TestPostDispatchHook",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 1935,
            "linearizedBaseContracts": [
              1935,
              801,
              1330
            ],
            "name": "TestPostDispatchHook",
            "nameLocation": "244:20:12",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "functionSelector": "ddca3f43",
                "id": 1876,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "398:3:12",
                "nodeType": "VariableDeclaration",
                "scope": 1935,
                "src": "383:22:12",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1874,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "383:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "30",
                  "id": 1875,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "404:1:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1303
                ],
                "body": {
                  "id": 1890,
                  "nodeType": "Block",
                  "src": "562:61:12",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 1885,
                                "name": "IPostDispatchHook",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1330,
                                "src": "585:17:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IPostDispatchHook_$1330_$",
                                  "typeString": "type(contract IPostDispatchHook)"
                                }
                              },
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "603:5:12",
                              "memberName": "Types",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1297,
                              "src": "585:23:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Types_$1297_$",
                                "typeString": "type(enum IPostDispatchHook.Types)"
                              }
                            },
                            "id": 1887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "609:6:12",
                            "memberName": "UNUSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1288,
                            "src": "585:30:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Types_$1297",
                              "typeString": "enum IPostDispatchHook.Types"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Types_$1297",
                              "typeString": "enum IPostDispatchHook.Types"
                            }
                          ],
                          "id": 1884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "579:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 1883,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "579:5:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "579:37:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 1882,
                      "id": 1889,
                      "nodeType": "Return",
                      "src": "572:44:12"
                    }
                  ]
                },
                "documentation": {
                  "id": 1877,
                  "nodeType": "StructuredDocumentation",
                  "src": "465:33:12",
                  "text": "@inheritdoc IPostDispatchHook"
                },
                "functionSelector": "e445e7dd",
                "id": 1891,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "hookType",
                "nameLocation": "512:8:12",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1879,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "537:8:12"
                },
                "parameters": {
                  "id": 1878,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "520:2:12"
                },
                "returnParameters": {
                  "id": 1882,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1881,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1891,
                      "src": "555:5:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1880,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "555:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "554:7:12"
                },
                "scope": 1935,
                "src": "503:120:12",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  736
                ],
                "body": {
                  "id": 1901,
                  "nodeType": "Block",
                  "src": "721:28:12",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 1899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "738:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 1898,
                      "id": 1900,
                      "nodeType": "Return",
                      "src": "731:11:12"
                    }
                  ]
                },
                "functionSelector": "e5320bb9",
                "id": 1902,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "supportsMetadata",
                "nameLocation": "638:16:12",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1895,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "697:8:12"
                },
                "parameters": {
                  "id": 1894,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1893,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1902,
                      "src": "664:14:12",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1892,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "664:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "654:30:12"
                },
                "returnParameters": {
                  "id": 1898,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1897,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1902,
                      "src": "715:4:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1896,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "715:4:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "714:6:12"
                },
                "scope": 1935,
                "src": "629:120:12",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1911,
                  "nodeType": "Block",
                  "src": "794:27:12",
                  "statements": [
                    {
                      "expression": {
                        "id": 1909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1907,
                          "name": "fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1876,
                          "src": "804:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1908,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1904,
                          "src": "810:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "804:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1910,
                      "nodeType": "ExpressionStatement",
                      "src": "804:10:12"
                    }
                  ]
                },
                "functionSelector": "69fe0e2d",
                "id": 1912,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "setFee",
                "nameLocation": "764:6:12",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1905,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1904,
                      "mutability": "mutable",
                      "name": "_fee",
                      "nameLocation": "779:4:12",
                      "nodeType": "VariableDeclaration",
                      "scope": 1912,
                      "src": "771:12:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1903,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "771:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "770:14:12"
                },
                "returnParameters": {
                  "id": 1906,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "794:0:12"
                },
                "scope": 1935,
                "src": "755:66:12",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  790
                ],
                "body": {
                  "id": 1920,
                  "nodeType": "Block",
                  "src": "1012:31:12",
                  "statements": []
                },
                "id": 1921,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_postDispatch",
                "nameLocation": "888:13:12",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1918,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1003:8:12"
                },
                "parameters": {
                  "id": 1917,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1914,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1921,
                      "src": "911:14:12",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1913,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "911:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1916,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1921,
                      "src": "956:14:12",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1915,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "956:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "901:87:12"
                },
                "returnParameters": {
                  "id": 1919,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1012:0:12"
                },
                "scope": 1935,
                "src": "879:164:12",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  800
                ],
                "body": {
                  "id": 1933,
                  "nodeType": "Block",
                  "src": "1201:27:12",
                  "statements": [
                    {
                      "expression": {
                        "id": 1931,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1876,
                        "src": "1218:3:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 1930,
                      "id": 1932,
                      "nodeType": "Return",
                      "src": "1211:10:12"
                    }
                  ]
                },
                "id": 1934,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_quoteDispatch",
                "nameLocation": "1058:14:12",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1927,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1174:8:12"
                },
                "parameters": {
                  "id": 1926,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1923,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "1082:14:12",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1922,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1082:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1925,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "1127:14:12",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1924,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1127:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1072:87:12"
                },
                "returnParameters": {
                  "id": 1930,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1929,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1934,
                      "src": "1192:7:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1928,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1191:9:12"
                },
                "scope": 1935,
                "src": "1049:179:12",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1936,
            "src": "235:995:12",
            "usedErrors": []
          }
        ],
        "src": "46:1185:12"
      }
    },
    "contracts/upgrade/Versioned.sol": {
      "id": 13,
      "ast": {
        "absolutePath": "contracts/upgrade/Versioned.sol",
        "exportedSymbols": {
          "Versioned": [
            1942
          ]
        },
        "id": 1943,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1937,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:13"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "Versioned",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1938,
              "nodeType": "StructuredDocumentation",
              "src": "73:68:13",
              "text": " @title Versioned\n @notice Version getter for contracts*"
            },
            "fullyImplemented": true,
            "id": 1942,
            "linearizedBaseContracts": [
              1942
            ],
            "name": "Versioned",
            "nameLocation": "151:9:13",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "functionSelector": "ffa1ad74",
                "id": 1941,
                "mutability": "constant",
                "name": "VERSION",
                "nameLocation": "189:7:13",
                "nodeType": "VariableDeclaration",
                "scope": 1942,
                "src": "167:33:13",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 1939,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "167:5:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "hexValue": "33",
                  "id": 1940,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "199:1:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3_by_1",
                    "typeString": "int_const 3"
                  },
                  "value": "3"
                },
                "visibility": "public"
              }
            ],
            "scope": 1943,
            "src": "142:61:13",
            "usedErrors": []
          }
        ],
        "src": "46:158:13"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
      "id": 14,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "exportedSymbols": {
          "ContextUpgradeable": [
            2625
          ],
          "Initializable": [
            2244
          ],
          "OwnableUpgradeable": [
            2075
          ]
        },
        "id": 2076,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1944,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "102:23:14"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "file": "../utils/ContextUpgradeable.sol",
            "id": 1945,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 2076,
            "sourceUnit": 2626,
            "src": "127:41:14",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "file": "../proxy/utils/Initializable.sol",
            "id": 1947,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 2076,
            "sourceUnit": 2245,
            "src": "169:63:14",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1946,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2244,
                  "src": "177:13:14",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1949,
                  "name": "Initializable",
                  "nameLocations": [
                    "769:13:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2244,
                  "src": "769:13:14"
                },
                "id": 1950,
                "nodeType": "InheritanceSpecifier",
                "src": "769:13:14"
              },
              {
                "baseName": {
                  "id": 1951,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "784:18:14"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2625,
                  "src": "784:18:14"
                },
                "id": 1952,
                "nodeType": "InheritanceSpecifier",
                "src": "784:18:14"
              }
            ],
            "canonicalName": "OwnableUpgradeable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1948,
              "nodeType": "StructuredDocumentation",
              "src": "234:494:14",
              "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
            },
            "fullyImplemented": true,
            "id": 2075,
            "linearizedBaseContracts": [
              2075,
              2625,
              2244
            ],
            "name": "OwnableUpgradeable",
            "nameLocation": "747:18:14",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 1954,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "825:6:14",
                "nodeType": "VariableDeclaration",
                "scope": 2075,
                "src": "809:22:14",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1953,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "809:7:14",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 1960,
                "name": "OwnershipTransferred",
                "nameLocation": "844:20:14",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1959,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1956,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "881:13:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1960,
                      "src": "865:29:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1955,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "865:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1958,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "912:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 1960,
                      "src": "896:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1957,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "896:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "864:57:14"
                },
                "src": "838:84:14"
              },
              {
                "body": {
                  "id": 1969,
                  "nodeType": "Block",
                  "src": "1076:43:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1966,
                          "name": "__Ownable_init_unchained",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1981,
                          "src": "1086:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 1967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1086:26:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1968,
                      "nodeType": "ExpressionStatement",
                      "src": "1086:26:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 1961,
                  "nodeType": "StructuredDocumentation",
                  "src": "928:91:14",
                  "text": " @dev Initializes the contract setting the deployer as the initial owner."
                },
                "id": 1970,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1964,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1963,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "1059:16:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2189,
                      "src": "1059:16:14"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1059:16:14"
                  }
                ],
                "name": "__Ownable_init",
                "nameLocation": "1033:14:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1962,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1047:2:14"
                },
                "returnParameters": {
                  "id": 1965,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1076:0:14"
                },
                "scope": 2075,
                "src": "1024:95:14",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1980,
                  "nodeType": "Block",
                  "src": "1187:49:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1976,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2602,
                              "src": "1216:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1216:12:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1975,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2069,
                          "src": "1197:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 1978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1197:32:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1979,
                      "nodeType": "ExpressionStatement",
                      "src": "1197:32:14"
                    }
                  ]
                },
                "id": 1981,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1973,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1972,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "1170:16:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2189,
                      "src": "1170:16:14"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1170:16:14"
                  }
                ],
                "name": "__Ownable_init_unchained",
                "nameLocation": "1134:24:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1971,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1158:2:14"
                },
                "returnParameters": {
                  "id": 1974,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1187:0:14"
                },
                "scope": 2075,
                "src": "1125:111:14",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1988,
                  "nodeType": "Block",
                  "src": "1345:41:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1984,
                          "name": "_checkOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2012,
                          "src": "1355:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 1985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:13:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1986,
                      "nodeType": "ExpressionStatement",
                      "src": "1355:13:14"
                    },
                    {
                      "id": 1987,
                      "nodeType": "PlaceholderStatement",
                      "src": "1378:1:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 1982,
                  "nodeType": "StructuredDocumentation",
                  "src": "1242:77:14",
                  "text": " @dev Throws if called by any account other than the owner."
                },
                "id": 1989,
                "name": "onlyOwner",
                "nameLocation": "1333:9:14",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 1983,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1342:2:14"
                },
                "src": "1324:62:14",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1997,
                  "nodeType": "Block",
                  "src": "1517:30:14",
                  "statements": [
                    {
                      "expression": {
                        "id": 1995,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "1534:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1994,
                      "id": 1996,
                      "nodeType": "Return",
                      "src": "1527:13:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 1990,
                  "nodeType": "StructuredDocumentation",
                  "src": "1392:65:14",
                  "text": " @dev Returns the address of the current owner."
                },
                "functionSelector": "8da5cb5b",
                "id": 1998,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1471:5:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1991,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1476:2:14"
                },
                "returnParameters": {
                  "id": 1994,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1998,
                      "src": "1508:7:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1508:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1507:9:14"
                },
                "scope": 2075,
                "src": "1462:85:14",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2011,
                  "nodeType": "Block",
                  "src": "1665:85:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2003,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1998,
                                "src": "1683:5:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1683:7:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2005,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2602,
                                "src": "1694:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1694:12:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1683:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 2008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1708:34:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 2002,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1675:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1675:68:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2010,
                      "nodeType": "ExpressionStatement",
                      "src": "1675:68:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 1999,
                  "nodeType": "StructuredDocumentation",
                  "src": "1553:62:14",
                  "text": " @dev Throws if the sender is not the owner."
                },
                "id": 2012,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_checkOwner",
                "nameLocation": "1629:11:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2000,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1640:2:14"
                },
                "returnParameters": {
                  "id": 2001,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1665:0:14"
                },
                "scope": 2075,
                "src": "1620:130:14",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2025,
                  "nodeType": "Block",
                  "src": "2139:47:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2176:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2168:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2019,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2168:7:14",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2168:10:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2018,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2069,
                          "src": "2149:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 2023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2149:30:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2024,
                      "nodeType": "ExpressionStatement",
                      "src": "2149:30:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 2013,
                  "nodeType": "StructuredDocumentation",
                  "src": "1756:324:14",
                  "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                },
                "functionSelector": "715018a6",
                "id": 2026,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 2016,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 2015,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2129:9:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1989,
                      "src": "2129:9:14"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2129:9:14"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "2094:17:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2014,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2111:2:14"
                },
                "returnParameters": {
                  "id": 2017,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2139:0:14"
                },
                "scope": 2075,
                "src": "2085:101:14",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2048,
                  "nodeType": "Block",
                  "src": "2405:128:14",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2035,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2029,
                              "src": "2423:8:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 2038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2443:1:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 2037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2435:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2036,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2435:7:14",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2435:10:14",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2423:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                            "id": 2041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2447:40:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            },
                            "value": "Ownable: new owner is the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            }
                          ],
                          "id": 2034,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2415:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2415:73:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2043,
                      "nodeType": "ExpressionStatement",
                      "src": "2415:73:14"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2045,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2029,
                            "src": "2517:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2044,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2069,
                          "src": "2498:18:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 2046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2498:28:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2047,
                      "nodeType": "ExpressionStatement",
                      "src": "2498:28:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 2027,
                  "nodeType": "StructuredDocumentation",
                  "src": "2192:138:14",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                },
                "functionSelector": "f2fde38b",
                "id": 2049,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 2032,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 2031,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2395:9:14"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1989,
                      "src": "2395:9:14"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2395:9:14"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "2344:17:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2030,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2029,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2370:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2049,
                      "src": "2362:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2362:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2361:18:14"
                },
                "returnParameters": {
                  "id": 2033,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2405:0:14"
                },
                "scope": 2075,
                "src": "2335:198:14",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 2068,
                  "nodeType": "Block",
                  "src": "2750:124:14",
                  "statements": [
                    {
                      "assignments": [
                        2056
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2056,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "2768:8:14",
                          "nodeType": "VariableDeclaration",
                          "scope": 2068,
                          "src": "2760:16:14",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 2055,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2760:7:14",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2058,
                      "initialValue": {
                        "id": 2057,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "2779:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2760:25:14"
                    },
                    {
                      "expression": {
                        "id": 2061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2059,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "2795:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 2060,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2052,
                          "src": "2804:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2795:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2062,
                      "nodeType": "ExpressionStatement",
                      "src": "2795:17:14"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 2064,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2056,
                            "src": "2848:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2065,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2052,
                            "src": "2858:8:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2063,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1960,
                          "src": "2827:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 2066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2827:40:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2067,
                      "nodeType": "EmitStatement",
                      "src": "2822:45:14"
                    }
                  ]
                },
                "documentation": {
                  "id": 2050,
                  "nodeType": "StructuredDocumentation",
                  "src": "2539:143:14",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                },
                "id": 2069,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "2696:18:14",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2053,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2052,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2723:8:14",
                      "nodeType": "VariableDeclaration",
                      "scope": 2069,
                      "src": "2715:16:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2051,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2715:7:14",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2714:18:14"
                },
                "returnParameters": {
                  "id": 2054,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2750:0:14"
                },
                "scope": 2075,
                "src": "2687:187:14",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 2070,
                  "nodeType": "StructuredDocumentation",
                  "src": "2880:254:14",
                  "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
                },
                "id": 2074,
                "mutability": "mutable",
                "name": "__gap",
                "nameLocation": "3159:5:14",
                "nodeType": "VariableDeclaration",
                "scope": 2075,
                "src": "3139:25:14",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$49_storage",
                  "typeString": "uint256[49]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2073,
                  "length": {
                    "hexValue": "3439",
                    "id": 2072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:2:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_49_by_1",
                      "typeString": "int_const 49"
                    },
                    "value": "49"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "3139:11:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                    "typeString": "uint256[49]"
                  }
                },
                "visibility": "private"
              }
            ],
            "scope": 2076,
            "src": "729:2438:14",
            "usedErrors": []
          }
        ],
        "src": "102:3066:14"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "id": 15,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "exportedSymbols": {
          "AddressUpgradeable": [
            2574
          ],
          "Initializable": [
            2244
          ]
        },
        "id": 2245,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2077,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "113:23:15"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "file": "../../utils/AddressUpgradeable.sol",
            "id": 2078,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 2245,
            "sourceUnit": 2575,
            "src": "138:44:15",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Initializable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 2079,
              "nodeType": "StructuredDocumentation",
              "src": "184:2209:15",
              "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
            },
            "fullyImplemented": true,
            "id": 2244,
            "linearizedBaseContracts": [
              2244
            ],
            "name": "Initializable",
            "nameLocation": "2412:13:15",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "documentation": {
                  "id": 2080,
                  "nodeType": "StructuredDocumentation",
                  "src": "2432:109:15",
                  "text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
                },
                "id": 2082,
                "mutability": "mutable",
                "name": "_initialized",
                "nameLocation": "2560:12:15",
                "nodeType": "VariableDeclaration",
                "scope": 2244,
                "src": "2546:26:15",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 2081,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2546:5:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 2083,
                  "nodeType": "StructuredDocumentation",
                  "src": "2579:91:15",
                  "text": " @dev Indicates that the contract is in the process of being initialized."
                },
                "id": 2085,
                "mutability": "mutable",
                "name": "_initializing",
                "nameLocation": "2688:13:15",
                "nodeType": "VariableDeclaration",
                "scope": 2244,
                "src": "2675:26:15",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 2084,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2675:4:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 2086,
                  "nodeType": "StructuredDocumentation",
                  "src": "2708:90:15",
                  "text": " @dev Triggered when the contract has been initialized or reinitialized."
                },
                "eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
                "id": 2090,
                "name": "Initialized",
                "nameLocation": "2809:11:15",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 2089,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2088,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "version",
                      "nameLocation": "2827:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2090,
                      "src": "2821:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2087,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2821:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2820:15:15"
                },
                "src": "2803:33:15"
              },
              {
                "body": {
                  "id": 2145,
                  "nodeType": "Block",
                  "src": "3269:483:15",
                  "statements": [
                    {
                      "assignments": [
                        2094
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2094,
                          "mutability": "mutable",
                          "name": "isTopLevelCall",
                          "nameLocation": "3284:14:15",
                          "nodeType": "VariableDeclaration",
                          "scope": 2145,
                          "src": "3279:19:15",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2093,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "3279:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2097,
                      "initialValue": {
                        "id": 2096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3301:14:15",
                        "subExpression": {
                          "id": 2095,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "3302:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3279:36:15"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2099,
                                    "name": "isTopLevelCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2094,
                                    "src": "3347:14:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 2102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2100,
                                      "name": "_initialized",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2082,
                                      "src": "3365:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3380:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3365:16:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3347:34:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 2104,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3346:36:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2112,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "3387:45:15",
                                    "subExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 2109,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "3426:4:15",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Initializable_$2244",
                                                "typeString": "contract Initializable"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Initializable_$2244",
                                                "typeString": "contract Initializable"
                                              }
                                            ],
                                            "id": 2108,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3418:7:15",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 2107,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3418:7:15",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 2110,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3418:13:15",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2105,
                                          "name": "AddressUpgradeable",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2574,
                                          "src": "3388:18:15",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2574_$",
                                            "typeString": "type(library AddressUpgradeable)"
                                          }
                                        },
                                        "id": 2106,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3407:10:15",
                                        "memberName": "isContract",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2262,
                                        "src": "3388:29:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                          "typeString": "function (address) view returns (bool)"
                                        }
                                      },
                                      "id": 2111,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3388:44:15",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 2115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2113,
                                      "name": "_initialized",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2082,
                                      "src": "3436:12:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 2114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3452:1:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3436:17:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3387:66:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 2117,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3386:68:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3346:108:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                            "id": 2119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3468:48:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            },
                            "value": "Initializable: contract is already initialized"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            }
                          ],
                          "id": 2098,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3325:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3325:201:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2121,
                      "nodeType": "ExpressionStatement",
                      "src": "3325:201:15"
                    },
                    {
                      "expression": {
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2122,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2082,
                          "src": "3536:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3551:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3536:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 2125,
                      "nodeType": "ExpressionStatement",
                      "src": "3536:16:15"
                    },
                    {
                      "condition": {
                        "id": 2126,
                        "name": "isTopLevelCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "3566:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2132,
                      "nodeType": "IfStatement",
                      "src": "3562:65:15",
                      "trueBody": {
                        "id": 2131,
                        "nodeType": "Block",
                        "src": "3582:45:15",
                        "statements": [
                          {
                            "expression": {
                              "id": 2129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2127,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2085,
                                "src": "3596:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 2128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3612:4:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "3596:20:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2130,
                            "nodeType": "ExpressionStatement",
                            "src": "3596:20:15"
                          }
                        ]
                      }
                    },
                    {
                      "id": 2133,
                      "nodeType": "PlaceholderStatement",
                      "src": "3636:1:15"
                    },
                    {
                      "condition": {
                        "id": 2134,
                        "name": "isTopLevelCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2094,
                        "src": "3651:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2144,
                      "nodeType": "IfStatement",
                      "src": "3647:99:15",
                      "trueBody": {
                        "id": 2143,
                        "nodeType": "Block",
                        "src": "3667:79:15",
                        "statements": [
                          {
                            "expression": {
                              "id": 2137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2135,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2085,
                                "src": "3681:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 2136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3697:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3681:21:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2138,
                            "nodeType": "ExpressionStatement",
                            "src": "3681:21:15"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 2140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3733:1:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "id": 2139,
                                "name": "Initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2090,
                                "src": "3721:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                  "typeString": "function (uint8)"
                                }
                              },
                              "id": 2141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3721:14:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2142,
                            "nodeType": "EmitStatement",
                            "src": "3716:19:15"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 2091,
                  "nodeType": "StructuredDocumentation",
                  "src": "2842:399:15",
                  "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
                },
                "id": 2146,
                "name": "initializer",
                "nameLocation": "3255:11:15",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 2092,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3266:2:15"
                },
                "src": "3246:506:15",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2178,
                  "nodeType": "Block",
                  "src": "4863:255:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 2157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4881:14:15",
                              "subExpression": {
                                "id": 2152,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2085,
                                "src": "4882:13:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 2156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2154,
                                "name": "_initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2082,
                                "src": "4899:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2155,
                                "name": "version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2149,
                                "src": "4914:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "4899:22:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4881:40:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                            "id": 2158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4923:48:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            },
                            "value": "Initializable: contract is already initialized"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            }
                          ],
                          "id": 2151,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4873:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4873:99:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2160,
                      "nodeType": "ExpressionStatement",
                      "src": "4873:99:15"
                    },
                    {
                      "expression": {
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2161,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2082,
                          "src": "4982:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 2162,
                          "name": "version",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2149,
                          "src": "4997:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4982:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 2164,
                      "nodeType": "ExpressionStatement",
                      "src": "4982:22:15"
                    },
                    {
                      "expression": {
                        "id": 2167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2165,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "5014:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 2166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5030:4:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5014:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2168,
                      "nodeType": "ExpressionStatement",
                      "src": "5014:20:15"
                    },
                    {
                      "id": 2169,
                      "nodeType": "PlaceholderStatement",
                      "src": "5044:1:15"
                    },
                    {
                      "expression": {
                        "id": 2172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 2170,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2085,
                          "src": "5055:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 2171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5071:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5055:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2173,
                      "nodeType": "ExpressionStatement",
                      "src": "5055:21:15"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 2175,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2149,
                            "src": "5103:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 2174,
                          "name": "Initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2090,
                          "src": "5091:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8)"
                          }
                        },
                        "id": 2176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5091:20:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2177,
                      "nodeType": "EmitStatement",
                      "src": "5086:25:15"
                    }
                  ]
                },
                "documentation": {
                  "id": 2147,
                  "nodeType": "StructuredDocumentation",
                  "src": "3758:1062:15",
                  "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
                },
                "id": 2179,
                "name": "reinitializer",
                "nameLocation": "4834:13:15",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 2150,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2149,
                      "mutability": "mutable",
                      "name": "version",
                      "nameLocation": "4854:7:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 2179,
                      "src": "4848:13:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2148,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4848:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4847:15:15"
                },
                "src": "4825:293:15",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2188,
                  "nodeType": "Block",
                  "src": "5356:97:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2183,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2085,
                            "src": "5374:13:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
                            "id": 2184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5389:45:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                              "typeString": "literal_string \"Initializable: contract is not initializing\""
                            },
                            "value": "Initializable: contract is not initializing"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                              "typeString": "literal_string \"Initializable: contract is not initializing\""
                            }
                          ],
                          "id": 2182,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5366:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5366:69:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2186,
                      "nodeType": "ExpressionStatement",
                      "src": "5366:69:15"
                    },
                    {
                      "id": 2187,
                      "nodeType": "PlaceholderStatement",
                      "src": "5445:1:15"
                    }
                  ]
                },
                "documentation": {
                  "id": 2180,
                  "nodeType": "StructuredDocumentation",
                  "src": "5124:199:15",
                  "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                },
                "id": 2189,
                "name": "onlyInitializing",
                "nameLocation": "5337:16:15",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 2181,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5353:2:15"
                },
                "src": "5328:125:15",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2224,
                  "nodeType": "Block",
                  "src": "5988:231:15",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6006:14:15",
                            "subExpression": {
                              "id": 2194,
                              "name": "_initializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2085,
                              "src": "6007:13:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
                            "id": 2196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6022:41:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                              "typeString": "literal_string \"Initializable: contract is initializing\""
                            },
                            "value": "Initializable: contract is initializing"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                              "typeString": "literal_string \"Initializable: contract is initializing\""
                            }
                          ],
                          "id": 2193,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5998:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5998:66:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2198,
                      "nodeType": "ExpressionStatement",
                      "src": "5998:66:15"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2199,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2082,
                          "src": "6078:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6099:5:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 2201,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6099:5:15",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 2200,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "6094:4:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6094:11:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6106:3:15",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "6094:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "6078:31:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2223,
                      "nodeType": "IfStatement",
                      "src": "6074:139:15",
                      "trueBody": {
                        "id": 2222,
                        "nodeType": "Block",
                        "src": "6111:102:15",
                        "statements": [
                          {
                            "expression": {
                              "id": 2212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 2206,
                                "name": "_initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2082,
                                "src": "6125:12:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 2209,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6145:5:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 2208,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6145:5:15",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      }
                                    ],
                                    "id": 2207,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "6140:4:15",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2210,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6140:11:15",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint8",
                                    "typeString": "type(uint8)"
                                  }
                                },
                                "id": 2211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6152:3:15",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "6140:15:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "6125:30:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 2213,
                            "nodeType": "ExpressionStatement",
                            "src": "6125:30:15"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6191:5:15",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 2216,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6191:5:15",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        }
                                      ],
                                      "id": 2215,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "6186:4:15",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 2218,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6186:11:15",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint8",
                                      "typeString": "type(uint8)"
                                    }
                                  },
                                  "id": 2219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6198:3:15",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "6186:15:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 2214,
                                "name": "Initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2090,
                                "src": "6174:11:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                  "typeString": "function (uint8)"
                                }
                              },
                              "id": 2220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6174:28:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2221,
                            "nodeType": "EmitStatement",
                            "src": "6169:33:15"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 2190,
                  "nodeType": "StructuredDocumentation",
                  "src": "5459:475:15",
                  "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                },
                "id": 2225,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_disableInitializers",
                "nameLocation": "5948:20:15",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2191,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5968:2:15"
                },
                "returnParameters": {
                  "id": 2192,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5988:0:15"
                },
                "scope": 2244,
                "src": "5939:280:15",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2233,
                  "nodeType": "Block",
                  "src": "6393:36:15",
                  "statements": [
                    {
                      "expression": {
                        "id": 2231,
                        "name": "_initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2082,
                        "src": "6410:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 2230,
                      "id": 2232,
                      "nodeType": "Return",
                      "src": "6403:19:15"
                    }
                  ]
                },
                "documentation": {
                  "id": 2226,
                  "nodeType": "StructuredDocumentation",
                  "src": "6225:99:15",
                  "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                },
                "id": 2234,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getInitializedVersion",
                "nameLocation": "6338:22:15",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2227,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6360:2:15"
                },
                "returnParameters": {
                  "id": 2230,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2229,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2234,
                      "src": "6386:5:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 2228,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6386:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6385:7:15"
                },
                "scope": 2244,
                "src": "6329:100:15",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2242,
                  "nodeType": "Block",
                  "src": "6601:37:15",
                  "statements": [
                    {
                      "expression": {
                        "id": 2240,
                        "name": "_initializing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2085,
                        "src": "6618:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2239,
                      "id": 2241,
                      "nodeType": "Return",
                      "src": "6611:20:15"
                    }
                  ]
                },
                "documentation": {
                  "id": 2235,
                  "nodeType": "StructuredDocumentation",
                  "src": "6435:105:15",
                  "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                },
                "id": 2243,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_isInitializing",
                "nameLocation": "6554:15:15",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2236,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6569:2:15"
                },
                "returnParameters": {
                  "id": 2239,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2238,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2243,
                      "src": "6595:4:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2237,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6595:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6594:6:15"
                },
                "scope": 2244,
                "src": "6545:93:15",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 2245,
            "src": "2394:4246:15",
            "usedErrors": []
          }
        ],
        "src": "113:6528:15"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "id": 16,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "exportedSymbols": {
          "AddressUpgradeable": [
            2574
          ]
        },
        "id": 2575,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2246,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".1"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:16"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "AddressUpgradeable",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 2247,
              "nodeType": "StructuredDocumentation",
              "src": "126:67:16",
              "text": " @dev Collection of functions related to the address type"
            },
            "fullyImplemented": true,
            "id": 2574,
            "linearizedBaseContracts": [
              2574
            ],
            "name": "AddressUpgradeable",
            "nameLocation": "202:18:16",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 2261,
                  "nodeType": "Block",
                  "src": "1489:254:16",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 2255,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2250,
                              "src": "1713:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1721:4:16",
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "1713:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1726:6:16",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1713:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1735:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1713:23:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2254,
                      "id": 2260,
                      "nodeType": "Return",
                      "src": "1706:30:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2248,
                  "nodeType": "StructuredDocumentation",
                  "src": "227:1191:16",
                  "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                },
                "id": 2262,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isContract",
                "nameLocation": "1432:10:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2251,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2250,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "1451:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2262,
                      "src": "1443:15:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2249,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1443:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1442:17:16"
                },
                "returnParameters": {
                  "id": 2254,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2253,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2262,
                      "src": "1483:4:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2252,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1483:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1482:6:16"
                },
                "scope": 2574,
                "src": "1423:320:16",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2295,
                  "nodeType": "Block",
                  "src": "2729:241:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2273,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2755:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$2574",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$2574",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  ],
                                  "id": 2272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2747:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2271,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2747:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2747:13:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2761:7:16",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2747:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2276,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2267,
                              "src": "2772:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2747:31:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                            "id": 2278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2780:31:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            },
                            "value": "Address: insufficient balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            }
                          ],
                          "id": 2270,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2739:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2739:73:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2280,
                      "nodeType": "ExpressionStatement",
                      "src": "2739:73:16"
                    },
                    {
                      "assignments": [
                        2282,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2282,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "2829:7:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2295,
                          "src": "2824:12:16",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2281,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "2824:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 2289,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2872:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 2283,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "2842:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2852:4:16",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2842:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 2285,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2267,
                              "src": "2864:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "2842:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 2288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2842:33:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2823:52:16"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2291,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2282,
                            "src": "2893:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                            "id": 2292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2902:60:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            },
                            "value": "Address: unable to send value, recipient may have reverted"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            }
                          ],
                          "id": 2290,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2885:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2885:78:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2294,
                      "nodeType": "ExpressionStatement",
                      "src": "2885:78:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2263,
                  "nodeType": "StructuredDocumentation",
                  "src": "1749:904:16",
                  "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                },
                "id": 2296,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sendValue",
                "nameLocation": "2667:9:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2268,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2265,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "2693:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2296,
                      "src": "2677:25:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2264,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2677:15:16",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2267,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2712:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2296,
                      "src": "2704:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2704:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2676:43:16"
                },
                "returnParameters": {
                  "id": 2269,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2729:0:16"
                },
                "scope": 2574,
                "src": "2658:312:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2313,
                  "nodeType": "Block",
                  "src": "3801:96:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2307,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2299,
                            "src": "3840:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2308,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2301,
                            "src": "3848:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3854:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                            "id": 2310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3857:32:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            },
                            "value": "Address: low-level call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            }
                          ],
                          "id": 2306,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2354,
                            2398
                          ],
                          "referencedDeclaration": 2398,
                          "src": "3818:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3818:72:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2305,
                      "id": 2312,
                      "nodeType": "Return",
                      "src": "3811:79:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2297,
                  "nodeType": "StructuredDocumentation",
                  "src": "2976:731:16",
                  "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                },
                "id": 2314,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "3721:12:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2302,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2299,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "3742:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2314,
                      "src": "3734:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2298,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3734:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2301,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3763:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2314,
                      "src": "3750:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2300,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3750:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3733:35:16"
                },
                "returnParameters": {
                  "id": 2305,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2304,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2314,
                      "src": "3787:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2303,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3787:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3786:14:16"
                },
                "scope": 2574,
                "src": "3712:185:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2333,
                  "nodeType": "Block",
                  "src": "4266:76:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2327,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "4305:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2328,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2319,
                            "src": "4313:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4319:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 2330,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2321,
                            "src": "4322:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2326,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2354,
                            2398
                          ],
                          "referencedDeclaration": 2398,
                          "src": "4283:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4283:52:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2325,
                      "id": 2332,
                      "nodeType": "Return",
                      "src": "4276:59:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2315,
                  "nodeType": "StructuredDocumentation",
                  "src": "3903:211:16",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 2334,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "4128:12:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2322,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2317,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4158:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "4150:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4150:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2319,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4187:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "4174:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2318,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4174:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2321,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "4215:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "4201:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2320,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4201:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4140:93:16"
                },
                "returnParameters": {
                  "id": 2325,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2324,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2334,
                      "src": "4252:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2323,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4252:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4251:14:16"
                },
                "scope": 2574,
                "src": "4119:223:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2353,
                  "nodeType": "Block",
                  "src": "4817:111:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2347,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "4856:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2348,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2339,
                            "src": "4864:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2349,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2341,
                            "src": "4870:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4877:43:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            },
                            "value": "Address: low-level call with value failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            }
                          ],
                          "id": 2346,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2354,
                            2398
                          ],
                          "referencedDeclaration": 2398,
                          "src": "4834:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4834:87:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2345,
                      "id": 2352,
                      "nodeType": "Return",
                      "src": "4827:94:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2335,
                  "nodeType": "StructuredDocumentation",
                  "src": "4348:351:16",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                },
                "id": 2354,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "4713:21:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2342,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2337,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4743:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2354,
                      "src": "4735:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2336,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4735:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2339,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4764:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2354,
                      "src": "4751:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2338,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4751:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2341,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "4778:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2354,
                      "src": "4770:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2340,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4770:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4734:50:16"
                },
                "returnParameters": {
                  "id": 2345,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2344,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2354,
                      "src": "4803:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2343,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4803:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4802:14:16"
                },
                "scope": 2574,
                "src": "4704:224:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2397,
                  "nodeType": "Block",
                  "src": "5355:267:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2371,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5381:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$2574",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$2574",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  ],
                                  "id": 2370,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5373:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2369,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5373:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5373:13:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2373,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5387:7:16",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "5373:21:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2374,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2361,
                              "src": "5398:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5373:30:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                            "id": 2376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5405:40:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            },
                            "value": "Address: insufficient balance for call"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            }
                          ],
                          "id": 2368,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5365:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5365:81:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2378,
                      "nodeType": "ExpressionStatement",
                      "src": "5365:81:16"
                    },
                    {
                      "assignments": [
                        2380,
                        2382
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2380,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "5462:7:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2397,
                          "src": "5457:12:16",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2379,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "5457:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2382,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "5484:10:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2397,
                          "src": "5471:23:16",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2381,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5471:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2389,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 2387,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2359,
                            "src": "5524:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2383,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2357,
                              "src": "5498:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5505:4:16",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5498:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 2385,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2361,
                              "src": "5517:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "5498:25:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5498:31:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5456:73:16"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2391,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "5573:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2392,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2380,
                            "src": "5581:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2393,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2382,
                            "src": "5590:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2394,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2363,
                            "src": "5602:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2390,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "5546:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5546:69:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2367,
                      "id": 2396,
                      "nodeType": "Return",
                      "src": "5539:76:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2355,
                  "nodeType": "StructuredDocumentation",
                  "src": "4934:237:16",
                  "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 2398,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "5185:21:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2364,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2357,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5224:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2398,
                      "src": "5216:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2356,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5216:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2359,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5253:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2398,
                      "src": "5240:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2358,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5240:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2361,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "5275:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2398,
                      "src": "5267:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2360,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2363,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "5304:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2398,
                      "src": "5290:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2362,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5290:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5206:116:16"
                },
                "returnParameters": {
                  "id": 2367,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2366,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2398,
                      "src": "5341:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2365,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5340:14:16"
                },
                "scope": 2574,
                "src": "5176:446:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2414,
                  "nodeType": "Block",
                  "src": "5899:97:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2409,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2401,
                            "src": "5935:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2410,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2403,
                            "src": "5943:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                            "id": 2411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5949:39:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            },
                            "value": "Address: low-level static call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            }
                          ],
                          "id": 2408,
                          "name": "functionStaticCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2415,
                            2444
                          ],
                          "referencedDeclaration": 2444,
                          "src": "5916:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5916:73:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2407,
                      "id": 2413,
                      "nodeType": "Return",
                      "src": "5909:80:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2399,
                  "nodeType": "StructuredDocumentation",
                  "src": "5628:166:16",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 2415,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "5808:18:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2404,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2401,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5835:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "5827:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2400,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5827:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2403,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5856:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "5843:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2402,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5843:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5826:35:16"
                },
                "returnParameters": {
                  "id": 2407,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2406,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2415,
                      "src": "5885:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2405,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5884:14:16"
                },
                "scope": 2574,
                "src": "5799:197:16",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2443,
                  "nodeType": "Block",
                  "src": "6338:168:16",
                  "statements": [
                    {
                      "assignments": [
                        2428,
                        2430
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2428,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "6354:7:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2443,
                          "src": "6349:12:16",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2427,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6349:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2430,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "6376:10:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2443,
                          "src": "6363:23:16",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2429,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6363:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2435,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 2433,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2420,
                            "src": "6408:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2431,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2418,
                            "src": "6390:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6397:10:16",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "6390:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6390:23:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6348:65:16"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2437,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2418,
                            "src": "6457:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2438,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "6465:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2439,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "6474:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2440,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "6486:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2436,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "6430:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6430:69:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2426,
                      "id": 2442,
                      "nodeType": "Return",
                      "src": "6423:76:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2416,
                  "nodeType": "StructuredDocumentation",
                  "src": "6002:173:16",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 2444,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "6189:18:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2423,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2418,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6225:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2444,
                      "src": "6217:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2417,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6217:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2420,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6254:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2444,
                      "src": "6241:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2419,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6241:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2422,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "6282:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2444,
                      "src": "6268:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2421,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6268:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6207:93:16"
                },
                "returnParameters": {
                  "id": 2426,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2425,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2444,
                      "src": "6324:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2424,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6324:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6323:14:16"
                },
                "scope": 2574,
                "src": "6180:326:16",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2460,
                  "nodeType": "Block",
                  "src": "6782:101:16",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2455,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2447,
                            "src": "6820:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2456,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2449,
                            "src": "6828:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6834:41:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            },
                            "value": "Address: low-level delegate call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            }
                          ],
                          "id": 2454,
                          "name": "functionDelegateCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2461,
                            2490
                          ],
                          "referencedDeclaration": 2490,
                          "src": "6799:20:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6799:77:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2453,
                      "id": 2459,
                      "nodeType": "Return",
                      "src": "6792:84:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2445,
                  "nodeType": "StructuredDocumentation",
                  "src": "6512:168:16",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 2461,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "6694:20:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2450,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2447,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6723:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2461,
                      "src": "6715:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2446,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6715:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2449,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6744:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2461,
                      "src": "6731:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2448,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6714:35:16"
                },
                "returnParameters": {
                  "id": 2453,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2452,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2461,
                      "src": "6768:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2451,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6768:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6767:14:16"
                },
                "scope": 2574,
                "src": "6685:198:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2489,
                  "nodeType": "Block",
                  "src": "7224:170:16",
                  "statements": [
                    {
                      "assignments": [
                        2474,
                        2476
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2474,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "7240:7:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2489,
                          "src": "7235:12:16",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2473,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "7235:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2476,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "7262:10:16",
                          "nodeType": "VariableDeclaration",
                          "scope": 2489,
                          "src": "7249:23:16",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2475,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7249:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2481,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 2479,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2466,
                            "src": "7296:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2477,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2464,
                            "src": "7276:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7283:12:16",
                          "memberName": "delegatecall",
                          "nodeType": "MemberAccess",
                          "src": "7276:19:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) returns (bool,bytes memory)"
                          }
                        },
                        "id": 2480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7276:25:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7234:67:16"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2483,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2464,
                            "src": "7345:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2484,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2474,
                            "src": "7353:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2485,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2476,
                            "src": "7362:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2486,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2468,
                            "src": "7374:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2482,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2529,
                          "src": "7318:26:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7318:69:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2472,
                      "id": 2488,
                      "nodeType": "Return",
                      "src": "7311:76:16"
                    }
                  ]
                },
                "documentation": {
                  "id": 2462,
                  "nodeType": "StructuredDocumentation",
                  "src": "6889:175:16",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 2490,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "7078:20:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2469,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2464,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7116:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2490,
                      "src": "7108:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2463,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7108:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2466,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7145:4:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2490,
                      "src": "7132:17:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2465,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7132:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2468,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7173:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2490,
                      "src": "7159:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2467,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7159:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7098:93:16"
                },
                "returnParameters": {
                  "id": 2472,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2471,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2490,
                      "src": "7210:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2470,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7210:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7209:14:16"
                },
                "scope": 2574,
                "src": "7069:325:16",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2528,
                  "nodeType": "Block",
                  "src": "7876:434:16",
                  "statements": [
                    {
                      "condition": {
                        "id": 2504,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "7890:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2526,
                        "nodeType": "Block",
                        "src": "8246:58:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2522,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2497,
                                  "src": "8268:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 2523,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2499,
                                  "src": "8280:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2521,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2573,
                                "src": "8260:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8260:33:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2525,
                            "nodeType": "ExpressionStatement",
                            "src": "8260:33:16"
                          }
                        ]
                      },
                      "id": 2527,
                      "nodeType": "IfStatement",
                      "src": "7886:418:16",
                      "trueBody": {
                        "id": 2520,
                        "nodeType": "Block",
                        "src": "7899:341:16",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2505,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2497,
                                  "src": "7917:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 2506,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7928:6:16",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7917:17:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7938:1:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7917:22:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2517,
                            "nodeType": "IfStatement",
                            "src": "7913:286:16",
                            "trueBody": {
                              "id": 2516,
                              "nodeType": "Block",
                              "src": "7941:258:16",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 2511,
                                            "name": "target",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2493,
                                            "src": "8143:6:16",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2510,
                                          "name": "isContract",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2262,
                                          "src": "8132:10:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 2512,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8132:18:16",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                        "id": 2513,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8152:31:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        },
                                        "value": "Address: call to non-contract"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        }
                                      ],
                                      "id": 2509,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "8124:7:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 2514,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8124:60:16",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2515,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8124:60:16"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 2518,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2497,
                              "src": "8219:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 2503,
                            "id": 2519,
                            "nodeType": "Return",
                            "src": "8212:17:16"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 2491,
                  "nodeType": "StructuredDocumentation",
                  "src": "7400:277:16",
                  "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
                },
                "id": 2529,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResultFromTarget",
                "nameLocation": "7691:26:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2500,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2493,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7735:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "7727:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2492,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7727:7:16",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2495,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7756:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "7751:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2494,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7751:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2497,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "7786:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "7773:23:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2496,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7773:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2499,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7820:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "7806:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2498,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7806:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7717:121:16"
                },
                "returnParameters": {
                  "id": 2503,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2502,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2529,
                      "src": "7862:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2501,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7862:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7861:14:16"
                },
                "scope": 2574,
                "src": "7682:628:16",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2552,
                  "nodeType": "Block",
                  "src": "8691:135:16",
                  "statements": [
                    {
                      "condition": {
                        "id": 2541,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "8705:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2550,
                        "nodeType": "Block",
                        "src": "8762:58:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2546,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2534,
                                  "src": "8784:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 2547,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2536,
                                  "src": "8796:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2545,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2573,
                                "src": "8776:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 2548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8776:33:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2549,
                            "nodeType": "ExpressionStatement",
                            "src": "8776:33:16"
                          }
                        ]
                      },
                      "id": 2551,
                      "nodeType": "IfStatement",
                      "src": "8701:119:16",
                      "trueBody": {
                        "id": 2544,
                        "nodeType": "Block",
                        "src": "8714:42:16",
                        "statements": [
                          {
                            "expression": {
                              "id": 2542,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2534,
                              "src": "8735:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 2540,
                            "id": 2543,
                            "nodeType": "Return",
                            "src": "8728:17:16"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 2530,
                  "nodeType": "StructuredDocumentation",
                  "src": "8316:210:16",
                  "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
                },
                "id": 2553,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResult",
                "nameLocation": "8540:16:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2537,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2532,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8571:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "8566:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2531,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8566:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2534,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8601:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "8588:23:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2533,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8588:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2536,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8635:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "8621:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2535,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8621:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8556:97:16"
                },
                "returnParameters": {
                  "id": 2540,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2539,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2553,
                      "src": "8677:12:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2538,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8677:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8676:14:16"
                },
                "scope": 2574,
                "src": "8531:295:16",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2572,
                  "nodeType": "Block",
                  "src": "8915:457:16",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2560,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2555,
                            "src": "8991:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 2561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9002:6:16",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8991:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9011:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8991:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2570,
                        "nodeType": "Block",
                        "src": "9321:45:16",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2567,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2557,
                                  "src": "9342:12:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2566,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "9335:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 2568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9335:20:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2569,
                            "nodeType": "ExpressionStatement",
                            "src": "9335:20:16"
                          }
                        ]
                      },
                      "id": 2571,
                      "nodeType": "IfStatement",
                      "src": "8987:379:16",
                      "trueBody": {
                        "id": 2565,
                        "nodeType": "Block",
                        "src": "9014:301:16",
                        "statements": [
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "9172:133:16",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9190:40:16",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "9219:10:16"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9213:5:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9213:17:16"
                                  },
                                  "variables": [
                                    {
                                      "name": "returndata_size",
                                      "nodeType": "YulTypedName",
                                      "src": "9194:15:16",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9258:2:16",
                                            "type": "",
                                            "value": "32"
                                          },
                                          {
                                            "name": "returndata",
                                            "nodeType": "YulIdentifier",
                                            "src": "9262:10:16"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9254:3:16"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9254:19:16"
                                      },
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulIdentifier",
                                        "src": "9275:15:16"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "9247:6:16"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9247:44:16"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9247:44:16"
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 2555,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9219:10:16",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2555,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9262:10:16",
                                "valueSize": 1
                              }
                            ],
                            "id": 2564,
                            "nodeType": "InlineAssembly",
                            "src": "9163:142:16"
                          }
                        ]
                      }
                    }
                  ]
                },
                "id": 2573,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_revert",
                "nameLocation": "8841:7:16",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2558,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2555,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8862:10:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2573,
                      "src": "8849:23:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2554,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8849:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2557,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8888:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 2573,
                      "src": "8874:26:16",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2556,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8874:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8848:53:16"
                },
                "returnParameters": {
                  "id": 2559,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8915:0:16"
                },
                "scope": 2574,
                "src": "8832:540:16",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 2575,
            "src": "194:9180:16",
            "usedErrors": []
          }
        ],
        "src": "101:9274:16"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "id": 17,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "exportedSymbols": {
          "ContextUpgradeable": [
            2625
          ],
          "Initializable": [
            2244
          ]
        },
        "id": 2626,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2576,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:17"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "file": "../proxy/utils/Initializable.sol",
            "id": 2578,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 2626,
            "sourceUnit": 2245,
            "src": "125:63:17",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 2577,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2244,
                  "src": "133:13:17",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 2580,
                  "name": "Initializable",
                  "nameLocations": [
                    "727:13:17"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2244,
                  "src": "727:13:17"
                },
                "id": 2581,
                "nodeType": "InheritanceSpecifier",
                "src": "727:13:17"
              }
            ],
            "canonicalName": "ContextUpgradeable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 2579,
              "nodeType": "StructuredDocumentation",
              "src": "190:496:17",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 2625,
            "linearizedBaseContracts": [
              2625,
              2244
            ],
            "name": "ContextUpgradeable",
            "nameLocation": "705:18:17",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 2586,
                  "nodeType": "Block",
                  "src": "799:7:17",
                  "statements": []
                },
                "id": 2587,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 2584,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 2583,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "782:16:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2189,
                      "src": "782:16:17"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "782:16:17"
                  }
                ],
                "name": "__Context_init",
                "nameLocation": "756:14:17",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2582,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "770:2:17"
                },
                "returnParameters": {
                  "id": 2585,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "799:0:17"
                },
                "scope": 2625,
                "src": "747:59:17",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2592,
                  "nodeType": "Block",
                  "src": "874:7:17",
                  "statements": []
                },
                "id": 2593,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 2590,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 2589,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "857:16:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2189,
                      "src": "857:16:17"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "857:16:17"
                  }
                ],
                "name": "__Context_init_unchained",
                "nameLocation": "821:24:17",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2588,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "845:2:17"
                },
                "returnParameters": {
                  "id": 2591,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "874:0:17"
                },
                "scope": 2625,
                "src": "812:69:17",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2601,
                  "nodeType": "Block",
                  "src": "948:34:17",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 2598,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "965:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "969:6:17",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "965:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 2597,
                      "id": 2600,
                      "nodeType": "Return",
                      "src": "958:17:17"
                    }
                  ]
                },
                "id": 2602,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "895:10:17",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2594,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "905:2:17"
                },
                "returnParameters": {
                  "id": 2597,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2596,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2602,
                      "src": "939:7:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2595,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "938:9:17"
                },
                "scope": 2625,
                "src": "886:96:17",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2610,
                  "nodeType": "Block",
                  "src": "1055:32:17",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 2607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1072:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1076:4:17",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "1072:8:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 2606,
                      "id": 2609,
                      "nodeType": "Return",
                      "src": "1065:15:17"
                    }
                  ]
                },
                "id": 2611,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "997:8:17",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2603,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1005:2:17"
                },
                "returnParameters": {
                  "id": 2606,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2605,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2611,
                      "src": "1039:14:17",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2604,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1038:16:17"
                },
                "scope": 2625,
                "src": "988:99:17",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2618,
                  "nodeType": "Block",
                  "src": "1165:25:17",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 2616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1182:1:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 2615,
                      "id": 2617,
                      "nodeType": "Return",
                      "src": "1175:8:17"
                    }
                  ]
                },
                "id": 2619,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "1102:20:17",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2612,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1122:2:17"
                },
                "returnParameters": {
                  "id": 2615,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2614,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2619,
                      "src": "1156:7:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1156:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1155:9:17"
                },
                "scope": 2625,
                "src": "1093:97:17",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 2620,
                  "nodeType": "StructuredDocumentation",
                  "src": "1196:254:17",
                  "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
                },
                "id": 2624,
                "mutability": "mutable",
                "name": "__gap",
                "nameLocation": "1475:5:17",
                "nodeType": "VariableDeclaration",
                "scope": 2625,
                "src": "1455:25:17",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$50_storage",
                  "typeString": "uint256[50]"
                },
                "typeName": {
                  "baseType": {
                    "id": 2621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2623,
                  "length": {
                    "hexValue": "3530",
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1463:2:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50_by_1",
                      "typeString": "int_const 50"
                    },
                    "value": "50"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "1455:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                    "typeString": "uint256[50]"
                  }
                },
                "visibility": "private"
              }
            ],
            "scope": 2626,
            "src": "687:796:17",
            "usedErrors": []
          }
        ],
        "src": "101:1383:17"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "id": 18,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "exportedSymbols": {
          "Address": [
            2955
          ]
        },
        "id": 2956,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 2627,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".1"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:18"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "Address",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 2628,
              "nodeType": "StructuredDocumentation",
              "src": "126:67:18",
              "text": " @dev Collection of functions related to the address type"
            },
            "fullyImplemented": true,
            "id": 2955,
            "linearizedBaseContracts": [
              2955
            ],
            "name": "Address",
            "nameLocation": "202:7:18",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 2642,
                  "nodeType": "Block",
                  "src": "1478:254:18",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 2636,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2631,
                              "src": "1702:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1710:4:18",
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "1702:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 2638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1715:6:18",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1702:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1724:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1702:23:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 2635,
                      "id": 2641,
                      "nodeType": "Return",
                      "src": "1695:30:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2629,
                  "nodeType": "StructuredDocumentation",
                  "src": "216:1191:18",
                  "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                },
                "id": 2643,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isContract",
                "nameLocation": "1421:10:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2632,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2631,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "1440:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2643,
                      "src": "1432:15:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2630,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1432:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1431:17:18"
                },
                "returnParameters": {
                  "id": 2635,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2634,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2643,
                      "src": "1472:4:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2633,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1471:6:18"
                },
                "scope": 2955,
                "src": "1412:320:18",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2676,
                  "nodeType": "Block",
                  "src": "2718:241:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2654,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2744:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Address_$2955",
                                      "typeString": "library Address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Address_$2955",
                                      "typeString": "library Address"
                                    }
                                  ],
                                  "id": 2653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2736:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2652,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2736:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2655,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2736:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2750:7:18",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2736:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2657,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2648,
                              "src": "2761:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2736:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                            "id": 2659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2769:31:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            },
                            "value": "Address: insufficient balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            }
                          ],
                          "id": 2651,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2728:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2728:73:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2661,
                      "nodeType": "ExpressionStatement",
                      "src": "2728:73:18"
                    },
                    {
                      "assignments": [
                        2663,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2663,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "2818:7:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2676,
                          "src": "2813:12:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2662,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "2813:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 2670,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 2668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2861:2:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 2664,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2646,
                              "src": "2831:9:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2841:4:18",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2831:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 2666,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2648,
                              "src": "2853:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "2831:29:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 2669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2831:33:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2812:52:18"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2672,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2663,
                            "src": "2882:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                            "id": 2673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2891:60:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            },
                            "value": "Address: unable to send value, recipient may have reverted"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            }
                          ],
                          "id": 2671,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2874:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:78:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2675,
                      "nodeType": "ExpressionStatement",
                      "src": "2874:78:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2644,
                  "nodeType": "StructuredDocumentation",
                  "src": "1738:904:18",
                  "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                },
                "id": 2677,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sendValue",
                "nameLocation": "2656:9:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2649,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2646,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "2682:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2677,
                      "src": "2666:25:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 2645,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2666:15:18",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2648,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2701:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2677,
                      "src": "2693:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2693:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2665:43:18"
                },
                "returnParameters": {
                  "id": 2650,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2718:0:18"
                },
                "scope": 2955,
                "src": "2647:312:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2694,
                  "nodeType": "Block",
                  "src": "3790:96:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2688,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2680,
                            "src": "3829:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2689,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2682,
                            "src": "3837:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3843:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                            "id": 2691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3846:32:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            },
                            "value": "Address: low-level call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            }
                          ],
                          "id": 2687,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2735,
                            2779
                          ],
                          "referencedDeclaration": 2779,
                          "src": "3807:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3807:72:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2686,
                      "id": 2693,
                      "nodeType": "Return",
                      "src": "3800:79:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2678,
                  "nodeType": "StructuredDocumentation",
                  "src": "2965:731:18",
                  "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                },
                "id": 2695,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "3710:12:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2683,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2680,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "3731:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2695,
                      "src": "3723:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2679,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3723:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2682,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3752:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2695,
                      "src": "3739:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2681,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3739:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3722:35:18"
                },
                "returnParameters": {
                  "id": 2686,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2685,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2695,
                      "src": "3776:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2684,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3776:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3775:14:18"
                },
                "scope": 2955,
                "src": "3701:185:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2714,
                  "nodeType": "Block",
                  "src": "4255:76:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2708,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2698,
                            "src": "4294:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2709,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2700,
                            "src": "4302:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 2710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4308:1:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 2711,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2702,
                            "src": "4311:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2707,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2735,
                            2779
                          ],
                          "referencedDeclaration": 2779,
                          "src": "4272:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4272:52:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2706,
                      "id": 2713,
                      "nodeType": "Return",
                      "src": "4265:59:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2696,
                  "nodeType": "StructuredDocumentation",
                  "src": "3892:211:18",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 2715,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "4117:12:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2703,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2698,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4147:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "4139:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2697,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4139:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2700,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4176:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "4163:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2699,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4163:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2702,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "4204:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "4190:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2701,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4190:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4129:93:18"
                },
                "returnParameters": {
                  "id": 2706,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2705,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2715,
                      "src": "4241:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2704,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4241:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4240:14:18"
                },
                "scope": 2955,
                "src": "4108:223:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2734,
                  "nodeType": "Block",
                  "src": "4806:111:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2728,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2718,
                            "src": "4845:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2729,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2720,
                            "src": "4853:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2730,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2722,
                            "src": "4859:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                            "id": 2731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4866:43:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            },
                            "value": "Address: low-level call with value failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            }
                          ],
                          "id": 2727,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2735,
                            2779
                          ],
                          "referencedDeclaration": 2779,
                          "src": "4823:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4823:87:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2726,
                      "id": 2733,
                      "nodeType": "Return",
                      "src": "4816:94:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2716,
                  "nodeType": "StructuredDocumentation",
                  "src": "4337:351:18",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                },
                "id": 2735,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "4702:21:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2723,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2718,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4732:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2735,
                      "src": "4724:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2717,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4724:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2720,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4753:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2735,
                      "src": "4740:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2719,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4740:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2722,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "4767:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2735,
                      "src": "4759:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2721,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4759:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4723:50:18"
                },
                "returnParameters": {
                  "id": 2726,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2725,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2735,
                      "src": "4792:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2724,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4792:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4791:14:18"
                },
                "scope": 2955,
                "src": "4693:224:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2778,
                  "nodeType": "Block",
                  "src": "5344:267:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2752,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5370:4:18",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Address_$2955",
                                      "typeString": "library Address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Address_$2955",
                                      "typeString": "library Address"
                                    }
                                  ],
                                  "id": 2751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5362:7:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2750,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5362:7:18",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5362:13:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5376:7:18",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "5362:21:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 2755,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2742,
                              "src": "5387:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5362:30:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                            "id": 2757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5394:40:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            },
                            "value": "Address: insufficient balance for call"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            }
                          ],
                          "id": 2749,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5354:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 2758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5354:81:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 2759,
                      "nodeType": "ExpressionStatement",
                      "src": "5354:81:18"
                    },
                    {
                      "assignments": [
                        2761,
                        2763
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2761,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "5451:7:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2778,
                          "src": "5446:12:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2760,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "5446:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2763,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "5473:10:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2778,
                          "src": "5460:23:18",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2762,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5460:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2770,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 2768,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2740,
                            "src": "5513:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2764,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2738,
                              "src": "5487:6:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5494:4:18",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5487:11:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 2766,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2742,
                              "src": "5506:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "5487:25:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 2769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5487:31:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5445:73:18"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2772,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2738,
                            "src": "5562:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2773,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2761,
                            "src": "5570:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2774,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2763,
                            "src": "5579:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2775,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2744,
                            "src": "5591:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2771,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "5535:26:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5535:69:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2748,
                      "id": 2777,
                      "nodeType": "Return",
                      "src": "5528:76:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2736,
                  "nodeType": "StructuredDocumentation",
                  "src": "4923:237:18",
                  "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 2779,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "5174:21:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2745,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2738,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5213:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2779,
                      "src": "5205:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2737,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5205:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2740,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5242:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2779,
                      "src": "5229:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2739,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5229:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2742,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "5264:5:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2779,
                      "src": "5256:13:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5256:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2744,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "5293:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2779,
                      "src": "5279:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2743,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5279:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5195:116:18"
                },
                "returnParameters": {
                  "id": 2748,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2747,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2779,
                      "src": "5330:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2746,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5330:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5329:14:18"
                },
                "scope": 2955,
                "src": "5165:446:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2795,
                  "nodeType": "Block",
                  "src": "5888:97:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2790,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2782,
                            "src": "5924:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2791,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2784,
                            "src": "5932:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                            "id": 2792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5938:39:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            },
                            "value": "Address: low-level static call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            }
                          ],
                          "id": 2789,
                          "name": "functionStaticCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2796,
                            2825
                          ],
                          "referencedDeclaration": 2825,
                          "src": "5905:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5905:73:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2788,
                      "id": 2794,
                      "nodeType": "Return",
                      "src": "5898:80:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2780,
                  "nodeType": "StructuredDocumentation",
                  "src": "5617:166:18",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 2796,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "5797:18:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2785,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2782,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5824:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2796,
                      "src": "5816:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2781,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5816:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2784,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5845:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2796,
                      "src": "5832:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2783,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5832:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5815:35:18"
                },
                "returnParameters": {
                  "id": 2788,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2787,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2796,
                      "src": "5874:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2786,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5874:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5873:14:18"
                },
                "scope": 2955,
                "src": "5788:197:18",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2824,
                  "nodeType": "Block",
                  "src": "6327:168:18",
                  "statements": [
                    {
                      "assignments": [
                        2809,
                        2811
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2809,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "6343:7:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2824,
                          "src": "6338:12:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2808,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6338:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2811,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "6365:10:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2824,
                          "src": "6352:23:18",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2810,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6352:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2816,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 2814,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2801,
                            "src": "6397:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2812,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2799,
                            "src": "6379:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6386:10:18",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "6379:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6379:23:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6337:65:18"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2818,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2799,
                            "src": "6446:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2819,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2809,
                            "src": "6454:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2820,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2811,
                            "src": "6463:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2821,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2803,
                            "src": "6475:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2817,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "6419:26:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6419:69:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2807,
                      "id": 2823,
                      "nodeType": "Return",
                      "src": "6412:76:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2797,
                  "nodeType": "StructuredDocumentation",
                  "src": "5991:173:18",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 2825,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "6178:18:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2804,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2799,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6214:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2825,
                      "src": "6206:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2798,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6206:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2801,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6243:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2825,
                      "src": "6230:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2800,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6230:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2803,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "6271:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2825,
                      "src": "6257:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2802,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6257:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6196:93:18"
                },
                "returnParameters": {
                  "id": 2807,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2806,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2825,
                      "src": "6313:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2805,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6313:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6312:14:18"
                },
                "scope": 2955,
                "src": "6169:326:18",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2841,
                  "nodeType": "Block",
                  "src": "6771:101:18",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2836,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2828,
                            "src": "6809:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2837,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2830,
                            "src": "6817:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                            "id": 2838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6823:41:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            },
                            "value": "Address: low-level delegate call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            }
                          ],
                          "id": 2835,
                          "name": "functionDelegateCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2842,
                            2871
                          ],
                          "referencedDeclaration": 2871,
                          "src": "6788:20:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6788:77:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2834,
                      "id": 2840,
                      "nodeType": "Return",
                      "src": "6781:84:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2826,
                  "nodeType": "StructuredDocumentation",
                  "src": "6501:168:18",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 2842,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "6683:20:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2831,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2828,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6712:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2842,
                      "src": "6704:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2827,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6704:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2830,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6733:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2842,
                      "src": "6720:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2829,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6720:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6703:35:18"
                },
                "returnParameters": {
                  "id": 2834,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2833,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2842,
                      "src": "6757:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2832,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6757:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6756:14:18"
                },
                "scope": 2955,
                "src": "6674:198:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2870,
                  "nodeType": "Block",
                  "src": "7213:170:18",
                  "statements": [
                    {
                      "assignments": [
                        2855,
                        2857
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 2855,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "7229:7:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2870,
                          "src": "7224:12:18",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 2854,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "7224:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 2857,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "7251:10:18",
                          "nodeType": "VariableDeclaration",
                          "scope": 2870,
                          "src": "7238:23:18",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 2856,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7238:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 2862,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 2860,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2847,
                            "src": "7285:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 2858,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2845,
                            "src": "7265:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7272:12:18",
                          "memberName": "delegatecall",
                          "nodeType": "MemberAccess",
                          "src": "7265:19:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) returns (bool,bytes memory)"
                          }
                        },
                        "id": 2861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7265:25:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7223:67:18"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2864,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2845,
                            "src": "7334:6:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2865,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2855,
                            "src": "7342:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 2866,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2857,
                            "src": "7351:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 2867,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2849,
                            "src": "7363:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 2863,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2910,
                          "src": "7307:26:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7307:69:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 2853,
                      "id": 2869,
                      "nodeType": "Return",
                      "src": "7300:76:18"
                    }
                  ]
                },
                "documentation": {
                  "id": 2843,
                  "nodeType": "StructuredDocumentation",
                  "src": "6878:175:18",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 2871,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "7067:20:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2850,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2845,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7105:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2871,
                      "src": "7097:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2844,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7097:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2847,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7134:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2871,
                      "src": "7121:17:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2846,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7121:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2849,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7162:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2871,
                      "src": "7148:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2848,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7148:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7087:93:18"
                },
                "returnParameters": {
                  "id": 2853,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2852,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2871,
                      "src": "7199:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2851,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7199:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7198:14:18"
                },
                "scope": 2955,
                "src": "7058:325:18",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2909,
                  "nodeType": "Block",
                  "src": "7865:434:18",
                  "statements": [
                    {
                      "condition": {
                        "id": 2885,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2876,
                        "src": "7879:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2907,
                        "nodeType": "Block",
                        "src": "8235:58:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2903,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2878,
                                  "src": "8257:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 2904,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2880,
                                  "src": "8269:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2902,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "8249:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 2905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8249:33:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2906,
                            "nodeType": "ExpressionStatement",
                            "src": "8249:33:18"
                          }
                        ]
                      },
                      "id": 2908,
                      "nodeType": "IfStatement",
                      "src": "7875:418:18",
                      "trueBody": {
                        "id": 2901,
                        "nodeType": "Block",
                        "src": "7888:341:18",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2886,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2878,
                                  "src": "7906:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 2887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7917:6:18",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7906:17:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7927:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7906:22:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2898,
                            "nodeType": "IfStatement",
                            "src": "7902:286:18",
                            "trueBody": {
                              "id": 2897,
                              "nodeType": "Block",
                              "src": "7930:258:18",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 2892,
                                            "name": "target",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2874,
                                            "src": "8132:6:18",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 2891,
                                          "name": "isContract",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2643,
                                          "src": "8121:10:18",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 2893,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8121:18:18",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                        "id": 2894,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8141:31:18",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        },
                                        "value": "Address: call to non-contract"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        }
                                      ],
                                      "id": 2890,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "8113:7:18",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 2895,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8113:60:18",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2896,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8113:60:18"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 2899,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2878,
                              "src": "8208:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 2884,
                            "id": 2900,
                            "nodeType": "Return",
                            "src": "8201:17:18"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 2872,
                  "nodeType": "StructuredDocumentation",
                  "src": "7389:277:18",
                  "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
                },
                "id": 2910,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResultFromTarget",
                "nameLocation": "7680:26:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2881,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2874,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7724:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2910,
                      "src": "7716:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2873,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7716:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2876,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7745:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2910,
                      "src": "7740:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2875,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7740:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2878,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "7775:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2910,
                      "src": "7762:23:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2877,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7762:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2880,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7809:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2910,
                      "src": "7795:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2879,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7795:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7706:121:18"
                },
                "returnParameters": {
                  "id": 2884,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2883,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2910,
                      "src": "7851:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2882,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7851:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7850:14:18"
                },
                "scope": 2955,
                "src": "7671:628:18",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2933,
                  "nodeType": "Block",
                  "src": "8680:135:18",
                  "statements": [
                    {
                      "condition": {
                        "id": 2922,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2913,
                        "src": "8694:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2931,
                        "nodeType": "Block",
                        "src": "8751:58:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2927,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2915,
                                  "src": "8773:10:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 2928,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2917,
                                  "src": "8785:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2926,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2954,
                                "src": "8765:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 2929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8765:33:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2930,
                            "nodeType": "ExpressionStatement",
                            "src": "8765:33:18"
                          }
                        ]
                      },
                      "id": 2932,
                      "nodeType": "IfStatement",
                      "src": "8690:119:18",
                      "trueBody": {
                        "id": 2925,
                        "nodeType": "Block",
                        "src": "8703:42:18",
                        "statements": [
                          {
                            "expression": {
                              "id": 2923,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2915,
                              "src": "8724:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 2921,
                            "id": 2924,
                            "nodeType": "Return",
                            "src": "8717:17:18"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 2911,
                  "nodeType": "StructuredDocumentation",
                  "src": "8305:210:18",
                  "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
                },
                "id": 2934,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResult",
                "nameLocation": "8529:16:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2918,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2913,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8560:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2934,
                      "src": "8555:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2912,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8555:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2915,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8590:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2934,
                      "src": "8577:23:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2914,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8577:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2917,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8624:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2934,
                      "src": "8610:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2916,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8610:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8545:97:18"
                },
                "returnParameters": {
                  "id": 2921,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2920,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 2934,
                      "src": "8666:12:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2919,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8666:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8665:14:18"
                },
                "scope": 2955,
                "src": "8520:295:18",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 2953,
                  "nodeType": "Block",
                  "src": "8904:457:18",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2941,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2936,
                            "src": "8980:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 2942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8991:6:18",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8980:17:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9000:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8980:21:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 2951,
                        "nodeType": "Block",
                        "src": "9310:45:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2948,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2938,
                                  "src": "9331:12:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2947,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "9324:6:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 2949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9324:20:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2950,
                            "nodeType": "ExpressionStatement",
                            "src": "9324:20:18"
                          }
                        ]
                      },
                      "id": 2952,
                      "nodeType": "IfStatement",
                      "src": "8976:379:18",
                      "trueBody": {
                        "id": 2946,
                        "nodeType": "Block",
                        "src": "9003:301:18",
                        "statements": [
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "9161:133:18",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9179:40:18",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "9208:10:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9202:5:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9202:17:18"
                                  },
                                  "variables": [
                                    {
                                      "name": "returndata_size",
                                      "nodeType": "YulTypedName",
                                      "src": "9183:15:18",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9247:2:18",
                                            "type": "",
                                            "value": "32"
                                          },
                                          {
                                            "name": "returndata",
                                            "nodeType": "YulIdentifier",
                                            "src": "9251:10:18"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9243:3:18"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9243:19:18"
                                      },
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulIdentifier",
                                        "src": "9264:15:18"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "9236:6:18"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9236:44:18"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9236:44:18"
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 2936,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9208:10:18",
                                "valueSize": 1
                              },
                              {
                                "declaration": 2936,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9251:10:18",
                                "valueSize": 1
                              }
                            ],
                            "id": 2945,
                            "nodeType": "InlineAssembly",
                            "src": "9152:142:18"
                          }
                        ]
                      }
                    }
                  ]
                },
                "id": 2954,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_revert",
                "nameLocation": "8830:7:18",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 2939,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 2936,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8851:10:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2954,
                      "src": "8838:23:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2935,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8838:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2938,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8877:12:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2954,
                      "src": "8863:26:18",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2937,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8863:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8837:53:18"
                },
                "returnParameters": {
                  "id": 2940,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8904:0:18"
                },
                "scope": 2955,
                "src": "8821:540:18",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 2956,
            "src": "194:9169:18",
            "usedErrors": []
          }
        ],
        "src": "101:9263:18"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
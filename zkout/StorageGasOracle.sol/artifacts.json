{
  "contracts": {
    "contracts/hooks/igp/StorageGasOracle.sol": {
      "StorageGasOracle": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "remoteDomain",
                "type": "uint32"
              },
              {
                "indexed": false,
                "internalType": "uint128",
                "name": "tokenExchangeRate",
                "type": "uint128"
              },
              {
                "indexed": false,
                "internalType": "uint128",
                "name": "gasPrice",
                "type": "uint128"
              }
            ],
            "name": "RemoteGasDataSet",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_destinationDomain",
                "type": "uint32"
              }
            ],
            "name": "getExchangeRateAndGasPrice",
            "outputs": [
              {
                "internalType": "uint128",
                "name": "tokenExchangeRate",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "gasPrice",
                "type": "uint128"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              }
            ],
            "name": "remoteGasData",
            "outputs": [
              {
                "internalType": "uint128",
                "name": "tokenExchangeRate",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "gasPrice",
                "type": "uint128"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "uint32",
                    "name": "remoteDomain",
                    "type": "uint32"
                  },
                  {
                    "internalType": "uint128",
                    "name": "tokenExchangeRate",
                    "type": "uint128"
                  },
                  {
                    "internalType": "uint128",
                    "name": "gasPrice",
                    "type": "uint128"
                  }
                ],
                "internalType": "struct StorageGasOracle.RemoteGasDataConfig",
                "name": "_config",
                "type": "tuple"
              }
            ],
            "name": "setRemoteGasData",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "components": [
                  {
                    "internalType": "uint32",
                    "name": "remoteDomain",
                    "type": "uint32"
                  },
                  {
                    "internalType": "uint128",
                    "name": "tokenExchangeRate",
                    "type": "uint128"
                  },
                  {
                    "internalType": "uint128",
                    "name": "gasPrice",
                    "type": "uint128"
                  }
                ],
                "internalType": "struct StorageGasOracle.RemoteGasDataConfig[]",
                "name": "_configs",
                "type": "tuple[]"
              }
            ],
            "name": "setRemoteGasDataConfigs",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"tokenExchangeRate\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"gasPrice\",\"type\":\"uint128\"}],\"name\":\"RemoteGasDataSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"}],\"name\":\"getExchangeRateAndGasPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"tokenExchangeRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gasPrice\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"remoteGasData\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"tokenExchangeRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gasPrice\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"tokenExchangeRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gasPrice\",\"type\":\"uint128\"}],\"internalType\":\"struct StorageGasOracle.RemoteGasDataConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"setRemoteGasData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"remoteDomain\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"tokenExchangeRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gasPrice\",\"type\":\"uint128\"}],\"internalType\":\"struct StorageGasOracle.RemoteGasDataConfig[]\",\"name\":\"_configs\",\"type\":\"tuple[]\"}],\"name\":\"setRemoteGasDataConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is intended to be owned by an address that will update the stored remote gas data.\",\"events\":{\"RemoteGasDataSet(uint32,uint128,uint128)\":{\"params\":{\"gasPrice\":\"The gas price on the remote chain.\",\"remoteDomain\":\"The remote domain in which the gas data was set for.\",\"tokenExchangeRate\":\"The exchange rate of the remote native token quoted in the local native token.\"}}},\"kind\":\"dev\",\"methods\":{\"getExchangeRateAndGasPrice(uint32)\":{\"params\":{\"_destinationDomain\":\"The destination domain.\"},\"returns\":{\"gasPrice\":\"The gas price on the remote chain.\",\"tokenExchangeRate\":\"The exchange rate of the remote native token quoted in the local native token.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRemoteGasData((uint32,uint128,uint128))\":{\"params\":{\"_config\":\"The config to use when setting the remote gas data.\"}},\"setRemoteGasDataConfigs((uint32,uint128,uint128)[])\":{\"params\":{\"_configs\":\"The configs to use when setting the remote gas data.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"RemoteGasDataSet(uint32,uint128,uint128)\":{\"notice\":\"Emitted when an entry in `remoteGasData` is set.\"}},\"kind\":\"user\",\"methods\":{\"getExchangeRateAndGasPrice(uint32)\":{\"notice\":\"Returns the stored `remoteGasData` for the `_destinationDomain`.\"},\"remoteGasData(uint32)\":{\"notice\":\"Keyed by remote domain, gas data on that remote domain.\"},\"setRemoteGasData((uint32,uint128,uint128))\":{\"notice\":\"Sets the remote gas data using the values in `_config`.\"},\"setRemoteGasDataConfigs((uint32,uint128,uint128)[])\":{\"notice\":\"Sets the remote gas data for many remotes at a time.\"}},\"notice\":\"A gas oracle that uses data stored within the contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/hooks/igp/StorageGasOracle.sol\":\"StorageGasOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/hooks/igp/StorageGasOracle.sol\":{\"keccak256\":\"0xa8bc2b687926d5c16f8c95343023a3502abc4cc74e22c65278d10cc3329e26c7\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://691b05506af1ae00480f64695d6f9a561e1671ac0017eca476e929e13973f88e\",\"dweb:/ipfs/QmY14B4L2ggKZbF9hwjTSMAeW7vDFyVAQCh35DDcvMHPQ8\"]},\"contracts/interfaces/IGasOracle.sol\":{\"keccak256\":\"0x95d292b25a8d2dd81f5459e2e37867dd880984caa319506c7e02b64fdc91e73d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://114b980a30bcf256fa8295cc55ed44e0ea7cf4e8a405c85e0388fa21e8a78211\",\"dweb:/ipfs/QmTwKZznQ8G9BD15gh3Qd97j4sgdqM8qK3SbkbBrMyyous\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"StorageGasOracle.sol:StorageGasOracle\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[8]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.le\t@.BB0_7\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.gt\t@.BB0_13\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tand\t@CPI0_15[0], r1, r2\n\tst.1\t128, r2\n\tshr.s\t128, r1, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_1[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_7:\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_15\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_19\n\tsub.s!\t@CPI0_14[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_28\n\tand\t@CPI0_1[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_44\n.BB0_13:\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tcontext.caller\tr3\n\tsub!\tr2, r3, r2\n\tjump.ne\t@.BB0_28\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_15[0], r2, r4\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_15[0], r2, r5\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\t192, r0, r2\n\tst.1\t64, r2\n\tst.1\t128, r4\n\tst.1\t160, r5\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_0[0], r1, r3\n\tsub.s!\t@CPI0_0[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r3\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr6, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[8]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr5, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[7], r0, r4\n\tadd\tstack-[8], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t128, r2\n\tand\t@CPI0_15[0], r2, r2\n\tld.1\t160, r3\n\tshl.s\t128, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tst.1\tr2, r6\n\tst.1\tr1, r4\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tjump\t@.BB0_44\n.BB0_45:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[8]\n\tnear_call\tr0, @allocate_memory, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_15[0], r2, r3\n\tst.1.inc\tr1, r3, r1\n\tshr.s\t128, r2, r2\n\tst.1\tr1, r2\n\tld.1\t64, r1\n\tadd\t32, r1, r4\n\tst.1\tr4, r2\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_19:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[2]\n\tsub.s!\t@CPI0_24[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[2], r0, r2\n\tadd\t35, r2, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\tstack-[2], r0, r2\n\tadd\t4, r2, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tsub.s!\t@CPI0_24[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[1], r0, r1\n\tmul\t96, r1, r1, r2\n\tadd\tstack-[2], r1, r1\n\tadd\t36, r1, r1\n\tsub!\tr1, r3, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_28\n\tsub!\tstack-[1], r0, r1\n\tjump.eq\t@.BB0_40\n\tadd\tr0, r0, stack-[8]\n.BB0_30:\n\tadd\tstack-[8], r0, r1\n\tmul\t96, r1, r1, r2\n\tadd\tstack-[2], r1, r1\n\tadd\t68, r1, r5\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r6\n\tptr.add\tr1, r6, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_15[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_27[0], r7, r4\n\tjump.ge\t@.BB0_33\n\tadd\t64, r7, r4\n\tst.1\t64, r4\n\tadd\tr7, r0, stack-[5]\n\tst.1.inc\tr7, r2, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r3\n\tsub.s\t64, r6, stack-[4]\n\tptr.add.s\tstack-[4], r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t1, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[7]\n\tadd\tr6, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r6\n\tadd\tstack-[7], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_15[0], r2, r2\n\tadd\tstack-[3], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t128, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\tstack-[4], r2, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tptr.add\tr2, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tptr.add\tr2, r6, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_15[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tst.1\tr4, r2\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[8], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\tstack-[1], r2, r1\n\tjump.lt\t@.BB0_30\n\tjump\t@.BB0_40\n.BB0_51:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_3[0], r1, r6\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_28\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_57\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tand\t@CPI0_1[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n.BB0_44:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_40:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_33:\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nallocate_memory:\n.func_begin1:\n\tld.1\t64, r1\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tjump.ge\t@.BB1_1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tret\n.BB1_1:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__sha3:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI2_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_2\n\tld\tr1, r1\n\tret\n.BB2_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_2:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 2376452954\nCPI0_7:\n\t.cell 4076725130\nCPI0_8:\n\t.cell 4076725131\nCPI0_9:\n\t.cell 4087433567\nCPI0_10:\n\t.cell 2376452955\nCPI0_11:\n\t.cell 2962118352\nCPI0_12:\n\t.cell 1627189116\nCPI0_13:\n\t.cell 1771024380\nCPI0_14:\n\t.cell 1901074598\nCPI0_15:\n\t.cell 340282366920938463463374607431768211455\nCPI0_16:\nCPI2_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_17:\n\t.cell -34128219718666734213180815741231052183153669176602975420401892145739730540908\nCPI0_18:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_19:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_20:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_21:\n\t.cell 10458117454244075803782624051200\nCPI0_22:\n\t.cell 5070602403274100847421635428352\nCPI0_23:\n\t.cell 2535301202817642044428229017600\nCPI0_24:\n\t.cell 18446744073709551615\nCPI0_25:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_26:\n\t.cell 7922816253787617000789217640448\nCPI0_27:\nCPI1_0:\n\t.cell 18446744073709551552\nCPI0_28:\nCPI1_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_29:\nCPI1_2:\n\t.cell 2852213850513516153367582212096\nCPI0_30:\n\t.cell 5070602400912917605986812821504\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "getExchangeRateAndGasPrice(uint32)": "60fcef7c",
            "owner()": "8da5cb5b",
            "remoteGasData(uint32)": "b08e56d0",
            "renounceOwnership()": "715018a6",
            "setRemoteGasData((uint32,uint128,uint128))": "f3a1495f",
            "setRemoteGasDataConfigs((uint32,uint128,uint128)[])": "698faffc",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"contracts/hooks/igp/StorageGasOracle.sol\", 1:\"contracts/interfaces/IGasOracle.sol\", 2:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 3:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\nobject \"StorageGasOracle_138\" {\n    code {\n        {\n            /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := sload(/** @src 2:2518:2524  \"_owner\" */ 0x00)\n            /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n            sstore(/** @src 2:2518:2524  \"_owner\" */ 0x00, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 3:734:744  \"msg.sender\" */ caller()))\n            /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 2:2518:2524  \"_owner\" */ 0x00, 0x00, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 3:734:744  \"msg.sender\" */ caller())\n            /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n            let _3 := datasize(\"StorageGasOracle_138_deployed\")\n            codecopy(_1, dataoffset(\"StorageGasOracle_138_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 0:\"contracts/hooks/igp/StorageGasOracle.sol\", 2:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 3:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\n    object \"StorageGasOracle_138_deployed\" {\n        code {\n            {\n                /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x60fcef7c {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _4 := and(value, 0xffffffff)\n                        if iszero(eq(value, _4)) { revert(_3, _3) }\n                        mstore(_3, _4)\n                        mstore(32, /** @src 0:2025:2038  \"remoteGasData\" */ 0x01)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let dataSlot := keccak256(_3, _1)\n                        let value_1 := allocate_memory()\n                        let _5 := sload(dataSlot)\n                        let cleaned := and(_5, 0xffffffffffffffffffffffffffffffff)\n                        mstore(value_1, cleaned)\n                        let _6 := shr(128, _5)\n                        mstore(add(value_1, 32), _6)\n                        let memPos := mload(_1)\n                        return(memPos, sub(abi_encode_uint128_uint128(memPos, cleaned, _6), memPos))\n                    }\n                    case 0x698faffc {\n                        if callvalue() { revert(_3, _3) }\n                        let _7 := 32\n                        if slt(add(calldatasize(), not(3)), _7) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _8 := 0xffffffffffffffff\n                        if gt(offset, _8) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let length := calldataload(add(_2, offset))\n                        if gt(length, _8) { revert(_3, _3) }\n                        let _9 := 36\n                        let _10 := 0x60\n                        if gt(add(add(offset, mul(length, _10)), _9), calldatasize()) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:2473:2486  \"uint256 i = 0\"\n                        let var_i := /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _3\n                        /// @src 0:2468:2558  \"for (uint256 i = 0; i < _len; i++) {...\"\n                        for { }\n                        /** @src 0:2488:2496  \"i < _len\" */ lt(var_i, length)\n                        /// @src 0:2473:2486  \"uint256 i = 0\"\n                        {\n                            /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                            if eq(var_i, not(0))\n                            {\n                                mstore(_3, shl(224, 0x4e487b71))\n                                mstore(_2, 0x11)\n                                revert(_3, _9)\n                            }\n                            /// @src 0:2498:2501  \"i++\"\n                            var_i := /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ add(var_i, 1)\n                        }\n                        /// @src 0:2498:2501  \"i++\"\n                        {\n                            /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                            let _11 := add(offset, mul(var_i, _10))\n                            let _12 := add(_11, _9)\n                            /// @src 0:3271:3296  \"_config.tokenExchangeRate\"\n                            let _13 := add(/** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _11, /** @src 0:3271:3296  \"_config.tokenExchangeRate\" */ 68)\n                            let expr := read_from_calldatat_uint128(_13)\n                            /// @src 0:3320:3336  \"_config.gasPrice\"\n                            let _14 := add(/** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _11, /** @src 0:3320:3336  \"_config.gasPrice\" */ 100)\n                            let expr_1 := read_from_calldatat_uint128(_14)\n                            /// @src 0:3213:3347  \"IGasOracle.RemoteGasData({...\"\n                            let expr_mpos := /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ allocate_memory()\n                            let _15 := 0xffffffffffffffffffffffffffffffff\n                            mstore(expr_mpos, and(expr, _15))\n                            /// @src 0:3213:3347  \"IGasOracle.RemoteGasData({...\"\n                            let _16 := add(expr_mpos, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _7)\n                            mstore(_16, and(expr_1, _15))\n                            let _17 := 0xffffffff\n                            mstore(_3, and(/** @src 0:3189:3209  \"_config.remoteDomain\" */ read_from_calldatat_uint32(_12), /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _17))\n                            mstore(_7, 1)\n                            let dataSlot_1 := keccak256(_3, _1)\n                            let cleaned_1 := and(mload(expr_mpos), _15)\n                            sstore(dataSlot_1, or(cleaned_1, and(shl(128, mload(_16)), not(0xffffffffffffffffffffffffffffffff))))\n                            /// @src 0:3393:3413  \"_config.remoteDomain\"\n                            let expr_2 := read_from_calldatat_uint32(_12)\n                            /// @src 0:3427:3452  \"_config.tokenExchangeRate\"\n                            let expr_3 := read_from_calldatat_uint128(_13)\n                            /// @src 0:3466:3482  \"_config.gasPrice\"\n                            let expr_4 := read_from_calldatat_uint128(_14)\n                            /// @src 0:3363:3492  \"RemoteGasDataSet(...\"\n                            let _18 := /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ mload(_1)\n                            /// @src 0:3363:3492  \"RemoteGasDataSet(...\"\n                            log2(_18, sub(abi_encode_uint128_uint128(_18, expr_3, expr_4), _18), 0xb48c1cb713397fc0c0649596c221270fec0b3de3f85ccf6a734411a2fe57a694, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ and(/** @src 0:3363:3492  \"RemoteGasDataSet(...\" */ expr_2, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _17))\n                        }\n                        return(_3, _3)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let _19 := sload(_3)\n                        sstore(_3, and(_19, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _3, _3, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ and(_19, sub(shl(160, 1), 1)), _3)\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_2 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, value_2)\n                        return(memPos_1, 32)\n                    }\n                    case 0xb08e56d0 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_3 := calldataload(_2)\n                        let _20 := and(value_3, 0xffffffff)\n                        if iszero(eq(value_3, _20)) { revert(_3, _3) }\n                        mstore(_3, _20)\n                        mstore(32, /** @src 0:653:717  \"mapping(uint32 => IGasOracle.RemoteGasData) public remoteGasData\" */ 1)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let _21 := sload(keccak256(_3, _1))\n                        let memPos_2 := mload(_1)\n                        return(memPos_2, sub(abi_encode_uint128_uint128(memPos_2, and(_21, 0xffffffffffffffffffffffffffffffff), shr(128, _21)), memPos_2))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_4 := calldataload(_2)\n                        let _22 := sub(shl(160, 1), 1)\n                        let _23 := and(value_4, _22)\n                        if iszero(eq(value_4, _23)) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        if /** @src 2:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _23)\n                        {\n                            let memPtr := mload(_1)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _2), 32)\n                            mstore(add(memPtr, 36), 38)\n                            mstore(add(memPtr, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr, 100), \"ddress\")\n                            revert(memPtr, 132)\n                        }\n                        let _24 := sload(_3)\n                        sstore(_3, or(and(_24, shl(160, 0xffffffffffffffffffffffff)), _23))\n                        /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ _3, _3, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ and(_24, _22), /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _23)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xf3a1495f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let value_5 := calldataload(/** @src 0:3271:3296  \"_config.tokenExchangeRate\" */ 36)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let _25 := 0xffffffffffffffffffffffffffffffff\n                        let _26 := and(value_5, _25)\n                        if iszero(eq(value_5, _26)) { revert(_3, _3) }\n                        let value_6 := calldataload(/** @src 0:3320:3336  \"_config.gasPrice\" */ 68)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let _27 := and(value_6, _25)\n                        if iszero(eq(value_6, _27)) { revert(_3, _3) }\n                        /// @src 0:3213:3347  \"IGasOracle.RemoteGasData({...\"\n                        let expr_mpos_1 := /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ allocate_memory()\n                        mstore(expr_mpos_1, _26)\n                        /// @src 0:3213:3347  \"IGasOracle.RemoteGasData({...\"\n                        let _28 := add(expr_mpos_1, /** @src 0:3271:3296  \"_config.tokenExchangeRate\" */ 32)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        mstore(_28, _27)\n                        let value_7 := calldataload(_2)\n                        let _29 := and(value_7, 0xffffffff)\n                        if iszero(eq(value_7, _29)) { revert(_3, _3) }\n                        mstore(_3, _29)\n                        mstore(/** @src 0:3271:3296  \"_config.tokenExchangeRate\" */ 32, /** @src 0:3175:3188  \"remoteGasData\" */ 0x01)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        let dataSlot_2 := keccak256(_3, _1)\n                        let cleaned_2 := and(mload(expr_mpos_1), _25)\n                        sstore(dataSlot_2, or(cleaned_2, and(shl(128, mload(_28)), not(0xffffffffffffffffffffffffffffffff))))\n                        /// @src 0:3363:3492  \"RemoteGasDataSet(...\"\n                        let _30 := /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ mload(_1)\n                        /// @src 0:3363:3492  \"RemoteGasDataSet(...\"\n                        log2(_30, sub(abi_encode_uint128_uint128(_30, value_5, value_6), _30), 0xb48c1cb713397fc0c0649596c221270fec0b3de3f85ccf6a734411a2fe57a694, _29)\n                        /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_uint128_uint128(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                let _1 := 0xffffffffffffffffffffffffffffffff\n                mstore(headStart, and(value0, _1))\n                mstore(add(headStart, 32), and(value1, _1))\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function read_from_calldatat_uint128(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n                returnValue := value\n            }\n            function read_from_calldatat_uint32(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n                returnValue := value\n            }\n            /// @ast-id 210 @src 2:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                let value := and(sload(/** @src 2:1273:1279  \"_owner\" */ 0x00), /** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 2:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\" */ value, /** @src 3:734:744  \"msg.sender\" */ caller()))\n                /// @src 0:477:3501  \"contract StorageGasOracle is IGasOracle, Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212209f99569116f7dfd8bd77ae1a43a215debc1b75f613390d66aea8579e2e61f57a64736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000091f40f9099115170223383be2a919abbda70b3884b5809c1aa57446a25",
        "factoryDependencies": {}
      }
    },
    "contracts/interfaces/IGasOracle.sol": {
      "IGasOracle": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_destinationDomain",
                "type": "uint32"
              }
            ],
            "name": "getExchangeRateAndGasPrice",
            "outputs": [
              {
                "internalType": "uint128",
                "name": "tokenExchangeRate",
                "type": "uint128"
              },
              {
                "internalType": "uint128",
                "name": "gasPrice",
                "type": "uint128"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_destinationDomain\",\"type\":\"uint32\"}],\"name\":\"getExchangeRateAndGasPrice\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"tokenExchangeRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"gasPrice\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGasOracle.sol\":\"IGasOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IGasOracle.sol\":{\"keccak256\":\"0x95d292b25a8d2dd81f5459e2e37867dd880984caa319506c7e02b64fdc91e73d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://114b980a30bcf256fa8295cc55ed44e0ea7cf4e8a405c85e0388fa21e8a78211\",\"dweb:/ipfs/QmTwKZznQ8G9BD15gh3Qd97j4sgdqM8qK3SbkbBrMyyous\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "getExchangeRateAndGasPrice(uint32)": "60fcef7c"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "Ownable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "Context": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "contracts/hooks/igp/StorageGasOracle.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "contracts/hooks/igp/StorageGasOracle.sol",
        "exportedSymbols": {
          "IGasOracle": [
            155
          ],
          "Ownable": [
            268
          ],
          "StorageGasOracle": [
            138
          ]
        },
        "id": 139,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:0"
          },
          {
            "absolutePath": "contracts/interfaces/IGasOracle.sol",
            "file": "../../interfaces/IGasOracle.sol",
            "id": 3,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 139,
            "sourceUnit": 156,
            "src": "118:59:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 2,
                  "name": "IGasOracle",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 155,
                  "src": "126:10:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
            "file": "@openzeppelin/contracts/access/Ownable.sol",
            "id": 5,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 139,
            "sourceUnit": 269,
            "src": "225:67:0",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 4,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 268,
                  "src": "233:7:0",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 7,
                  "name": "IGasOracle",
                  "nameLocations": [
                    "506:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 155,
                  "src": "506:10:0"
                },
                "id": 8,
                "nodeType": "InheritanceSpecifier",
                "src": "506:10:0"
              },
              {
                "baseName": {
                  "id": 9,
                  "name": "Ownable",
                  "nameLocations": [
                    "518:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 268,
                  "src": "518:7:0"
                },
                "id": 10,
                "nodeType": "InheritanceSpecifier",
                "src": "518:7:0"
              }
            ],
            "canonicalName": "StorageGasOracle",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 6,
              "nodeType": "StructuredDocumentation",
              "src": "294:182:0",
              "text": " @notice A gas oracle that uses data stored within the contract.\n @dev This contract is intended to be owned by an address that will\n update the stored remote gas data."
            },
            "fullyImplemented": true,
            "id": 138,
            "linearizedBaseContracts": [
              138,
              268,
              298,
              155
            ],
            "name": "StorageGasOracle",
            "nameLocation": "486:16:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "documentation": {
                  "id": 11,
                  "nodeType": "StructuredDocumentation",
                  "src": "581:67:0",
                  "text": "@notice Keyed by remote domain, gas data on that remote domain."
                },
                "functionSelector": "b08e56d0",
                "id": 16,
                "mutability": "mutable",
                "name": "remoteGasData",
                "nameLocation": "704:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 138,
                "src": "653:64:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_RemoteGasData_$145_storage_$",
                  "typeString": "mapping(uint32 => struct IGasOracle.RemoteGasData)"
                },
                "typeName": {
                  "id": 15,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 12,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "653:43:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_RemoteGasData_$145_storage_$",
                    "typeString": "mapping(uint32 => struct IGasOracle.RemoteGasData)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 14,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13,
                      "name": "IGasOracle.RemoteGasData",
                      "nameLocations": [
                        "671:10:0",
                        "682:13:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 145,
                      "src": "671:24:0"
                    },
                    "referencedDeclaration": 145,
                    "src": "671:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RemoteGasData_$145_storage_ptr",
                      "typeString": "struct IGasOracle.RemoteGasData"
                    }
                  }
                },
                "visibility": "public"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 17,
                  "nodeType": "StructuredDocumentation",
                  "src": "765:324:0",
                  "text": " @notice Emitted when an entry in `remoteGasData` is set.\n @param remoteDomain The remote domain in which the gas data was set for.\n @param tokenExchangeRate The exchange rate of the remote native token quoted in the local native token.\n @param gasPrice The gas price on the remote chain."
                },
                "eventSelector": "b48c1cb713397fc0c0649596c221270fec0b3de3f85ccf6a734411a2fe57a694",
                "id": 25,
                "name": "RemoteGasDataSet",
                "nameLocation": "1100:16:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 24,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 19,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "remoteDomain",
                      "nameLocation": "1141:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "1126:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1126:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "tokenExchangeRate",
                      "nameLocation": "1171:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "1163:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1163:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "gasPrice",
                      "nameLocation": "1206:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 25,
                      "src": "1198:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 22,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1198:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1116:104:0"
                },
                "src": "1094:127:0"
              },
              {
                "canonicalName": "StorageGasOracle.RemoteGasDataConfig",
                "id": 32,
                "members": [
                  {
                    "constant": false,
                    "id": 27,
                    "mutability": "mutable",
                    "name": "remoteDomain",
                    "nameLocation": "1271:12:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "1264:19:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "typeName": {
                      "id": 26,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1264:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 29,
                    "mutability": "mutable",
                    "name": "tokenExchangeRate",
                    "nameLocation": "1301:17:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "1293:25:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 28,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "1293:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 31,
                    "mutability": "mutable",
                    "name": "gasPrice",
                    "nameLocation": "1336:8:0",
                    "nodeType": "VariableDeclaration",
                    "scope": 32,
                    "src": "1328:16:0",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 30,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "1328:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "RemoteGasDataConfig",
                "nameLocation": "1234:19:0",
                "nodeType": "StructDefinition",
                "scope": 138,
                "src": "1227:124:0",
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  154
                ],
                "body": {
                  "id": 58,
                  "nodeType": "Block",
                  "src": "1924:221:0",
                  "statements": [
                    {
                      "assignments": [
                        47
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 47,
                          "mutability": "mutable",
                          "name": "_data",
                          "nameLocation": "2017:5:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 58,
                          "src": "1985:37:0",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RemoteGasData_$145_memory_ptr",
                            "typeString": "struct IGasOracle.RemoteGasData"
                          },
                          "typeName": {
                            "id": 46,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 45,
                              "name": "IGasOracle.RemoteGasData",
                              "nameLocations": [
                                "1985:10:0",
                                "1996:13:0"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 145,
                              "src": "1985:24:0"
                            },
                            "referencedDeclaration": 145,
                            "src": "1985:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RemoteGasData_$145_storage_ptr",
                              "typeString": "struct IGasOracle.RemoteGasData"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 51,
                      "initialValue": {
                        "baseExpression": {
                          "id": 48,
                          "name": "remoteGasData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "2025:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_RemoteGasData_$145_storage_$",
                            "typeString": "mapping(uint32 => struct IGasOracle.RemoteGasData storage ref)"
                          }
                        },
                        "id": 50,
                        "indexExpression": {
                          "id": 49,
                          "name": "_destinationDomain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 35,
                          "src": "2052:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2025:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RemoteGasData_$145_storage",
                          "typeString": "struct IGasOracle.RemoteGasData storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1985:95:0"
                    },
                    {
                      "expression": {
                        "components": [
                          {
                            "expression": {
                              "id": 52,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "2098:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RemoteGasData_$145_memory_ptr",
                                "typeString": "struct IGasOracle.RemoteGasData memory"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2104:17:0",
                            "memberName": "tokenExchangeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 142,
                            "src": "2098:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "expression": {
                              "id": 54,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47,
                              "src": "2123:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RemoteGasData_$145_memory_ptr",
                                "typeString": "struct IGasOracle.RemoteGasData memory"
                              }
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2129:8:0",
                            "memberName": "gasPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 144,
                            "src": "2123:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "id": 56,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2097:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                          "typeString": "tuple(uint128,uint128)"
                        }
                      },
                      "functionReturnParameters": 42,
                      "id": 57,
                      "nodeType": "Return",
                      "src": "2090:48:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 33,
                  "nodeType": "StructuredDocumentation",
                  "src": "1410:319:0",
                  "text": " @notice Returns the stored `remoteGasData` for the `_destinationDomain`.\n @param _destinationDomain The destination domain.\n @return tokenExchangeRate The exchange rate of the remote native token quoted in the local native token.\n @return gasPrice The gas price on the remote chain."
                },
                "functionSelector": "60fcef7c",
                "id": 59,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getExchangeRateAndGasPrice",
                "nameLocation": "1743:26:0",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 37,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1849:8:0"
                },
                "parameters": {
                  "id": 36,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "_destinationDomain",
                      "nameLocation": "1786:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "1779:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1779:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1769:41:0"
                },
                "returnParameters": {
                  "id": 42,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "tokenExchangeRate",
                      "nameLocation": "1883:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "1875:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1875:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41,
                      "mutability": "mutable",
                      "name": "gasPrice",
                      "nameLocation": "1910:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 59,
                      "src": "1902:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1902:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1874:45:0"
                },
                "scope": 138,
                "src": "1734:411:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 92,
                  "nodeType": "Block",
                  "src": "2418:146:0",
                  "statements": [
                    {
                      "assignments": [
                        70
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 70,
                          "mutability": "mutable",
                          "name": "_len",
                          "nameLocation": "2436:4:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 92,
                          "src": "2428:12:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2428:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 73,
                      "initialValue": {
                        "expression": {
                          "id": 71,
                          "name": "_configs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2443:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RemoteGasDataConfig_$32_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata[] calldata"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2452:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2443:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2428:30:0"
                    },
                    {
                      "body": {
                        "id": 90,
                        "nodeType": "Block",
                        "src": "2503:55:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 85,
                                    "name": "_configs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64,
                                    "src": "2535:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RemoteGasDataConfig_$32_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata[] calldata"
                                    }
                                  },
                                  "id": 87,
                                  "indexExpression": {
                                    "id": 86,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 75,
                                    "src": "2544:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2535:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                    "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                    "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                                  }
                                ],
                                "id": 84,
                                "name": "_setRemoteGasData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 137,
                                "src": "2517:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RemoteGasDataConfig_$32_calldata_ptr_$returns$__$",
                                  "typeString": "function (struct StorageGasOracle.RemoteGasDataConfig calldata)"
                                }
                              },
                              "id": 88,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2517:30:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 89,
                            "nodeType": "ExpressionStatement",
                            "src": "2517:30:0"
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 78,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "2488:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 79,
                          "name": "_len",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "2492:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2488:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 91,
                      "initializationExpression": {
                        "assignments": [
                          75
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 75,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "2481:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 91,
                            "src": "2473:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 74,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2473:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 77,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2485:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2473:13:0"
                      },
                      "loopExpression": {
                        "expression": {
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2498:3:0",
                          "subExpression": {
                            "id": 81,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75,
                            "src": "2498:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "2498:3:0"
                      },
                      "nodeType": "ForStatement",
                      "src": "2468:90:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 60,
                  "nodeType": "StructuredDocumentation",
                  "src": "2151:155:0",
                  "text": " @notice Sets the remote gas data for many remotes at a time.\n @param _configs The configs to use when setting the remote gas data."
                },
                "functionSelector": "698faffc",
                "id": 93,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 67,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 66,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2408:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 187,
                      "src": "2408:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2408:9:0"
                  }
                ],
                "name": "setRemoteGasDataConfigs",
                "nameLocation": "2320:23:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 65,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 64,
                      "mutability": "mutable",
                      "name": "_configs",
                      "nameLocation": "2384:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 93,
                      "src": "2353:39:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RemoteGasDataConfig_$32_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct StorageGasOracle.RemoteGasDataConfig[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 62,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 61,
                            "name": "RemoteGasDataConfig",
                            "nameLocations": [
                              "2353:19:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32,
                            "src": "2353:19:0"
                          },
                          "referencedDeclaration": 32,
                          "src": "2353:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_storage_ptr",
                            "typeString": "struct StorageGasOracle.RemoteGasDataConfig"
                          }
                        },
                        "id": 63,
                        "nodeType": "ArrayTypeName",
                        "src": "2353:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_RemoteGasDataConfig_$32_storage_$dyn_storage_ptr",
                          "typeString": "struct StorageGasOracle.RemoteGasDataConfig[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2343:55:0"
                },
                "returnParameters": {
                  "id": 68,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2418:0:0"
                },
                "scope": 138,
                "src": "2311:253:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 106,
                  "nodeType": "Block",
                  "src": "2828:43:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 103,
                            "name": "_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2856:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                              "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                              "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                            }
                          ],
                          "id": 102,
                          "name": "_setRemoteGasData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "2838:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_RemoteGasDataConfig_$32_calldata_ptr_$returns$__$",
                            "typeString": "function (struct StorageGasOracle.RemoteGasDataConfig calldata)"
                          }
                        },
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2838:26:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 105,
                      "nodeType": "ExpressionStatement",
                      "src": "2838:26:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 94,
                  "nodeType": "StructuredDocumentation",
                  "src": "2570:156:0",
                  "text": " @notice Sets the remote gas data using the values in `_config`.\n @param _config The config to use when setting the remote gas data."
                },
                "functionSelector": "f3a1495f",
                "id": 107,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 100,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 99,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2818:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 187,
                      "src": "2818:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2818:9:0"
                  }
                ],
                "name": "setRemoteGasData",
                "nameLocation": "2740:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 98,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "_config",
                      "nameLocation": "2795:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 107,
                      "src": "2766:36:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                        "typeString": "struct StorageGasOracle.RemoteGasDataConfig"
                      },
                      "typeName": {
                        "id": 96,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 95,
                          "name": "RemoteGasDataConfig",
                          "nameLocations": [
                            "2766:19:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "2766:19:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "2766:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_storage_ptr",
                          "typeString": "struct StorageGasOracle.RemoteGasDataConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2756:52:0"
                },
                "returnParameters": {
                  "id": 101,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2828:0:0"
                },
                "scope": 138,
                "src": "2731:140:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 136,
                  "nodeType": "Block",
                  "src": "3165:334:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 114,
                            "name": "remoteGasData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "3175:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_RemoteGasData_$145_storage_$",
                              "typeString": "mapping(uint32 => struct IGasOracle.RemoteGasData storage ref)"
                            }
                          },
                          "id": 117,
                          "indexExpression": {
                            "expression": {
                              "id": 115,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "3189:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3197:12:0",
                            "memberName": "remoteDomain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "3189:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3175:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RemoteGasData_$145_storage",
                            "typeString": "struct IGasOracle.RemoteGasData storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 120,
                                "name": "_config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3271:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                  "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                                }
                              },
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3279:17:0",
                              "memberName": "tokenExchangeRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29,
                              "src": "3271:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "expression": {
                                "id": 122,
                                "name": "_config",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 111,
                                "src": "3320:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                  "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                                }
                              },
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3328:8:0",
                              "memberName": "gasPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "3320:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            ],
                            "expression": {
                              "id": 118,
                              "name": "IGasOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155,
                              "src": "3213:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IGasOracle_$155_$",
                                "typeString": "type(contract IGasOracle)"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3224:13:0",
                            "memberName": "RemoteGasData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "3213:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_RemoteGasData_$145_storage_ptr_$",
                              "typeString": "type(struct IGasOracle.RemoteGasData storage pointer)"
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "3252:17:0",
                            "3310:8:0"
                          ],
                          "names": [
                            "tokenExchangeRate",
                            "gasPrice"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3213:134:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RemoteGasData_$145_memory_ptr",
                            "typeString": "struct IGasOracle.RemoteGasData memory"
                          }
                        },
                        "src": "3175:172:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RemoteGasData_$145_storage",
                          "typeString": "struct IGasOracle.RemoteGasData storage ref"
                        }
                      },
                      "id": 126,
                      "nodeType": "ExpressionStatement",
                      "src": "3175:172:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 128,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "3393:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3401:12:0",
                            "memberName": "remoteDomain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27,
                            "src": "3393:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 130,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "3427:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                              }
                            },
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3435:17:0",
                            "memberName": "tokenExchangeRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29,
                            "src": "3427:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "expression": {
                              "id": 132,
                              "name": "_config",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 111,
                              "src": "3466:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                                "typeString": "struct StorageGasOracle.RemoteGasDataConfig calldata"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3474:8:0",
                            "memberName": "gasPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "3466:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 127,
                          "name": "RemoteGasDataSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "3363:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_uint128_$_t_uint128_$returns$__$",
                            "typeString": "function (uint32,uint128,uint128)"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3363:129:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 135,
                      "nodeType": "EmitStatement",
                      "src": "3358:134:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 108,
                  "nodeType": "StructuredDocumentation",
                  "src": "2930:156:0",
                  "text": " @notice Sets the remote gas data using the values in `_config`.\n @param _config The config to use when setting the remote gas data."
                },
                "id": 137,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_setRemoteGasData",
                "nameLocation": "3100:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 112,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "_config",
                      "nameLocation": "3147:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 137,
                      "src": "3118:36:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_calldata_ptr",
                        "typeString": "struct StorageGasOracle.RemoteGasDataConfig"
                      },
                      "typeName": {
                        "id": 110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 109,
                          "name": "RemoteGasDataConfig",
                          "nameLocations": [
                            "3118:19:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32,
                          "src": "3118:19:0"
                        },
                        "referencedDeclaration": 32,
                        "src": "3118:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RemoteGasDataConfig_$32_storage_ptr",
                          "typeString": "struct StorageGasOracle.RemoteGasDataConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3117:38:0"
                },
                "returnParameters": {
                  "id": 113,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3165:0:0"
                },
                "scope": 138,
                "src": "3091:408:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 139,
            "src": "477:3024:0",
            "usedErrors": []
          }
        ],
        "src": "46:3456:0"
      }
    },
    "contracts/interfaces/IGasOracle.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "contracts/interfaces/IGasOracle.sol",
        "exportedSymbols": {
          "IGasOracle": [
            155
          ]
        },
        "id": 156,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 140,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:1"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IGasOracle",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 155,
            "linearizedBaseContracts": [
              155
            ],
            "name": "IGasOracle",
            "nameLocation": "82:10:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "IGasOracle.RemoteGasData",
                "id": 145,
                "members": [
                  {
                    "constant": false,
                    "id": 142,
                    "mutability": "mutable",
                    "name": "tokenExchangeRate",
                    "nameLocation": "284:17:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 145,
                    "src": "276:25:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 141,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "276:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 144,
                    "mutability": "mutable",
                    "name": "gasPrice",
                    "nameLocation": "319:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 145,
                    "src": "311:16:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "typeName": {
                      "id": 143,
                      "name": "uint128",
                      "nodeType": "ElementaryTypeName",
                      "src": "311:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "RemoteGasData",
                "nameLocation": "106:13:1",
                "nodeType": "StructDefinition",
                "scope": 155,
                "src": "99:235:1",
                "visibility": "public"
              },
              {
                "functionSelector": "60fcef7c",
                "id": 154,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "getExchangeRateAndGasPrice",
                "nameLocation": "349:26:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 148,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "_destinationDomain",
                      "nameLocation": "392:18:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "385:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "385:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "375:41:1"
                },
                "returnParameters": {
                  "id": 153,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 150,
                      "mutability": "mutable",
                      "name": "tokenExchangeRate",
                      "nameLocation": "448:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "440:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "440:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "gasPrice",
                      "nameLocation": "475:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "467:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "439:45:1"
                },
                "scope": 155,
                "src": "340:145:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 156,
            "src": "72:415:1",
            "usedErrors": []
          }
        ],
        "src": "46:442:1"
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "exportedSymbols": {
          "Context": [
            298
          ],
          "Ownable": [
            268
          ]
        },
        "id": 269,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 157,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "102:23:2"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 158,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 269,
            "sourceUnit": 299,
            "src": "127:30:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 160,
                  "name": "Context",
                  "nameLocations": [
                    "683:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 298,
                  "src": "683:7:2"
                },
                "id": 161,
                "nodeType": "InheritanceSpecifier",
                "src": "683:7:2"
              }
            ],
            "canonicalName": "Ownable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 159,
              "nodeType": "StructuredDocumentation",
              "src": "159:494:2",
              "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
            },
            "fullyImplemented": true,
            "id": 268,
            "linearizedBaseContracts": [
              268,
              298
            ],
            "name": "Ownable",
            "nameLocation": "672:7:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 163,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "713:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 268,
                "src": "697:22:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 162,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "697:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 169,
                "name": "OwnershipTransferred",
                "nameLocation": "732:20:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 168,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 165,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "769:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "753:29:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 167,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "800:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "784:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "784:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "752:57:2"
                },
                "src": "726:84:2"
              },
              {
                "body": {
                  "id": 178,
                  "nodeType": "Block",
                  "src": "926:49:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 174,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "955:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "955:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 173,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "936:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "936:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 177,
                      "nodeType": "ExpressionStatement",
                      "src": "936:32:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 170,
                  "nodeType": "StructuredDocumentation",
                  "src": "816:91:2",
                  "text": " @dev Initializes the contract setting the deployer as the initial owner."
                },
                "id": 179,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 171,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "923:2:2"
                },
                "returnParameters": {
                  "id": 172,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "926:0:2"
                },
                "scope": 268,
                "src": "912:63:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 186,
                  "nodeType": "Block",
                  "src": "1084:41:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 182,
                          "name": "_checkOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "1094:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1094:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 184,
                      "nodeType": "ExpressionStatement",
                      "src": "1094:13:2"
                    },
                    {
                      "id": 185,
                      "nodeType": "PlaceholderStatement",
                      "src": "1117:1:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 180,
                  "nodeType": "StructuredDocumentation",
                  "src": "981:77:2",
                  "text": " @dev Throws if called by any account other than the owner."
                },
                "id": 187,
                "name": "onlyOwner",
                "nameLocation": "1072:9:2",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 181,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1081:2:2"
                },
                "src": "1063:62:2",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 195,
                  "nodeType": "Block",
                  "src": "1256:30:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 193,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 192,
                      "id": 194,
                      "nodeType": "Return",
                      "src": "1266:13:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 188,
                  "nodeType": "StructuredDocumentation",
                  "src": "1131:65:2",
                  "text": " @dev Returns the address of the current owner."
                },
                "functionSelector": "8da5cb5b",
                "id": 196,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1210:5:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 189,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1215:2:2"
                },
                "returnParameters": {
                  "id": 192,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 196,
                      "src": "1247:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1246:9:2"
                },
                "scope": 268,
                "src": "1201:85:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 209,
                  "nodeType": "Block",
                  "src": "1404:85:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 201,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "1422:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1422:7:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 203,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "1433:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1433:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1422:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1447:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 200,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1414:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1414:68:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 208,
                      "nodeType": "ExpressionStatement",
                      "src": "1414:68:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 197,
                  "nodeType": "StructuredDocumentation",
                  "src": "1292:62:2",
                  "text": " @dev Throws if the sender is not the owner."
                },
                "id": 210,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_checkOwner",
                "nameLocation": "1368:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 198,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1379:2:2"
                },
                "returnParameters": {
                  "id": 199,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1404:0:2"
                },
                "scope": 268,
                "src": "1359:130:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 223,
                  "nodeType": "Block",
                  "src": "1878:47:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1915:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1907:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 217,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1907:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1907:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 216,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "1888:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 222,
                      "nodeType": "ExpressionStatement",
                      "src": "1888:30:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 211,
                  "nodeType": "StructuredDocumentation",
                  "src": "1495:324:2",
                  "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                },
                "functionSelector": "715018a6",
                "id": 224,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 214,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 213,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1868:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 187,
                      "src": "1868:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1868:9:2"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "1833:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 212,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1850:2:2"
                },
                "returnParameters": {
                  "id": 215,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1878:0:2"
                },
                "scope": 268,
                "src": "1824:101:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 246,
                  "nodeType": "Block",
                  "src": "2144:128:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 233,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "2162:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 236,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2182:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2174:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 234,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2174:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2174:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2162:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            },
                            "value": "Ownable: new owner is the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            }
                          ],
                          "id": 232,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2154:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2154:73:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 241,
                      "nodeType": "ExpressionStatement",
                      "src": "2154:73:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 243,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "2256:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 242,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "2237:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2237:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 245,
                      "nodeType": "ExpressionStatement",
                      "src": "2237:28:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 225,
                  "nodeType": "StructuredDocumentation",
                  "src": "1931:138:2",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                },
                "functionSelector": "f2fde38b",
                "id": 247,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 230,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 229,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2134:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 187,
                      "src": "2134:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2134:9:2"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "2083:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 228,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2109:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2101:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2101:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2100:18:2"
                },
                "returnParameters": {
                  "id": 231,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2144:0:2"
                },
                "scope": 268,
                "src": "2074:198:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 266,
                  "nodeType": "Block",
                  "src": "2489:124:2",
                  "statements": [
                    {
                      "assignments": [
                        254
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 254,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "2507:8:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 266,
                          "src": "2499:16:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2499:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 256,
                      "initialValue": {
                        "id": 255,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2518:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2499:25:2"
                    },
                    {
                      "expression": {
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 257,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "2534:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 258,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 250,
                          "src": "2543:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2534:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 260,
                      "nodeType": "ExpressionStatement",
                      "src": "2534:17:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 262,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "2587:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 263,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 250,
                            "src": "2597:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 261,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "2566:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2566:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 265,
                      "nodeType": "EmitStatement",
                      "src": "2561:45:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 248,
                  "nodeType": "StructuredDocumentation",
                  "src": "2278:143:2",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                },
                "id": 267,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "2435:18:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 251,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 250,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2462:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 267,
                      "src": "2454:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 249,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2454:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2453:18:2"
                },
                "returnParameters": {
                  "id": 252,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2489:0:2"
                },
                "scope": 268,
                "src": "2426:187:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 269,
            "src": "654:1961:2",
            "usedErrors": []
          }
        ],
        "src": "102:2514:2"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "exportedSymbols": {
          "Context": [
            298
          ]
        },
        "id": 299,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 270,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:3"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Context",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 271,
              "nodeType": "StructuredDocumentation",
              "src": "126:496:3",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 298,
            "linearizedBaseContracts": [
              298
            ],
            "name": "Context",
            "nameLocation": "641:7:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 279,
                  "nodeType": "Block",
                  "src": "717:34:3",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "734:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "738:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "734:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 275,
                      "id": 278,
                      "nodeType": "Return",
                      "src": "727:17:3"
                    }
                  ]
                },
                "id": 280,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "664:10:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 272,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "674:2:3"
                },
                "returnParameters": {
                  "id": 275,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 280,
                      "src": "708:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "707:9:3"
                },
                "scope": 298,
                "src": "655:96:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 288,
                  "nodeType": "Block",
                  "src": "824:32:3",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 285,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "841:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "845:4:3",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "841:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 284,
                      "id": 287,
                      "nodeType": "Return",
                      "src": "834:15:3"
                    }
                  ]
                },
                "id": 289,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "766:8:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 281,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "774:2:3"
                },
                "returnParameters": {
                  "id": 284,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 283,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 289,
                      "src": "808:14:3",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 282,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "807:16:3"
                },
                "scope": 298,
                "src": "757:99:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 296,
                  "nodeType": "Block",
                  "src": "934:25:3",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 293,
                      "id": 295,
                      "nodeType": "Return",
                      "src": "944:8:3"
                    }
                  ]
                },
                "id": 297,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "871:20:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 290,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "891:2:3"
                },
                "returnParameters": {
                  "id": 293,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 292,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 297,
                      "src": "925:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "925:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "924:9:3"
                },
                "scope": 298,
                "src": "862:97:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 299,
            "src": "623:338:3",
            "usedErrors": []
          }
        ],
        "src": "101:861:3"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
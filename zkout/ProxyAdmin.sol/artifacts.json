{
  "contracts": {
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "Ownable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
      "IERC1967": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "previousAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "AdminChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "beacon",
                "type": "address"
              }
            ],
            "name": "BeaconUpgraded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
      "IERC1822Proxiable": {
        "abi": [
          {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "proxiableUUID()": "52d1902d"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "ERC1967Proxy": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_logic",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "stateMutability": "payable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "previousAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "AdminChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "beacon",
                "type": "address"
              }
            ],
            "name": "BeaconUpgraded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          },
          {
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ERC1967Proxy.sol:ERC1967Proxy\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[5]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_7\n\tptr.add\tr1, r3, r4\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_7[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_2[0], r2, r2\n\tsub!\tr3, r0, r5\n\tjump.ne\t@.BB0_21\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_33\n\tadd\tstack[@returndatasize], r0, r3\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r1\n\tjump.eq\t@.BB0_6\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr4, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_5\n.BB0_6:\n\tsub!\tr2, r0, r5\n\tjump.ne\t@.BB0_32\n\tjump\t@.BB0_46\n.BB0_7:\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_10\n\tadd\tr0, r0, r5\n.BB0_9:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_9\n.BB0_10:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_12\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_12:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_20\n\tld.1\t128, r7\n\tand\t@CPI0_2[0], r7, r9\n\tsub.s!\t@CPI0_2[0], r7, r1\n\tjump.gt\t@.BB0_20\n\tld.1\t160, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_20\n\tadd\t31, r2, r1\n\tadd\t@CPI0_4[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_4[0], r1, r1\n\tsub!\tr1, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_20\n\tadd\t128, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_66\n\tadd\t31, r1, r4\n\tsub.s\t32, r0, r8\n\tand\tr4, r8, r4\n\tadd\t63, r4, r4\n\tand\tr4, r8, r4\n\tld.1\t64, r10\n\tadd\tr10, r4, r4\n\tsub!\tr4, r10, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r4, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tadd\t128, r3, r3\n\tst.1\t64, r4\n\tst.1.inc\tr10, r1, r6\n\tadd\t160, r2, r2\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.le\t@.BB0_48\n.BB0_20:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_21:\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_24\n\tadd\tr0, r0, r7\n.BB0_23:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_23\n.BB0_24:\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_26\n\tshl.s\t3, r6, r6\n\tshl.s\t5, r5, r5\n\tld.1\tr5, r7\n\tshl\tr7, r6, r7\n\tshr\tr7, r6, r7\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub\t256, r6, r6\n\tshr\tr1, r6, r1\n\tshl\tr1, r6, r1\n\tor\tr1, r7, r1\n\tst.1\tr5, r1\n.BB0_26:\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_40\n\tadd\tstack[@returndatasize], r0, r3\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r1\n\tjump.eq\t@.BB0_30\n\tadd\tr0, r0, r5\n.BB0_29:\n\tshl.s\t5, r5, r6\n\tptr.add\tr4, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_29\n.BB0_30:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_46\n.BB0_32:\n\tshl.s\t3, r2, r2\n\tshl.s\t5, r1, r1\n\tld.1\tr1, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tptr.add\tr4, r1, r4\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_46\n.BB0_33:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_36\n\tadd\tr0, r0, r6\n.BB0_35:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_35\n.BB0_36:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_38\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_38:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_46\n\tshl.s\t96, r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_40:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_43\n\tadd\tr0, r0, r6\n.BB0_42:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_45\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_45:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_47\n.BB0_46:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_47:\n\tshl.s\t96, r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tadd\tr10, r0, stack-[2]\n\tadd\tr9, r0, stack-[3]\n\tadd\tr8, r0, stack-[5]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_51\n\tadd\tr0, r0, r3\n.BB0_50:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_50\n.BB0_51:\n\tadd\tr6, r0, stack-[1]\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr7, r0, stack-[4]\n\tst.2\t4, r7\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_79\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_54\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_18[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_54:\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r2\n\tadd\tstack-[3], r0, r5\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[1], r0, r8\n\tjump.eq\t@.BB0_20\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_57\n.BB0_56:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_17[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_57:\n\tld.1\t64, r7\n\tsub.s!\t@CPI0_11[0], r7, r1\n\tjump.gt\t@.BB0_66\n\tadd\t96, r7, r1\n\tst.1\t64, r1\n\tadd\t64, r7, r1\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1.inc\tr7, r1, r2\n\tadd\t@CPI0_13[0], r0, r1\n\tadd\tr2, r0, stack-[3]\n\tst.1\tr2, r1\n\tld.1\tr3, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB0_60\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_61\n.BB0_60:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r8, r4\n\tadd.ge\tr3, r0, r8\n\tshl.s\t64, r8, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, r2\n\tadd\tr7, r0, stack-[2]\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r7\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_61:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_65\n\tadd\t96, r0, r3\n\tadd\t128, r0, r1\n\tld.1\tr3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_75\n.BB0_63:\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_80\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[4]\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tld.1\tr7, r3\n\tadd\tr3, r0, stack-[2]\n\tadd\t36, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[3], r0, r1\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r1\n\tadd\t31, r1, r1\n\tand\tstack-[5], r1, r1\n\tadd\t68, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[4], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_65:\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.le\t@.BB0_67\n.BB0_66:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_67:\n\tadd\t31, r4, r1\n\tand\tr1, r5, r1\n\tadd\t63, r1, r1\n\tand\tr1, r5, r1\n\tld.1\t64, r3\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r6\n\tjump.gt\t@.BB0_66\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_66\n\tadd\tr7, r0, r10\n\tst.1\t64, r1\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_72\n\tadd\tr0, r0, r7\n.BB0_71:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_71\n.BB0_72:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_74\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr1, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n.BB0_74:\n\tadd\tstack-[4], r0, r6\n\tadd\tr10, r0, r7\n\tld.1\tr3, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_63\n.BB0_75:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_56\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r6\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_79\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_56\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_14[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_15[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_79:\n\trevert\n.BB0_80:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin1:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__delegatecall:\n.func_begin5:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB5_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 18446744073709551615\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_6:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_7:\n\t.cell 24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_8:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_9:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_10:\n\t.cell -30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_11:\n\t.cell 18446744073709551519\nCPI0_12:\n\t.cell 14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_13:\n\t.cell 29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_14:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_15:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_16:\n\t.cell 7922816251426433759354395033600\nCPI0_17:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_18:\n\t.cell 50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_19:\n\t.cell 31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_20:\n\t.cell 10458117451882892562347801444352\nCPI0_21:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_22:\n\t.cell 2852213850513516153367582212096\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 1:\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\", 3:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\", 9:\"node_modules/@openzeppelin/contracts/utils/Address.sol\", 11:\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"ERC1967Proxy_180\" {\n    code {\n        {\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            let programSize := datasize(\"ERC1967Proxy_180\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _2 := add(memoryDataOffset, argSize)\n            if slt(sub(_2, memoryDataOffset), _1)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let value := mload(memoryDataOffset)\n            let _3 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _3))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _4 := 32\n            let offset := mload(add(memoryDataOffset, _4))\n            let _5 := sub(shl(64, 1), 1)\n            if gt(offset, _5)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _6 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_6, 0x1f), _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _7 := mload(_6)\n            let array := allocate_memory(array_allocation_size_bytes(_7))\n            mstore(array, _7)\n            let dst := add(array, _4)\n            if gt(add(add(_6, _7), _4), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            copy_memory_to_memory_with_cleanup(add(_6, _4), dst, _7)\n            if /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(value))\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            {\n                let memPtr := mload(_1)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), _4)\n                mstore(add(memPtr, 36), 45)\n                mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                mstore(add(memPtr, 100), \"ot a contract\")\n                revert(memPtr, 132)\n            }\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            let _8 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n            sstore(_8, or(and(sload(_8), not(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ sub(shl(160, 1), 1))), /** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _3))\n            /// @src -1:-1:-1\n            let _9 := 0\n            /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ _9, _9, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _3)\n            /// @src 4:2208:2223  \"data.length > 0\"\n            let _10 := iszero(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ array))\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_10)\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            if _10\n            {\n                expr := /** @src -1:-1:-1 */ _9\n            }\n            /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n            if expr\n            {\n                /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                let memPtr_1 := mload(_1)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, _5), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ _9, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ _9, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 0x24)\n                }\n                mstore(_1, newFreePtr)\n                mstore(memPtr_1, 39)\n                mstore(add(memPtr_1, _4), \"Address: low-level delegate call\")\n                mstore(add(memPtr_1, _1), \" failed\")\n                /// @src 9:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value, dst, mload(array), /** @src -1:-1:-1 */ _9, _9)\n                /// @src 9:7265:7290  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ _9\n                /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _11 := returndatasize()\n                    let memPtr_2 := allocate_memory(array_allocation_size_bytes(_11))\n                    mstore(memPtr_2, _11)\n                    data := memPtr_2\n                    returndatacopy(add(memPtr_2, _4), /** @src -1:-1:-1 */ _9, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ returndatasize())\n                }\n                /// @src 9:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                pop(fun_verifyCallResultFromTarget(value, expr_component, /** @src 9:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 9:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_1))\n            }\n            /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n            let _12 := mload(_1)\n            let _13 := datasize(\"ERC1967Proxy_180_deployed\")\n            codecopy(_12, dataoffset(\"ERC1967Proxy_180_deployed\"), _13)\n            return(_12, _13)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n        /// @ast-id 1290 @src 9:7671:8299  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n        {\n            /// @src 9:7851:7863  \"bytes memory\"\n            var_mpos := /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 96\n            /// @src 9:7875:8293  \"if (success) {...\"\n            switch var_success\n            case 0 {\n                /// @src 9:8976:9355  \"if (returndata.length > 0) {...\"\n                switch /** @src 9:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 9:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 9:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 9:9324:9344  \"revert(errorMessage)\"\n                    let _1 := /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(64)\n                    /// @src 9:9324:9344  \"revert(errorMessage)\"\n                    mstore(_1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ shl(229, 4594637))\n                    mstore(/** @src 9:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 32)\n                    let length := mload(var_errorMessage_mpos)\n                    mstore(add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 36), length)\n                    copy_memory_to_memory_with_cleanup(add(var_errorMessage_mpos, 32), add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 68), length)\n                    /// @src 9:9324:9344  \"revert(errorMessage)\"\n                    revert(_1, add(sub(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ and(add(length, 31), not(31))), /** @src 9:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ 68))\n                }\n                default /// @src 9:8976:9355  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 9:9152:9294  \"assembly {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n            default /// @src 9:7875:8293  \"if (success) {...\"\n            {\n                /// @src 9:7902:8188  \"if (returndata.length == 0) {...\"\n                if /** @src 9:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ mload(/** @src 9:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 9:7902:8188  \"if (returndata.length == 0) {...\"\n                {\n                    /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                    if /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                    /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                        revert(memPtr, 100)\n                    }\n                }\n                /// @src 9:8201:8218  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n        }\n    }\n    /// @use-src 3:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\", 11:\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"ERC1967Proxy_180_deployed\" {\n        code {\n            {\n                /// @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\"\n                mstore(64, 128)\n                if iszero(calldatasize())\n                {\n                    /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                    let value := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 5:1018:1837  \"assembly {...\"\n                    calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize())\n                    /// @src 5:1018:1837  \"assembly {...\"\n                    let usr$result := delegatecall(gas(), value, /** @src -1:-1:-1 */ _1, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                    /// @src 5:1018:1837  \"assembly {...\"\n                    returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                    switch usr$result\n                    case 0 {\n                        revert(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                    }\n                    default {\n                        return(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                    }\n                }\n                /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let value_1 := and(sload(0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 5:1018:1837  \"assembly {...\"\n                calldatacopy(/** @src -1:-1:-1 */ _2, _2, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize())\n                /// @src 5:1018:1837  \"assembly {...\"\n                let usr$result_1 := delegatecall(gas(), value_1, /** @src -1:-1:-1 */ _2, /** @src 3:567:1290  \"contract ERC1967Proxy is Proxy, ERC1967Upgrade {...\" */ calldatasize(), /** @src -1:-1:-1 */ _2, _2)\n                /// @src 5:1018:1837  \"assembly {...\"\n                returndatacopy(/** @src -1:-1:-1 */ _2, _2, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                switch usr$result_1\n                case 0 {\n                    revert(/** @src -1:-1:-1 */ _2, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n                default {\n                    return(/** @src -1:-1:-1 */ _2, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212203bdecb458063296d17d1487765910469a5af1b6a8bb6860af1b7c713366e9f8a64736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000a38406de23c4531cabe807c309383ce205c1732bb54f9d3b7e05aa718d",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "ERC1967Upgrade": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "previousAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "AdminChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "beacon",
                "type": "address"
              }
            ],
            "name": "BeaconUpgraded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
      "Proxy": {
        "abi": [
          {
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "IBeacon": {
        "abi": [
          {
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "implementation()": "5c60da1b"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
      "ProxyAdmin": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "contract ITransparentUpgradeableProxy",
                "name": "proxy",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "changeProxyAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ITransparentUpgradeableProxy",
                "name": "proxy",
                "type": "address"
              }
            ],
            "name": "getProxyAdmin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ITransparentUpgradeableProxy",
                "name": "proxy",
                "type": "address"
              }
            ],
            "name": "getProxyImplementation",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ITransparentUpgradeableProxy",
                "name": "proxy",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "upgrade",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "contract ITransparentUpgradeableProxy",
                "name": "proxy",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "upgradeAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeProxyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"}],\"name\":\"getProxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"kind\":\"dev\",\"methods\":{\"changeProxyAdmin(address,address)\":{\"details\":\"Changes the admin of `proxy` to `newAdmin`. Requirements: - This contract must be the current admin of `proxy`.\"},\"getProxyAdmin(address)\":{\"details\":\"Returns the current admin of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"getProxyImplementation(address)\":{\"details\":\"Returns the current implementation of `proxy`. Requirements: - This contract must be the admin of `proxy`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgrade(address,address)\":{\"details\":\"Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}. Requirements: - This contract must be the admin of `proxy`.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-upgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x8e99882a991853dc446278576c8cb9b3a5ded84642e9bcc917b1677807c2f18c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310153c1a4c739002ffbc1351ed1dd7488a0d20f5dd816353332fc2c1d81e0a3\",\"dweb:/ipfs/QmcvwXQVUBRTEAoNcvwSVFmhpHUXQ21s2Hfj79hq2uQNVM\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ProxyAdmin.sol:ProxyAdmin\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tptr.add\tr1, r0, r3\n\tadd\t128, r0, r9\n\tst.1\t64, r9\n\tadd\tr3, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r4\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_10\n\tsub.s!\t4, r4, r1\n\tjump.lt\t@.BB0_105\n\tptr.add\tr3, r4, r1\n\tld\tr3, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_6[0], r2, r5\n\tjump.gt\t@.BB0_13\n\tsub.s!\t@CPI0_12[0], r2, r5\n\tjump.gt\t@.BB0_26\n\tsub.s!\t@CPI0_15[0], r2, r5\n\tjump.eq\t@.BB0_37\n\tsub.s!\t@CPI0_16[0], r2, r1\n\tjump.ne\t@.BB0_105\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_105\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_81\n\tand\t@CPI0_1[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_105\n.BB0_9:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_105\n\tsload\tr0, r2\n\tand\t@CPI0_1[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_105\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsub.s!\t@CPI0_7[0], r2, r5\n\tjump.gt\t@.BB0_30\n\tsub.s!\t@CPI0_10[0], r2, r1\n\tjump.eq\t@.BB0_42\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.ne\t@.BB0_105\n\tcontext.get_context_u128\tr1\n\tsub.s!\t68, r4, r2\n\tjump.lt\t@.BB0_105\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_105\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.gt\t@.BB0_105\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_3[0], r3, r1\n\tjump.gt\t@.BB0_105\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_81\n\tadd\tr3, r0, stack-[2]\n\tadd\t@CPI0_25[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr4, r0, stack-[3]\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_103\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[3], r0, r2\n\tadd\tstack-[2], r0, r3\n\tjump.eq\t@.BB0_105\n\tld.1\t64, r5\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_25\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_113\n.BB0_25:\n\tjump\t@.BB0_73\n.BB0_26:\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.eq\t@.BB0_64\n\tsub.s!\t@CPI0_14[0], r2, r1\n\tjump.ne\t@.BB0_105\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_105\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_30:\n\tsub.s!\t@CPI0_8[0], r2, r5\n\tjump.eq\t@.BB0_75\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ne\t@.BB0_105\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r4, r4\n\tjump.lt\t@.BB0_105\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_105\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_105\n\tadd\t@CPI0_17[0], r0, r3\n\tst.1\t128, r3\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_82\n\tadd\tstack[@returndatasize], r0, r4\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_83\n.BB0_37:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r4, r4\n\tjump.lt\t@.BB0_105\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_105\n\tptr.add.s\t4, r3, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.gt\t@.BB0_105\n\tadd\t@CPI0_38[0], r0, r3\n\tst.1\t128, r3\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_87\n\tadd\tstack[@returndatasize], r0, r5\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_88\n.BB0_42:\n\tsub.s!\t100, r4, r1\n\tjump.lt\t@.BB0_105\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r8\n\tsub.s!\t@CPI0_3[0], r8, r1\n\tjump.gt\t@.BB0_105\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r10\n\tsub.s!\t@CPI0_3[0], r10, r1\n\tjump.gt\t@.BB0_105\n\tptr.add.s\t68, r3, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_105\n\tadd\t35, r2, r1\n\tsub!\tr1, r4, r1\n\tjump.ge\t@.BB0_105\n\tadd\t4, r2, r5\n\tptr.add\tr3, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r6\n\tjump.gt\t@.BB0_102\n\tadd\t31, r1, r6\n\tsub.s\t32, r0, r9\n\tand\tr6, r9, r6\n\tadd\t63, r6, r6\n\tand\tr6, r9, r6\n\tsub.s!\t@CPI0_29[0], r6, r7\n\tjump.gt\t@.BB0_102\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r1\n\tadd\tr2, r1, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r4, r2\n\tjump.gt\t@.BB0_105\n\tadd\t32, r5, r2\n\tptr.add\tr3, r2, r2\n\tand\t31, r1, r3\n\tshr.s!\t5, r1, r4\n\tjump.eq\t@.BB0_53\n\tadd\tr0, r0, r5\n.BB0_52:\n\tshl.s\t5, r5, r6\n\tptr.add\tr2, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_52\n.BB0_53:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_55\n\tshl.s\t5, r4, r4\n\tptr.add\tr2, r4, r2\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr2, r2\n\tsub\t256, r3, r3\n\tshr\tr2, r3, r2\n\tshl\tr2, r3, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_55:\n\tadd\tr10, r0, stack-[3]\n\tadd\tr9, r0, stack-[2]\n\tadd\t160, r1, r1\n\tst.1\tr1, r0\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_118\n\tadd\t@CPI0_25[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr8, r0, stack-[1]\n\tst.2\t4, r8\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_103\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB0_105\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[3]\n\tadd\t100, r4, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_61\n\tadd\tr0, r0, r3\n.BB0_60:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_60\n.BB0_61:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.get_context_u128\tr3\n\tcontext.gas_left\tr2\n\tadd\tstack-[1], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_128\n\tadd\t31, r1, r1\n\tand\tstack-[2], r1, r1\n\tadd\t100, r1, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tadd\tstack-[3], r0, r6\n\tsub.s!\t@CPI0_0[0], r6, r4\n\tadd\tr5, r0, r4\n\tadd.lt\tr6, r0, r4\n\tsub.s!\t@CPI0_0[0], r2, r6\n\tadd.ge\tr5, r0, r2\n\tshl.s\t192, r2, r2\n\tshl.s\t64, r4, r4\n\tsub!\tr3, r0, r6\n\tjump.ne\t@.BB0_125\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr5, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[1], r0, r2\n\tjump\t@.BB0_126\n.BB0_64:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t68, r4, r2\n\tjump.lt\t@.BB0_105\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_105\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.gt\t@.BB0_105\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_3[0], r3, r1\n\tjump.gt\t@.BB0_105\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_81\n\tadd\tr3, r0, stack-[2]\n\tadd\t@CPI0_25[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr4, r0, stack-[3]\n\tst.2\t4, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_103\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[3], r0, r2\n\tadd\tstack-[2], r0, r3\n\tjump.eq\t@.BB0_105\n\tld.1\t64, r5\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t4, r5, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r3\n\tjump.eq\t@.BB0_73\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\tr5, r0, stack-[3]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_119\n.BB0_73:\n\tsub.s!\t@CPI0_19[0], r5, r1\n\tjump.gt\t@.BB0_102\n\tst.1\t64, r5\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_75:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t36, r4, r2\n\tjump.lt\t@.BB0_105\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_105\n\tptr.add.s\t4, r3, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI0_3[0], r6, r1\n\tjump.gt\t@.BB0_105\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_81\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_104\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_81:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_82:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_18[0], r1, r1\n\tadd\tr9, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r9\n\txor\t1, r2, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r4\n.BB0_83:\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_93\n\tadd\t96, r0, r3\n.BB0_85:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_105\n\tld.1\tr3, r1\n\tadd\tr1, r9, r2\n\tadd\tr9, r0, r1\n\tjump\t@.BB0_92\n.BB0_87:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_18[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\txor\t1, r2, r2\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r5\n.BB0_88:\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_101\n\tadd\t96, r0, r4\n\tadd\t128, r0, r3\n.BB0_90:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_105\n\tld.1\tr4, r1\n\tadd\tr1, r3, r2\n\tadd\tr3, r0, r1\n.BB0_92:\n\tnear_call\tr0, @abi_decode_address_payable_fromMemory, @DEFAULT_UNWIND\n\tand\t@CPI0_3[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_20[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tsub.s!\t@CPI0_19[0], r4, r3\n\tjump.gt\t@.BB0_102\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r5\n\tand\tr3, r5, r3\n\tadd\t63, r3, r3\n\tand\tr3, r5, r5\n\tld.1\t64, r3\n\tadd\tr3, r5, r5\n\tsub!\tr5, r3, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_19[0], r5, r7\n\tjump.gt\t@.BB0_102\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_102\n\tst.1\t64, r5\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r9\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_99\n\tadd\tr0, r0, r6\n.BB0_98:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_98\n.BB0_99:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_85\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tr9, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r6, r1\n\tst.1\tr4, r1\n\tjump\t@.BB0_85\n.BB0_101:\n\tsub.s!\t@CPI0_39[0], r5, r3\n\tjump.lt\t@.BB0_106\n.BB0_102:\n\tadd\t@CPI0_40[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_103:\n\trevert\n.BB0_104:\n\tand\t@CPI0_1[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_9\n.BB0_105:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_106:\n\tadd\t31, r5, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t63, r3, r3\n\tand\tr3, r4, r3\n\tld.1\t64, r4\n\tadd\tr4, r3, r3\n\tsub!\tr3, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_19[0], r3, r7\n\tjump.gt\t@.BB0_102\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_102\n\tst.1\t64, r3\n\tand\t31, r5, r6\n\tst.1.inc\tr4, r5, r3\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_111\n\tadd\tr0, r0, r7\n.BB0_110:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_110\n.BB0_111:\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_90\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r7\n\tshl\tr7, r6, r7\n\tshr\tr7, r6, r7\n\tld\tr1, r1\n\tsub\t256, r6, r6\n\tshr\tr1, r6, r1\n\tshl\tr1, r6, r1\n\tor\tr1, r7, r1\n\tst.1\tr5, r1\n\tjump\t@.BB0_90\n.BB0_113:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_116\n\tadd\tr0, r0, r6\n.BB0_115:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_115\n.BB0_116:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_124\n\tjump\t@.BB0_123\n.BB0_118:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_119:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_122\n\tadd\tr0, r0, r6\n.BB0_121:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_121\n.BB0_122:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_124\n.BB0_123:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_124:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_125:\n\tshl.s\t96, r1, r5\n\tadd\t@CPI0_33[0], r0, r6\n\tsub.s!\t@CPI0_34[0], r1, r1\n\tadd.ge\tr6, r0, r5\n\tor\t@CPI0_2[0], r4, r1\n\tadd\tr1, r5, r1\n\tadd\tr1, r2, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[1], r0, r4\n\tadd\tr0, r0, r5\n.BB0_126:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_130\n.BB0_128:\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_102\n\tadd\tstack-[3], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_130:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_133\n\tadd\tr0, r0, r6\n.BB0_132:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_132\n.BB0_133:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_124\n\tjump\t@.BB0_123\n.func_end0:\n\nabi_decode_address_payable_fromMemory:\n.func_begin1:\n\tsub\tr2, r1, r2\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t31, r2, r4\n\tadd\tr0, r0, r4\n\tadd.gt\tr3, r0, r4\n\tand\t@CPI1_0[0], r2, r2\n\tsub!\tr2, r0, r5\n\tadd.ge\tr0, r0, r3\n\tsub.s!\t@CPI1_0[0], r2, r2\n\tadd.ne\tr4, r0, r3\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB1_1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_1[0], r1, r2\n\tjump.gt\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_2:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_3:\nCPI1_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 2518900892\nCPI0_7:\n\t.cell 4076725130\nCPI0_8:\n\t.cell 4076725131\nCPI0_9:\n\t.cell 4088913581\nCPI0_10:\n\t.cell 2518900893\nCPI0_11:\n\t.cell 2577960644\nCPI0_12:\n\t.cell 2130650973\nCPI0_13:\n\t.cell 2130650974\nCPI0_14:\n\t.cell 2376452955\nCPI0_15:\n\t.cell 541990010\nCPI0_16:\n\t.cell 1901074598\nCPI0_17:\n\t.cell -3474254564581621626188260025310941719202095730505663504633513953338824065024\nCPI0_18:\n\t.cell 316912652418240591808998408192\nCPI0_19:\n\t.cell 18446744073709551615\nCPI0_20:\n\t.cell 2535301200456458802993406410752\nCPI0_21:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_22:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_23:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_24:\n\t.cell 10458117454244075803782624051200\nCPI0_25:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_26:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_27:\n\t.cell 24583578074543180268843569895713186669491495773330943018694496374928902717440\nCPI0_28:\n\t.cell 2852213850513516153367582212096\nCPI0_29:\n\t.cell 18446744073709551487\nCPI0_30:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_31:\n\t.cell 7922816251426433759354395033600\nCPI0_32:\n\t.cell 35787394285270172926002399276345764320359862283067404231778073799726653767680\nCPI0_33:\n\t.cell 340282366841710300949110269838224261120\nCPI0_34:\n\t.cell 4294967296\nCPI0_35:\n\t.cell 2535301202817642044428229017600\nCPI0_36:\n\t.cell -51040281588262172729994757417671590548574929652371291425639197795456095617024\nCPI0_37:\n\t.cell 7922816253787617000789217640448\nCPI0_38:\n\t.cell 41783904696501392981958754530355920803367001723273469674524225868246137438208\nCPI0_39:\n\t.cell 18446744073709551616\nCPI0_40:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "changeProxyAdmin(address,address)": "7eff275e",
            "getProxyAdmin(address)": "f3b7dead",
            "getProxyImplementation(address)": "204e1c7a",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b",
            "upgrade(address,address)": "99a88ec4",
            "upgradeAndCall(address,address,bytes)": "9623609d"
          }
        },
        "irOptimized": "/// @use-src 0:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 7:\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 10:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\nobject \"ProxyAdmin_682\" {\n    code {\n        {\n            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := sload(/** @src 0:2518:2524  \"_owner\" */ 0x00)\n            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ 0x00, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 10:734:744  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 0:2518:2524  \"_owner\" */ 0x00, 0x00, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 10:734:744  \"msg.sender\" */ caller())\n            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n            let _3 := datasize(\"ProxyAdmin_682_deployed\")\n            codecopy(_1, dataoffset(\"ProxyAdmin_682_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 0:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 7:\"node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\", 10:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\n    object \"ProxyAdmin_682_deployed\" {\n        code {\n            {\n                /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x204e1c7a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _5 := sub(shl(160, 1), 1)\n                        let _6 := and(abi_decode_contract_ITransparentUpgradeableProxy(), _5)\n                        mstore(_1, shl(224, 0x5c60da1b))\n                        /// @src 7:965:1005  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                        let expr_component := staticcall(gas(), _6, _1, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3, _4, _4)\n                        /// @src 7:965:1005  \"address(proxy).staticcall(hex\\\"5c60da1b\\\")\"\n                        let expr_component_mpos := extract_returndata()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        if iszero(expr_component) { revert(_4, _4) }\n                        let _7 := and(/** @src 7:1048:1081  \"abi.decode(returndata, (address))\" */ abi_decode_address_payable_fromMemory(add(expr_component_mpos, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32), /** @src 7:1048:1081  \"abi.decode(returndata, (address))\" */ add(add(expr_component_mpos, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(/** @src 7:1048:1081  \"abi.decode(returndata, (address))\" */ expr_component_mpos)), /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32)), _5)\n                        let memPos := mload(_2)\n                        mstore(memPos, _7)\n                        return(memPos, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _8 := sload(_4)\n                        sstore(_4, and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4, _4, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(_8, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x7eff275e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        let value1 := abi_decode_address()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _9 := sub(shl(160, 1), 1)\n                        let _10 := and(/** @src 7:1957:1974  \"proxy.changeAdmin\" */ value0, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _9)\n                        /// @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        if iszero(extcodesize(_10))\n                        {\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        let _11 := /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        /// @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        mstore(_11, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ shl(228, 0x08f28397))\n                        mstore(/** @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\" */ add(_11, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3), and(value1, _9))\n                        /// @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        let _12 := call(gas(), _10, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4, /** @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\" */ _11, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 36, /** @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\" */ _11, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4)\n                        /// @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        if iszero(_12)\n                        {\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 7:1957:1984  \"proxy.changeAdmin(newAdmin)\"\n                        if _12\n                        {\n                            finalize_allocation_3427(_11)\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            _4 := _4\n                        }\n                        return(_4, _4)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0x9623609d {\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        let value1_1 := abi_decode_address()\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _13 := calldataload(add(_3, offset))\n                        let _14 := array_allocation_size_bytes(_13)\n                        let memPtr := mload(_2)\n                        finalize_allocation(memPtr, _14)\n                        mstore(memPtr, _13)\n                        let _15 := 32\n                        if gt(add(add(offset, _13), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr, _15), add(offset, 36), _13)\n                        mstore(add(add(memPtr, _13), _15), _4)\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _16 := sub(shl(160, 1), 1)\n                        let _17 := and(/** @src 7:2788:2810  \"proxy.upgradeToAndCall\" */ value0_1, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _16)\n                        /// @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(extcodesize(_17))\n                        {\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _18 := /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        /// @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        mstore(_18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ shl(225, 0x278f7943))\n                        mstore(/** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ add(_18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3), and(value1_1, _16))\n                        mstore(add(/** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 36), _2)\n                        let length := mload(memPtr)\n                        mstore(add(/** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 68), length)\n                        let i := _4\n                        for { } lt(i, length) { i := add(i, _15) }\n                        {\n                            mstore(add(add(/** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ i), 100), mload(add(add(memPtr, i), _15)))\n                        }\n                        mstore(add(add(/** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ length), 100), _4)\n                        /// @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        let _19 := call(gas(), _17, /** @src 7:2818:2827  \"msg.value\" */ callvalue(), /** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, add(sub(/** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ add(/** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(add(length, 0x1f), not(31))), /** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18), /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 100), /** @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\" */ _18, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4)\n                        /// @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if iszero(_19)\n                        {\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 7:2788:2850  \"proxy.upgradeToAndCall{value: msg.value}(implementation, data)\"\n                        if _19\n                        {\n                            finalize_allocation_3427(_18)\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0x99a88ec4 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        let value1_2 := abi_decode_address()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _20 := sub(shl(160, 1), 1)\n                        let _21 := and(/** @src 7:2308:2323  \"proxy.upgradeTo\" */ value0_2, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _20)\n                        /// @src 7:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        if iszero(extcodesize(_21))\n                        {\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 7:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        let _22 := /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        /// @src 7:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        mstore(_22, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ shl(225, 0x1b2ce7f3))\n                        mstore(/** @src 7:2308:2339  \"proxy.upgradeTo(implementation)\" */ add(_22, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3), and(value1_2, _20))\n                        /// @src 7:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        let _23 := call(gas(), _21, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4, /** @src 7:2308:2339  \"proxy.upgradeTo(implementation)\" */ _22, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 36, /** @src 7:2308:2339  \"proxy.upgradeTo(implementation)\" */ _22, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _4)\n                        /// @src 7:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        if iszero(_23)\n                        {\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            let pos_2 := mload(_2)\n                            returndatacopy(pos_2, _4, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 7:2308:2339  \"proxy.upgradeTo(implementation)\"\n                        if _23\n                        {\n                            finalize_allocation_3427(_22)\n                            /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value0_3 := abi_decode_contract_ITransparentUpgradeableProxy()\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        let _24 := sub(shl(160, 1), 1)\n                        let _25 := and(/** @src 0:2162:2184  \"newOwner != address(0)\" */ value0_3, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _24)\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _25)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 38)\n                            mstore(add(memPtr_1, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_1, 100), \"ddress\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _26 := sload(0)\n                        sstore(0, or(and(_26, shl(160, 0xffffffffffffffffffffffff)), _25))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 0, 0, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ and(_26, _24), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _25)\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        return(_4, _4)\n                    }\n                    case 0xf3b7dead {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let _27 := sub(shl(160, 1), 1)\n                        let _28 := and(abi_decode_contract_ITransparentUpgradeableProxy(), _27)\n                        /// @src 7:1545:1585  \"address(proxy).staticcall(hex\\\"f851a440\\\")\"\n                        let _29 := /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(_2)\n                        mstore(_29, shl(230, 0x03e14691))\n                        /// @src 7:1545:1585  \"address(proxy).staticcall(hex\\\"f851a440\\\")\"\n                        let expr_component_1 := staticcall(gas(), _28, _29, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ _3, _4, _4)\n                        /// @src 7:1545:1585  \"address(proxy).staticcall(hex\\\"f851a440\\\")\"\n                        let expr_component_mpos_1 := extract_returndata()\n                        /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                        if iszero(expr_component_1) { revert(_4, _4) }\n                        let _30 := and(/** @src 7:1628:1661  \"abi.decode(returndata, (address))\" */ abi_decode_address_payable_fromMemory(add(expr_component_mpos_1, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32), /** @src 7:1628:1661  \"abi.decode(returndata, (address))\" */ add(add(expr_component_mpos_1, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ mload(/** @src 7:1628:1661  \"abi.decode(returndata, (address))\" */ expr_component_mpos_1)), /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ 32)), _27)\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _30)\n                        return(memPos_2, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_contract_ITransparentUpgradeableProxy() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_3427(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ value, /** @src 10:734:744  \"msg.sender\" */ caller()))\n                /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_bytes(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\" */ returndatasize())\n                }\n            }\n            function abi_decode_address_payable_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 7:450:2859  \"contract ProxyAdmin is Ownable {...\"\n                value0 := value\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122050b90df7d8cd93ca61724b993961deb84d24005cd0426bff0e1e397b6e6a4a7864736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000e91de571c1e07d1759cec79e5ab439c296fa4e92d7b742ba3478bb4ca3",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
      "ITransparentUpgradeableProxy": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "previousAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "AdminChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "beacon",
                "type": "address"
              }
            ],
            "name": "BeaconUpgraded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "admin",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "changeAdmin",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "upgradeTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "admin()": "f851a440",
            "changeAdmin(address)": "8f283970",
            "implementation()": "5c60da1b",
            "upgradeTo(address)": "3659cfe6",
            "upgradeToAndCall(address,bytes)": "4f1ef286"
          }
        },
        "irOptimized": ""
      },
      "TransparentUpgradeableProxy": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_logic",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "admin_",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "stateMutability": "payable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "previousAdmin",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "newAdmin",
                "type": "address"
              }
            ],
            "name": "AdminChanged",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "beacon",
                "type": "address"
              }
            ],
            "name": "BeaconUpgraded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "implementation",
                "type": "address"
              }
            ],
            "name": "Upgraded",
            "type": "event"
          },
          {
            "stateMutability": "payable",
            "type": "fallback"
          },
          {
            "stateMutability": "payable",
            "type": "receive"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x168e36d7e616bd41f6abab4a83009da64513ae9e638aa6d5980066e2a92db689\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a45c64b97311fabbcbe8dad7e94fa89e06a7f96060d5565326ef706f5f239017\",\"dweb:/ipfs/QmeU2jiBGbHhz9DqRotjbpAx5s2xExDSRQtSD5ENjuHzDq\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tptr.add\tr1, r3, r4\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tcontext.caller\tr6\n\tadd\t@CPI0_15[0], r0, r5\n\tsload\tr5, r8\n\tand\t@CPI0_2[0], r8, r5\n\tsub!\tr3, r0, r7\n\tjump.ne\t@.BB0_32\n\tsub!\tr6, r5, r2\n\tjump.ne\t@.BB0_39\n\tld\tr1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tsub.s!\t@CPI0_20[0], r1, r2\n\tjump.le\t@.BB0_70\n\tsub.s!\t@CPI0_21[0], r1, r2\n\tjump.eq\t@.BB0_94\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.eq\t@.BB0_110\n\tsub.s!\t@CPI0_23[0], r1, r1\n\tjump.ne\t@.BB0_92\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_96\n\tjump\t@.BB0_110\n.BB0_8:\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_11\n\tadd\tr0, r0, r5\n.BB0_10:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_10\n.BB0_11:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_13\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_13:\n\tsub.s!\t96, r3, r1\n\tjump.lt\t@.BB0_110\n\tld.1\t128, r8\n\tsub.s!\t@CPI0_2[0], r8, r1\n\tjump.gt\t@.BB0_110\n\tld.1\t160, r7\n\tsub.s!\t@CPI0_2[0], r7, r1\n\tjump.gt\t@.BB0_110\n\tld.1\t192, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_110\n\tadd\t31, r2, r1\n\tadd\t@CPI0_4[0], r0, r4\n\tsub!\tr1, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_4[0], r1, r1\n\tsub!\tr1, r0, r6\n\tadd.ge\tr0, r0, r4\n\tsub.s!\t@CPI0_4[0], r1, r1\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_110\n\tadd\t128, r2, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_3[0], r1, r4\n\tjump.gt\t@.BB0_120\n\tadd\t31, r1, r4\n\tsub.s\t32, r0, r9\n\tand\tr4, r9, r4\n\tadd\t63, r4, r4\n\tand\tr4, r9, r4\n\tld.1\t64, r10\n\tadd\tr10, r4, r4\n\tsub!\tr4, r10, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r4, r6\n\tjump.gt\t@.BB0_120\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_120\n\tadd\t128, r3, r3\n\tst.1\t64, r4\n\tst.1.inc\tr10, r1, r6\n\tadd\t160, r2, r2\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_110\n\tadd\tr10, r0, stack-[5]\n\tadd\tr9, r0, stack-[3]\n\tadd\tr7, r0, stack-[6]\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_25\n\tadd\tr0, r0, r3\n.BB0_24:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_24\n.BB0_25:\n\tadd\tr6, r0, stack-[4]\n\tadd\tr6, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr8, r0, stack-[7]\n\tst.2\t4, r8\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_188\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_113\n\tadd\tstack-[7], r0, r1\n\tand\t@CPI0_2[0], r1, r5\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r2\n\tor\tr2, r5, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r6\n\tand!\t1, r2, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[5], r0, r4\n\tadd\tstack-[4], r0, r5\n\tjump.eq\t@.BB0_110\n\tld.1\tr4, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_125\n.BB0_29:\n\tadd\t@CPI0_15[0], r0, r1\n\tsload\tr1, r3\n\tand\t@CPI0_2[0], r2, r4\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\tr4, r0, stack-[7]\n\tst.1\tr2, r4\n\tadd\tr3, r0, stack-[6]\n\tand\t@CPI0_2[0], r3, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_110\n\tadd\tstack-[7], r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_106\n\tadd\tstack-[6], r0, r1\n\tand\t@CPI0_8[0], r1, r1\n\tor\tr1, r2, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_18[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tsub!\tr6, r5, r6\n\tjump.ne\t@.BB0_45\n\tld\tr1, r4\n\tand\t@CPI0_19[0], r4, r4\n\tsub.s!\t@CPI0_20[0], r4, r6\n\tjump.le\t@.BB0_72\n\tsub.s!\t@CPI0_21[0], r4, r6\n\tjump.eq\t@.BB0_97\n\tsub.s!\t@CPI0_22[0], r4, r6\n\tjump.eq\t@.BB0_101\n\tsub.s!\t@CPI0_23[0], r4, r1\n\tjump.ne\t@.BB0_92\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_110\n\tst.1\t160, r5\n\tjump\t@.BB0_99\n.BB0_39:\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_56\n\tadd\tstack[@returndatasize], r0, r3\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r1\n\tjump.eq\t@.BB0_43\n\tadd\tr0, r0, r5\n.BB0_42:\n\tshl.s\t5, r5, r6\n\tptr.add\tr4, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_42\n.BB0_43:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_69\n\tjump\t@.BB0_55\n.BB0_45:\n\tand\t31, r3, r5\n\tadd\t@CPI0_7[0], r0, r2\n\tsload\tr2, r2\n\tand\t@CPI0_2[0], r2, r2\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_48\n\tadd\tr0, r0, r7\n.BB0_47:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_47\n.BB0_48:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_50\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tptr.add\tr1, r6, r1\n\tld\tr1, r1\n\tsub\t256, r5, r5\n\tshr\tr1, r5, r1\n\tshl\tr1, r5, r1\n\tor\tr1, r7, r1\n\tst.1\tr6, r1\n.BB0_50:\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_63\n\tadd\tstack[@returndatasize], r0, r3\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r1\n\tjump.eq\t@.BB0_54\n\tadd\tr0, r0, r5\n.BB0_53:\n\tshl.s\t5, r5, r6\n\tptr.add\tr4, r6, r7\n\tld\tr7, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_53\n.BB0_54:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_69\n.BB0_55:\n\tshl.s\t3, r2, r2\n\tshl.s\t5, r1, r1\n\tld.1\tr1, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tptr.add\tr4, r1, r4\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr1, r2\n\tjump\t@.BB0_69\n.BB0_56:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_59\n\tadd\tr0, r0, r6\n.BB0_58:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_58\n.BB0_59:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_61\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_61:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_69\n\tjump\t@.BB0_93\n.BB0_63:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t96, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_66\n\tadd\tr0, r0, r6\n.BB0_65:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_65\n.BB0_66:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_68\n\tshl.s\t3, r4, r4\n\tshl.s\t5, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tptr.add\tr1, r5, r1\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_68:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_93\n.BB0_69:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_93:\n\tshl.s\t96, r3, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_70:\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.eq\t@.BB0_110\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tjump.eq\t@.BB0_110\n\tjump\t@.BB0_92\n.BB0_72:\n\tsub.s!\t@CPI0_24[0], r4, r2\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_25[0], r4, r2\n\tjump.ne\t@.BB0_92\n\tsub.s!\t68, r3, r2\n\tjump.lt\t@.BB0_110\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r9\n\tsub.s!\t@CPI0_2[0], r9, r2\n\tjump.gt\t@.BB0_110\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_3[0], r4, r2\n\tjump.gt\t@.BB0_110\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_110\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_3[0], r2, r6\n\tjump.gt\t@.BB0_120\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r8\n\tand\tr6, r8, r6\n\tadd\t63, r6, r6\n\tand\tr6, r8, r6\n\tsub.s!\t@CPI0_32[0], r6, r7\n\tjump.gt\t@.BB0_120\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_110\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_84\n\tadd\tr0, r0, r5\n.BB0_83:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_83\n.BB0_84:\n\tadd\tr8, r0, stack-[6]\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_86\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_86:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr9, r0, stack-[7]\n\tst.2\t4, r9\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_188\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_113\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tadd\tstack-[7], r0, r5\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_110\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_11[0], r1, r1\n\tjump.gt\t@.BB0_120\n\tadd\tstack-[5], r0, r4\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tst.1.inc\tr4, r1, r2\n\tadd\t@CPI0_13[0], r0, r1\n\tadd\tr2, r0, stack-[4]\n\tst.1\tr2, r1\n\tld.1\t128, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r3, r3\n\tjump.ne\t@.BB0_167\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_168\n.BB0_92:\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t66, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_43[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t260, r1\n\tadd\t@CPI0_46[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_94:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_110\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r5\n.BB0_96:\n\tst.1\t160, r5\n\tadd\t32, r0, r1\n\tst.1\t128, r1\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_42[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_97:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_110\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t160, r1\n.BB0_99:\n\tadd\t32, r0, r1\n\tst.1\t128, r1\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_26[0], r0, r1\n.BB0_100:\n\tadd\t@CPI0_36[0], r0, r3\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t@CPI0_37[0], r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_101:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_110\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_110\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.gt\t@.BB0_110\n\tst.1\t128, r5\n\tst.1\t160, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tr2, r0, stack-[6]\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_17[0], r0, r4\n\tadd\tr8, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r3\n\tand!\t1, r2, r1\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB0_110\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_115\n.BB0_106:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_29[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n\tjump\t@.BB0_114\n.BB0_107:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_110\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_110\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.le\t@.BB0_111\n.BB0_110:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_111:\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.2\t4, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_188\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_116\n.BB0_113:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t45, r0, r3\n.BB0_114:\n\tst.1\tr2, r3\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_115:\n\tand\t@CPI0_8[0], r3, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tsstore\tr2, r1\n\tjump\t@.BB0_119\n.BB0_116:\n\tadd\t@CPI0_7[0], r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_8[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tadd\tstack-[7], r0, r5\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_9[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r5\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_110\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_122\n.BB0_118:\n.BB0_119:\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_28[0], r2, r1\n\tjump.le\t@.BB0_121\n.BB0_120:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_121:\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_100\n.BB0_122:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_11[0], r3, r1\n\tjump.gt\t@.BB0_120\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tadd\tr3, r0, stack-[5]\n\tst.1.inc\tr3, r1, r2\n\tadd\t@CPI0_13[0], r0, r1\n\tadd\tr2, r0, stack-[6]\n\tst.1\tr2, r1\n\tld.1\t128, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r5, r3\n\tjump.ne\t@.BB0_128\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_129\n.BB0_125:\n\tld.1\t64, r3\n\tsub.s!\t@CPI0_11[0], r3, r1\n\tjump.gt\t@.BB0_120\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r1\n\tadd\t@CPI0_12[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t39, r0, r1\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr3, r1, r2\n\tadd\t@CPI0_13[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tld.1\tr4, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t4, r6, r3\n\tjump.ne\t@.BB0_146\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r4\n\tjump\t@.BB0_147\n.BB0_128:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\tr5, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_129:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_138\n\tadd\t96, r0, r3\n\tadd\t128, r0, r1\n.BB0_131:\n\tld.1\tr3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_160\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_176\n\tld.1\t64, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[6], r0, r7\n\tjump.eq\t@.BB0_136\n\tadd\tr0, r0, r4\n.BB0_135:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_135\n.BB0_136:\n\tadd\t31, r2, r4\n\tsub.s\t32, r0, r5\n.BB0_137:\n\tand\tr4, r5, r4\n\tadd\tr2, r3, r2\n\tst.1\tr2, r0\n\tadd\t68, r4, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_138:\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tjump.gt\t@.BB0_120\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t63, r1, r1\n\tand\tr1, r3, r1\n\tld.1\t64, r3\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r6\n\tjump.gt\t@.BB0_120\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_120\n\tst.1\t64, r1\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_144\n\tadd\tr0, r0, r7\n.BB0_143:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_143\n.BB0_144:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_131\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr1, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n\tjump\t@.BB0_131\n.BB0_146:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t64, r5, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tr6, r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_147:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_152\n\tadd\t96, r0, r3\n\tadd\t128, r0, r1\n.BB0_149:\n\tld.1\tr3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_163\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_176\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[7]\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t32, r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[2], r0, r1\n\tld.1\tr1, r3\n\tadd\tr3, r0, stack-[6]\n\tadd\t36, r4, r1\n\tst.1\tr1, r3\n\tadd\t68, r4, r2\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r1\n\tadd\t31, r1, r1\n\tand\tstack-[3], r1, r1\n\tadd\t68, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[7], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_152:\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tadd\tstack-[3], r0, r3\n\tjump.gt\t@.BB0_120\n\tadd\t31, r4, r1\n\tand\tr1, r3, r1\n\tadd\t63, r1, r1\n\tand\tr1, r3, r1\n\tld.1\t64, r3\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r6\n\tjump.gt\t@.BB0_120\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_120\n\tst.1\t64, r1\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_158\n\tadd\tr0, r0, r7\n.BB0_157:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_157\n.BB0_158:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_149\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr1, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n\tjump\t@.BB0_149\n.BB0_160:\n\tsub!\tr3, r0, r1\n\tadd\tstack-[7], r0, r2\n\tjump.ne\t@.BB0_118\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_188\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_118\n\tjump\t@.BB0_166\n.BB0_163:\n\tsub!\tr3, r0, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tstack-[7], r0, r3\n\tjump.ne\t@.BB0_29\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tst.2\t4, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_188\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[6], r0, r2\n\tjump.ne\t@.BB0_29\n.BB0_166:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_34[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_35[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_167:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__delegatecall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r4\n.BB0_168:\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_177\n\tadd\t96, r0, r3\n\tadd\t128, r0, r1\n.BB0_170:\n\tld.1\tr3, r3\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_185\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_176\n\tld.1\t64, r1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tadd\t36, r1, r3\n\tst.1\tr3, r2\n\tadd\t68, r1, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[4], r0, r7\n\tjump.eq\t@.BB0_175\n\tadd\tr0, r0, r4\n.BB0_174:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_174\n.BB0_175:\n\tadd\t31, r2, r4\n\tadd\tstack-[6], r0, r5\n\tjump\t@.BB0_137\n.BB0_176:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_177:\n\tsub.s!\t@CPI0_3[0], r4, r1\n\tadd\tstack-[6], r0, r3\n\tjump.gt\t@.BB0_120\n\tadd\t31, r4, r1\n\tand\tr1, r3, r1\n\tadd\t63, r1, r1\n\tand\tr1, r3, r1\n\tld.1\t64, r3\n\tadd\tr3, r1, r1\n\tsub!\tr1, r3, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_3[0], r1, r6\n\tjump.gt\t@.BB0_120\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_120\n\tst.1\t64, r1\n\tand\t31, r4, r5\n\tst.1.inc\tr3, r4, r1\n\tptr.add\tstack[@ptr_return_data], r0, r6\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_183\n\tadd\tr0, r0, r7\n.BB0_182:\n\tshl.s\t5, r7, r8\n\tadd\tr1, r8, r9\n\tptr.add\tr6, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_182\n.BB0_183:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_170\n\tshl.s\t5, r4, r4\n\tptr.add\tr6, r4, r6\n\tadd\tr1, r4, r4\n\tshl.s\t3, r5, r5\n\tld.1\tr4, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr6, r6\n\tsub\t256, r5, r5\n\tshr\tr6, r5, r6\n\tshl\tr6, r5, r5\n\tor\tr5, r7, r5\n\tst.1\tr4, r5\n\tjump\t@.BB0_170\n.BB0_185:\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_119\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_6[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_188\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_119\n\tjump\t@.BB0_166\n.BB0_188:\n\trevert\n.func_end0:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin1:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n__staticcall:\n.func_begin4:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB4_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__delegatecall:\n.func_begin5:\n.tmp6:\n\tfar_call.delegate\tr1, r2, @.BB5_2\n.tmp7:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp8:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell 18446744073709551615\nCPI0_4:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_5:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_6:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_7:\n\t.cell 24440054405305269366569402256811496959409073762505157381672968839269610695612\nCPI0_8:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_9:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_10:\n\t.cell -30536698362301869620703524882028299911890425965968411027149867401609008632517\nCPI0_11:\n\t.cell 18446744073709551519\nCPI0_12:\n\t.cell 14654901866877395549149391597484105336708473837108585137082493300548441210880\nCPI0_13:\n\t.cell 29577713123142787666065354962605974352286555015652805685687967870311454567532\nCPI0_14:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_15:\n\t.cell -33836616157800148473937241991990060311975165975819281289460902511640494382845\nCPI0_16:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_17:\n\t.cell 57168638331561637060830620937878871246875502369269713186874178039217247582607\nCPI0_18:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_19:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_20:\n\t.cell 41783904696501392981958754530355920803367001723273469674524225868246137438207\nCPI0_21:\n\t.cell 41783904696501392981958754530355920803367001723273469674524225868246137438208\nCPI0_22:\n\t.cell -51040281588262172729994757417671590548574929652371291425639197795456095617024\nCPI0_23:\n\t.cell -3474254564581621626188260025310941719202095730505663504633513953338824065024\nCPI0_24:\n\t.cell 24583578074543180268843569895713186669491495773330943018694496374928902717440\nCPI0_25:\n\t.cell 35787394285270172926002399276345764320359862283067404231778073799726653767680\nCPI0_26:\n\t.cell 2535301200456458802993406410752\nCPI0_27:\n\t.cell 904625697166532776746648320380374280103671760270919309832363222483456753664\nCPI0_28:\n\t.cell 18446744073709551583\nCPI0_29:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_30:\n\t.cell 31354931755624933654031447922210079955860470560114867000114460986147043483745\nCPI0_31:\n\t.cell 10458117451882892562347801444352\nCPI0_32:\n\t.cell 18446744073709551487\nCPI0_33:\n\t.cell 2951479051793528258560\nCPI0_34:\n\t.cell 29577713123142787666064487680123823951345158729797978021083438401868913442816\nCPI0_35:\n\t.cell 7922816251426433759354395033600\nCPI0_36:\n\t.cell 4294967263\nCPI0_37:\n\t.cell 590295810358705651712\nCPI0_38:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_39:\n\t.cell 2852213850513516153367582212096\nCPI0_40:\n\t.cell 50411903926665684337970802942352511357568373430877458990420567558264874598400\nCPI0_41:\n\t.cell 31354931755624933654031447922210259146857421806447843296373930569683382247534\nCPI0_42:\n\t.cell 2535301203407937854786934669312\nCPI0_43:\n\t.cell 38196372293526028768745537377834664526780728754846428360608283209572903117933\nCPI0_44:\n\t.cell 47687425813547131531374693542026864319719216742175721048342195994864927208039\nCPI0_45:\n\t.cell 45888551966424197807937402689295079693071411769653575580334356259971920822272\nCPI0_46:\n\t.cell 12993418654700534606776030461952\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 1:\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\", 3:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\", 8:\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\", 9:\"node_modules/@openzeppelin/contracts/utils/Address.sol\", 11:\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"TransparentUpgradeableProxy_1005\" {\n    code {\n        {\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _1 := 64\n            mstore(_1, memoryguard(0x80))\n            let programSize := datasize(\"TransparentUpgradeableProxy_1005\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _2 := add(memoryDataOffset, argSize)\n            if slt(sub(_2, memoryDataOffset), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let value0 := abi_decode_address_fromMemory(memoryDataOffset)\n            let _3 := 32\n            let value1 := abi_decode_address_fromMemory(add(memoryDataOffset, _3))\n            let offset := mload(add(memoryDataOffset, _1))\n            let _4 := sub(shl(64, 1), 1)\n            if gt(offset, _4)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _5 := add(memoryDataOffset, offset)\n            if iszero(slt(add(_5, 0x1f), _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _6 := mload(_5)\n            let array := allocate_memory(array_allocation_size_bytes(_6))\n            mstore(array, _6)\n            let dst := add(array, _3)\n            if gt(add(add(_5, _6), _3), _2)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            copy_memory_to_memory_with_cleanup(add(_5, _3), dst, _6)\n            if /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(value0))\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            {\n                let memPtr := mload(_1)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), _3)\n                mstore(add(memPtr, 36), 45)\n                mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                mstore(add(memPtr, 100), \"ot a contract\")\n                revert(memPtr, 132)\n            }\n            let _7 := sub(shl(160, 1), 1)\n            let _8 := and(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ value0, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _7)\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            let _9 := not(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            let _10 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n            sstore(_10, or(and(sload(_10), _9), _8))\n            /// @src -1:-1:-1\n            let _11 := 0\n            /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n            log2(/** @src -1:-1:-1 */ _11, _11, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _8)\n            /// @src 4:2208:2223  \"data.length > 0\"\n            let _12 := iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ array))\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_12)\n            /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n            if _12\n            {\n                expr := /** @src -1:-1:-1 */ _11\n            }\n            /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n            if expr\n            {\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let memPtr_1 := mload(_1)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, _4), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(/** @src -1:-1:-1 */ _11, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ _11, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 0x24)\n                }\n                mstore(_1, newFreePtr)\n                mstore(memPtr_1, 39)\n                mstore(add(memPtr_1, _3), \"Address: low-level delegate call\")\n                mstore(add(memPtr_1, _1), \" failed\")\n                /// @src 9:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), value0, dst, mload(array), /** @src -1:-1:-1 */ _11, _11)\n                /// @src 9:7265:7290  \"target.delegatecall(data)\"\n                let data := /** @src -1:-1:-1 */ _11\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _13 := returndatasize()\n                    let memPtr_2 := allocate_memory(array_allocation_size_bytes(_13))\n                    mstore(memPtr_2, _13)\n                    data := memPtr_2\n                    returndatacopy(add(memPtr_2, _3), /** @src -1:-1:-1 */ _11, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 9:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                pop(fun_verifyCallResultFromTarget(value0, expr_component, /** @src 9:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 9:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ memPtr_1))\n            }\n            /// @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\"\n            let _14 := 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n            let _15 := sload(_14)\n            /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n            let _16 := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(_1)\n            mstore(_16, and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ _15, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _7))\n            let _17 := and(value1, _7)\n            mstore(add(_16, _3), _17)\n            /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n            log1(_16, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _1, /** @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\" */ 0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            if /** @src 4:4051:4073  \"newAdmin != address(0)\" */ iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _17)\n            {\n                let memPtr_3 := mload(_1)\n                mstore(memPtr_3, shl(229, 4594637))\n                mstore(add(memPtr_3, 4), _3)\n                mstore(add(memPtr_3, 36), 38)\n                mstore(add(memPtr_3, 68), \"ERC1967: new admin is the zero a\")\n                mstore(add(memPtr_3, 100), \"ddress\")\n                revert(memPtr_3, 132)\n            }\n            /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n            sstore(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ _14, /** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ or(and(_15, _9), _17))\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            let _18 := mload(_1)\n            let _19 := datasize(\"TransparentUpgradeableProxy_1005_deployed\")\n            codecopy(_18, dataoffset(\"TransparentUpgradeableProxy_1005_deployed\"), _19)\n            return(_18, _19)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n        function array_allocation_size_bytes(length) -> size\n        {\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            size := add(and(add(length, 31), not(31)), 0x20)\n        }\n        function copy_memory_to_memory_with_cleanup(src, dst, length)\n        {\n            let i := 0\n            for { } lt(i, length) { i := add(i, 32) }\n            {\n                mstore(add(dst, i), mload(add(src, i)))\n            }\n            mstore(add(dst, length), 0)\n        }\n        /// @ast-id 1290 @src 9:7671:8299  \"function verifyCallResultFromTarget(...\"\n        function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_mpos\n        {\n            /// @src 9:7851:7863  \"bytes memory\"\n            var_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n            /// @src 9:7875:8293  \"if (success) {...\"\n            switch var_success\n            case 0 {\n                /// @src 9:8976:9355  \"if (returndata.length > 0) {...\"\n                switch /** @src 9:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 9:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                case /** @src 9:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                    /// @src 9:9324:9344  \"revert(errorMessage)\"\n                    let _1 := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                    /// @src 9:9324:9344  \"revert(errorMessage)\"\n                    mstore(_1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(229, 4594637))\n                    mstore(/** @src 9:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 32)\n                    let length := mload(var_errorMessage_mpos)\n                    mstore(add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36), length)\n                    copy_memory_to_memory_with_cleanup(add(var_errorMessage_mpos, 32), add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 68), length)\n                    /// @src 9:9324:9344  \"revert(errorMessage)\"\n                    revert(_1, add(sub(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(add(length, 31), not(31))), /** @src 9:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 68))\n                }\n                default /// @src 9:8976:9355  \"if (returndata.length > 0) {...\"\n                {\n                    /// @src 9:9152:9294  \"assembly {...\"\n                    revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                }\n            }\n            default /// @src 9:7875:8293  \"if (success) {...\"\n            {\n                /// @src 9:7902:8188  \"if (returndata.length == 0) {...\"\n                if /** @src 9:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 9:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                /// @src 9:7902:8188  \"if (returndata.length == 0) {...\"\n                {\n                    /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    if /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(var_target))\n                    /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    {\n                        let memPtr := mload(64)\n                        mstore(memPtr, shl(229, 4594637))\n                        mstore(add(memPtr, 4), 32)\n                        mstore(add(memPtr, 36), 29)\n                        mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                        revert(memPtr, 100)\n                    }\n                }\n                /// @src 9:8201:8218  \"return returndata\"\n                var_mpos := var_returndata_mpos\n                leave\n            }\n        }\n    }\n    /// @use-src 3:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\", 4:\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\", 5:\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\", 8:\"node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\", 9:\"node_modules/@openzeppelin/contracts/utils/Address.sol\", 11:\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"TransparentUpgradeableProxy_1005_deployed\" {\n        code {\n            {\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                mstore(64, 128)\n                if iszero(calldatasize())\n                {\n                    /// @src 8:4464:5503  \"if (msg.sender == _getAdmin()) {...\"\n                    switch /** @src 8:4468:4493  \"msg.sender == _getAdmin()\" */ eq(/** @src 8:4468:4478  \"msg.sender\" */ caller(), /** @src 8:4468:4493  \"msg.sender == _getAdmin()\" */ cleanup_address(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))))\n                    case /** @src 8:4464:5503  \"if (msg.sender == _getAdmin()) {...\" */ 0 { fun__fallback() }\n                    default {\n                        /// @src 8:4509:4525  \"bytes memory ret\"\n                        let var_ret_mpos := /** @src -1:-1:-1 */ 0\n                        /// @src 8:4509:4525  \"bytes memory ret\"\n                        var_ret_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                        /// @src 8:4557:4564  \"msg.sig\"\n                        let expr := and(calldataload(/** @src -1:-1:-1 */ 0), /** @src 8:4557:4564  \"msg.sig\" */ shl(224, 0xffffffff))\n                        /// @src 8:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                        switch /** @src 8:4582:4641  \"selector == ITransparentUpgradeableProxy.upgradeTo.selector\" */ eq(expr, /** @src 8:4594:4641  \"ITransparentUpgradeableProxy.upgradeTo.selector\" */ shl(225, 0x1b2ce7f3))\n                        case /** @src 8:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\" */ 0 {\n                            /// @src 8:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                            switch /** @src 8:4712:4778  \"selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ eq(expr, /** @src 8:4724:4778  \"ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ shl(225, 0x278f7943))\n                            case /** @src 8:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\" */ 0 {\n                                /// @src 8:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                                switch /** @src 8:4856:4917  \"selector == ITransparentUpgradeableProxy.changeAdmin.selector\" */ eq(expr, /** @src 8:4868:4917  \"ITransparentUpgradeableProxy.changeAdmin.selector\" */ shl(228, 0x08f28397))\n                                case /** @src 8:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\" */ 0 {\n                                    /// @src 8:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                    switch /** @src 8:4990:5045  \"selector == ITransparentUpgradeableProxy.admin.selector\" */ eq(expr, /** @src 8:5002:5045  \"ITransparentUpgradeableProxy.admin.selector\" */ shl(230, 0x03e14691))\n                                    case /** @src 8:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\" */ 0 {\n                                        /// @src 8:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                        switch /** @src 8:5112:5176  \"selector == ITransparentUpgradeableProxy.implementation.selector\" */ eq(expr, /** @src 8:5124:5176  \"ITransparentUpgradeableProxy.implementation.selector\" */ shl(224, 0x5c60da1b))\n                                        case /** @src 8:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\" */ 0 {\n                                            /// @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                            let _1 := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                                            /// @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                            mstore(_1, shl(229, 4594637))\n                                            revert(_1, sub(abi_encode_stringliteral_f5d2(add(_1, 4)), _1))\n                                        }\n                                        default /// @src 8:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                        {\n                                            /// @src 8:5196:5227  \"ret = _dispatchImplementation()\"\n                                            var_ret_mpos := /** @src 8:5202:5227  \"_dispatchImplementation()\" */ fun_dispatchImplementation()\n                                        }\n                                    }\n                                    default /// @src 8:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                    {\n                                        /// @src 8:5065:5087  \"ret = _dispatchAdmin()\"\n                                        var_ret_mpos := /** @src 8:5071:5087  \"_dispatchAdmin()\" */ fun_dispatchAdmin()\n                                    }\n                                }\n                                default /// @src 8:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                                {\n                                    /// @src 8:4937:4965  \"ret = _dispatchChangeAdmin()\"\n                                    var_ret_mpos := /** @src 8:4943:4965  \"_dispatchChangeAdmin()\" */ fun_dispatchChangeAdmin()\n                                }\n                            }\n                            default /// @src 8:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                            {\n                                /// @src 8:4798:4831  \"ret = _dispatchUpgradeToAndCall()\"\n                                var_ret_mpos := /** @src 8:4804:4831  \"_dispatchUpgradeToAndCall()\" */ fun_dispatchUpgradeToAndCall()\n                            }\n                        }\n                        default /// @src 8:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                        {\n                            /// @src 8:4661:4687  \"ret = _dispatchUpgradeTo()\"\n                            var_ret_mpos := /** @src 8:4667:4687  \"_dispatchUpgradeTo()\" */ fun_dispatchUpgradeTo()\n                        }\n                        /// @src 8:5370:5445  \"assembly {...\"\n                        return(add(var_ret_mpos, 0x20), mload(var_ret_mpos))\n                    }\n                }\n                /// @src 5:2629:2693  \"fallback() external payable virtual {...\"\n                fun_fallback()\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_encode_stringliteral_f5d2(headStart) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), 66)\n                mstore(add(headStart, 64), \"TransparentUpgradeableProxy: adm\")\n                mstore(add(headStart, 96), \"in cannot fallback to proxy targ\")\n                mstore(add(headStart, 128), \"et\")\n                tail := add(headStart, 160)\n            }\n            /// @ast-id 847 @src 8:4407:5509  \"function _fallback() internal virtual override {...\"\n            function fun_fallback()\n            {\n                /// @src 8:4464:5503  \"if (msg.sender == _getAdmin()) {...\"\n                switch /** @src 8:4468:4493  \"msg.sender == _getAdmin()\" */ eq(/** @src 8:4468:4478  \"msg.sender\" */ caller(), /** @src 8:4468:4493  \"msg.sender == _getAdmin()\" */ cleanup_address(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))))\n                case /** @src 8:4464:5503  \"if (msg.sender == _getAdmin()) {...\" */ 0 { fun__fallback() }\n                default {\n                    /// @src 8:4509:4525  \"bytes memory ret\"\n                    let var_ret_mpos := /** @src -1:-1:-1 */ 0\n                    /// @src 8:4509:4525  \"bytes memory ret\"\n                    var_ret_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                    /// @src 8:4557:4564  \"msg.sig\"\n                    let expr := and(calldataload(/** @src -1:-1:-1 */ 0), /** @src 8:4557:4564  \"msg.sig\" */ shl(224, 0xffffffff))\n                    /// @src 8:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                    switch /** @src 8:4582:4641  \"selector == ITransparentUpgradeableProxy.upgradeTo.selector\" */ eq(expr, /** @src 8:4594:4641  \"ITransparentUpgradeableProxy.upgradeTo.selector\" */ shl(225, 0x1b2ce7f3))\n                    case /** @src 8:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\" */ 0 {\n                        /// @src 8:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                        switch /** @src 8:4712:4778  \"selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ eq(expr, /** @src 8:4724:4778  \"ITransparentUpgradeableProxy.upgradeToAndCall.selector\" */ shl(225, 0x278f7943))\n                        case /** @src 8:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\" */ 0 {\n                            /// @src 8:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                            switch /** @src 8:4856:4917  \"selector == ITransparentUpgradeableProxy.changeAdmin.selector\" */ eq(expr, /** @src 8:4868:4917  \"ITransparentUpgradeableProxy.changeAdmin.selector\" */ shl(228, 0x08f28397))\n                            case /** @src 8:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\" */ 0 {\n                                /// @src 8:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                switch /** @src 8:4990:5045  \"selector == ITransparentUpgradeableProxy.admin.selector\" */ eq(expr, /** @src 8:5002:5045  \"ITransparentUpgradeableProxy.admin.selector\" */ shl(230, 0x03e14691))\n                                case /** @src 8:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\" */ 0 {\n                                    /// @src 8:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                    switch /** @src 8:5112:5176  \"selector == ITransparentUpgradeableProxy.implementation.selector\" */ eq(expr, /** @src 8:5124:5176  \"ITransparentUpgradeableProxy.implementation.selector\" */ shl(224, 0x5c60da1b))\n                                    case /** @src 8:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\" */ 0 {\n                                        /// @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                        let _1 := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                                        /// @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\"\n                                        mstore(_1, shl(229, 4594637))\n                                        revert(_1, sub(abi_encode_stringliteral_f5d2(add(_1, 4)), _1))\n                                    }\n                                    default /// @src 8:5108:5357  \"if (selector == ITransparentUpgradeableProxy.implementation.selector) {...\"\n                                    {\n                                        /// @src 8:5196:5227  \"ret = _dispatchImplementation()\"\n                                        var_ret_mpos := /** @src 8:5202:5227  \"_dispatchImplementation()\" */ fun_dispatchImplementation()\n                                    }\n                                }\n                                default /// @src 8:4986:5357  \"if (selector == ITransparentUpgradeableProxy.admin.selector) {...\"\n                                {\n                                    /// @src 8:5065:5087  \"ret = _dispatchAdmin()\"\n                                    var_ret_mpos := /** @src 8:5071:5087  \"_dispatchAdmin()\" */ fun_dispatchAdmin()\n                                }\n                            }\n                            default /// @src 8:4852:5357  \"if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {...\"\n                            {\n                                /// @src 8:4937:4965  \"ret = _dispatchChangeAdmin()\"\n                                var_ret_mpos := /** @src 8:4943:4965  \"_dispatchChangeAdmin()\" */ fun_dispatchChangeAdmin()\n                            }\n                        }\n                        default /// @src 8:4708:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {...\"\n                        {\n                            /// @src 8:4798:4831  \"ret = _dispatchUpgradeToAndCall()\"\n                            var_ret_mpos := /** @src 8:4804:4831  \"_dispatchUpgradeToAndCall()\" */ fun_dispatchUpgradeToAndCall()\n                        }\n                    }\n                    default /// @src 8:4578:5357  \"if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {...\"\n                    {\n                        /// @src 8:4661:4687  \"ret = _dispatchUpgradeTo()\"\n                        var_ret_mpos := /** @src 8:4667:4687  \"_dispatchUpgradeTo()\" */ fun_dispatchUpgradeTo()\n                    }\n                    /// @src 8:5370:5445  \"assembly {...\"\n                    return(add(var_ret_mpos, 0x20), mload(var_ret_mpos))\n                }\n            }\n            /// @ast-id 514 @src 5:2322:2432  \"function _fallback() internal virtual {...\"\n            function fun__fallback()\n            {\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let cleaned := and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 5:1018:1837  \"assembly {...\"\n                calldatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 5:1018:1837  \"assembly {...\" */ calldatasize())\n                let usr$result := delegatecall(gas(), cleaned, /** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ calldatasize(), /** @src -1:-1:-1 */ _1, _1)\n                /// @src 5:1018:1837  \"assembly {...\"\n                returndatacopy(/** @src -1:-1:-1 */ _1, _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                switch usr$result\n                case 0 {\n                    revert(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n                default {\n                    return(/** @src -1:-1:-1 */ _1, /** @src 5:1018:1837  \"assembly {...\" */ returndatasize())\n                }\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_3970(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(64, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3971(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(64, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3972(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(32, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3974(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(0x20, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3975(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(0x20, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_3976(memPtr)\n            {\n                let newFreePtr := add(memPtr, and(add(96, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            /// @ast-id 867 @src 8:5860:6025  \"function _dispatchAdmin() private returns (bytes memory) {...\"\n            function fun_dispatchAdmin() -> var_851_mpos\n            {\n                /// @src 8:5903:5915  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let cleaned := and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                /// @src 8:6001:6018  \"abi.encode(admin)\"\n                let expr_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                mstore(/** @src 8:6001:6018  \"abi.encode(admin)\" */ add(expr_mpos, 0x20), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ cleaned)\n                /// @src 8:6001:6018  \"abi.encode(admin)\"\n                mstore(expr_mpos, 0x20)\n                finalize_allocation_3970(expr_mpos)\n                /// @src 8:5994:6018  \"return abi.encode(admin)\"\n                var_851_mpos := expr_mpos\n            }\n            /// @ast-id 887 @src 8:6385:6583  \"function _dispatchImplementation() private returns (bytes memory) {...\"\n            function fun_dispatchImplementation() -> var_871_mpos\n            {\n                /// @src 8:6437:6449  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let cleaned := and(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                /// @src 8:6550:6576  \"abi.encode(implementation)\"\n                let expr_884_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                mstore(/** @src 8:6550:6576  \"abi.encode(implementation)\" */ add(expr_884_mpos, 0x20), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ cleaned)\n                /// @src 8:6550:6576  \"abi.encode(implementation)\"\n                mstore(expr_884_mpos, 0x20)\n                finalize_allocation_3971(expr_884_mpos)\n                /// @src 8:6543:6576  \"return abi.encode(implementation)\"\n                var_871_mpos := expr_884_mpos\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function abi_decode_address_payable() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_tuple_address_payable(dataEnd) -> value0\n            {\n                if slt(add(dataEnd, not(3)), 32) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                value0 := value\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function allocate_memory_array_string() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_3972(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src 8:6827:6835  \"msg.data\" */ 0)\n            }\n            /// @ast-id 916 @src 8:6694:6910  \"function _dispatchChangeAdmin() private returns (bytes memory) {...\"\n            function fun_dispatchChangeAdmin() -> var__mpos\n            {\n                /// @src 8:6743:6755  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 8:6836:6837  \"4\" */ 0x04, /** @src 8:6827:6835  \"msg.data\" */ calldatasize())\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 8:6827:6835  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 8:6816:6851  \"abi.decode(msg.data[4:], (address))\" */ abi_decode_tuple_address_payable(/** @src 8:6827:6835  \"msg.data\" */ calldatasize()), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _1)\n                /// @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\"\n                let _3 := 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n                let _4 := sload(_3)\n                /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n                let _5 := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                mstore(_5, and(_4, _1))\n                mstore(add(_5, 32), _2)\n                /// @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\"\n                log1(_5, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 64, /** @src 4:4364:4399  \"AdminChanged(_getAdmin(), newAdmin)\" */ 0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f)\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if /** @src 4:4051:4073  \"newAdmin != address(0)\" */ iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr, /** @src 8:6836:6837  \"4\" */ 0x04), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 32)\n                    mstore(add(memPtr, 36), 38)\n                    mstore(add(memPtr, 68), \"ERC1967: new admin is the zero a\")\n                    mstore(add(memPtr, 100), \"ddress\")\n                    revert(memPtr, 132)\n                }\n                sstore(/** @src 4:3656:3722  \"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\" */ _3, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(_4, shl(160, 0xffffffffffffffffffffffff)), _2))\n                /// @src 8:6894:6903  \"return \\\"\\\"\"\n                var__mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ allocate_memory_array_string()\n            }\n            /// @ast-id 950 @src 8:6985:7240  \"function _dispatchUpgradeTo() private returns (bytes memory) {...\"\n            function fun_dispatchUpgradeTo() -> var_mpos\n            {\n                /// @src 8:7032:7044  \"bytes memory\"\n                fun_requireZeroValue()\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 8:7134:7135  \"4\" */ 0x04, /** @src 8:7125:7133  \"msg.data\" */ calldatasize())\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 8:7125:7133  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := and(/** @src 8:7114:7149  \"abi.decode(msg.data[4:], (address))\" */ abi_decode_tuple_address_payable(/** @src 8:7125:7133  \"msg.data\" */ calldatasize()), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1))\n                let memPtr := mload(64)\n                finalize_allocation_3974(memPtr)\n                mstore(memPtr, /** @src 8:7125:7133  \"msg.data\" */ 0)\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(_1))\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, /** @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr_1, /** @src 8:7134:7135  \"4\" */ 0x04), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 0x20)\n                    mstore(add(memPtr_1, 36), 45)\n                    mstore(add(memPtr_1, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr_1, 100), \"ot a contract\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _2 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                sstore(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n                log2(/** @src 8:7125:7133  \"msg.data\" */ 0, 0, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n                /// @src 4:2208:2223  \"data.length > 0\"\n                let _3 := iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ memPtr))\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_3)\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                if _3\n                {\n                    expr := /** @src 8:7125:7133  \"msg.data\" */ 0\n                }\n                /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                if expr\n                {\n                    /// @src 9:6788:6865  \"functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\")\"\n                    pop(fun_functionDelegateCall(/** @src 4:2252:2305  \"Address.functionDelegateCall(newImplementation, data)\" */ _1, memPtr, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398()))\n                }\n                let memPtr_2 := mload(64)\n                finalize_allocation_3975(memPtr_2)\n                mstore(memPtr_2, /** @src 8:7125:7133  \"msg.data\" */ 0)\n                /// @src 8:7224:7233  \"return \\\"\\\"\"\n                var_mpos := memPtr_2\n            }\n            /// @ast-id 279 @src 4:2057:2322  \"function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {...\"\n            function fun_upgradeToAndCall(var_newImplementation, var_data_mpos)\n            {\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if /** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(var_newImplementation))\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 45)\n                    mstore(add(memPtr, 68), \"ERC1967: new implementation is n\")\n                    mstore(add(memPtr, 100), \"ot a contract\")\n                    revert(memPtr, 132)\n                }\n                let _1 := and(var_newImplementation, sub(shl(160, 1), 1))\n                /// @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"\n                let _2 := 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                sstore(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ or(and(sload(/** @src 4:1030:1096  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ _2), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                /// @src 4:1889:1916  \"Upgraded(newImplementation)\"\n                log2(/** @src -1:-1:-1 */ 0, 0, /** @src 4:1889:1916  \"Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _1)\n                /// @src 4:2208:2223  \"data.length > 0\"\n                let _3 := iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 4:2208:2219  \"data.length\" */ var_data_mpos))\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                let expr := /** @src 4:2208:2223  \"data.length > 0\" */ iszero(_3)\n                /// @src 4:2208:2236  \"data.length > 0 || forceCall\"\n                if _3\n                {\n                    expr := /** @src 8:7746:7750  \"true\" */ 0x01\n                }\n                /// @src 4:2204:2316  \"if (data.length > 0 || forceCall) {...\"\n                if expr\n                {\n                    /// @src 9:6788:6865  \"functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\")\"\n                    pop(fun_functionDelegateCall(/** @src 4:2252:2305  \"Address.functionDelegateCall(newImplementation, data)\" */ var_newImplementation, var_data_mpos, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398()))\n                }\n            }\n            /// @ast-id 982 @src 8:7524:7778  \"function _dispatchUpgradeToAndCall() private returns (bytes memory) {...\"\n            function fun_dispatchUpgradeToAndCall() -> var_954_mpos\n            {\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if gt(/** @src 8:7671:7672  \"4\" */ 0x04, /** @src 8:7662:7670  \"msg.data\" */ calldatasize())\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 8:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if slt(add(/** @src 8:7662:7670  \"msg.data\" */ calldatasize(), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ not(3)), 64)\n                {\n                    revert(/** @src 8:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let value0 := abi_decode_address_payable()\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src 8:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if iszero(slt(add(offset, 35), /** @src 8:7662:7670  \"msg.data\" */ calldatasize()))\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 8:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                let _1 := calldataload(add(/** @src 8:7671:7672  \"4\" */ 0x04, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ offset))\n                let _2 := array_allocation_size_string(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 36), /** @src 8:7662:7670  \"msg.data\" */ calldatasize())\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 8:7662:7670  \"msg.data\" */ 0, 0)\n                }\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                calldatacopy(add(memPtr, 32), add(offset, 36), _1)\n                mstore(add(add(memPtr, _1), 32), /** @src 8:7662:7670  \"msg.data\" */ 0)\n                /// @src 8:7746:7750  \"true\"\n                fun_upgradeToAndCall(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(/** @src 8:7602:7693  \"(address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes))\" */ value0, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ sub(shl(160, 1), 1)), /** @src 8:7746:7750  \"true\" */ memPtr)\n                /// @src 8:7762:7771  \"return \\\"\\\"\"\n                var_954_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ allocate_memory_array_string()\n            }\n            /// @ast-id 1004 @src 8:8261:8338  \"function _requireZeroValue() private {...\"\n            function fun_requireZeroValue()\n            {\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                if iszero(/** @src 8:8316:8330  \"msg.value == 0\" */ iszero(/** @src 8:8316:8325  \"msg.value\" */ callvalue()))\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                {\n                    revert(/** @src 8:8329:8330  \"0\" */ 0x00, 0x00)\n                }\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_3976(memPtr_1)\n                mstore(memPtr_1, 39)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"Address: low-level delegate call\")\n                mstore(add(memPtr_1, 64), \" failed\")\n            }\n            /// @ast-id 1251 @src 9:7058:7383  \"function functionDelegateCall(...\"\n            function fun_functionDelegateCall(var_target, var_data_1227_mpos, var_errorMessage_1229_mpos) -> var_1232_mpos\n            {\n                /// @src 9:7265:7290  \"target.delegatecall(data)\"\n                let expr_component := delegatecall(gas(), var_target, add(var_data_1227_mpos, 0x20), mload(var_data_1227_mpos), 0, 0)\n                let data := 0\n                /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let _2 := array_allocation_size_string(_1)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, _2)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, /** @src 9:7265:7290  \"target.delegatecall(data)\" */ 0x20), 0, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ returndatasize())\n                }\n                /// @src 9:7300:7376  \"return verifyCallResultFromTarget(target, success, returndata, errorMessage)\"\n                var_1232_mpos := /** @src 9:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ fun_verifyCallResultFromTarget(var_target, expr_component, /** @src 9:7265:7290  \"target.delegatecall(data)\" */ data, /** @src 9:7307:7376  \"verifyCallResultFromTarget(target, success, returndata, errorMessage)\" */ var_errorMessage_1229_mpos)\n            }\n            /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n            function require_helper_stringliteral_cc2e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, /** @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                    /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Address: call to non-contract\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 1290 @src 9:7671:8299  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos, var_errorMessage_mpos) -> var_1263_mpos\n            {\n                /// @src 9:7851:7863  \"bytes memory\"\n                var_1263_mpos := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 96\n                /// @src 9:7875:8293  \"if (success) {...\"\n                switch var_success\n                case 0 {\n                    /// @src 9:8976:9355  \"if (returndata.length > 0) {...\"\n                    switch /** @src 9:8980:9001  \"returndata.length > 0\" */ iszero(iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 9:8980:8997  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 9:8976:9355  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 9:9324:9344  \"revert(errorMessage)\"\n                        let _1 := /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(64)\n                        /// @src 9:9324:9344  \"revert(errorMessage)\"\n                        mstore(_1, /** @src 8:5266:5342  \"revert(\\\"TransparentUpgradeableProxy: admin cannot fallback to proxy target\\\")\" */ shl(229, 4594637))\n                        /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                        let _2 := 32\n                        mstore(/** @src 9:9324:9344  \"revert(errorMessage)\" */ add(_1, 4), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ _2)\n                        let length := mload(var_errorMessage_mpos)\n                        mstore(add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 36), length)\n                        let i := /** @src 9:9000:9001  \"0\" */ 0x00\n                        /// @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\"\n                        for { } lt(i, length) { i := add(i, _2) }\n                        {\n                            mstore(add(add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ i), 68), mload(add(add(var_errorMessage_mpos, i), _2)))\n                        }\n                        mstore(add(add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ length), 68), /** @src 9:9000:9001  \"0\" */ 0x00)\n                        /// @src 9:9324:9344  \"revert(errorMessage)\"\n                        revert(_1, add(sub(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ add(/** @src 9:9324:9344  \"revert(errorMessage)\" */ _1, /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ and(add(length, 31), not(31))), /** @src 9:9324:9344  \"revert(errorMessage)\" */ _1), /** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ 68))\n                    }\n                    default /// @src 9:8976:9355  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 9:9152:9294  \"assembly {...\"\n                        revert(add(32, var_returndata_mpos), mload(var_returndata_mpos))\n                    }\n                }\n                default /// @src 9:7875:8293  \"if (success) {...\"\n                {\n                    /// @src 9:7902:8188  \"if (returndata.length == 0) {...\"\n                    if /** @src 9:7906:7928  \"returndata.length == 0\" */ iszero(/** @src 8:3389:8340  \"contract TransparentUpgradeableProxy is ERC1967Proxy {...\" */ mload(/** @src 9:7906:7923  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 9:7902:8188  \"if (returndata.length == 0) {...\"\n                    {\n                        /// @src 9:8113:8173  \"require(isContract(target), \\\"Address: call to non-contract\\\")\"\n                        require_helper_stringliteral_cc2e(/** @src 9:1702:1725  \"account.code.length > 0\" */ iszero(iszero(/** @src 9:1702:1721  \"account.code.length\" */ extcodesize(/** @src 9:8121:8139  \"isContract(target)\" */ var_target))))\n                    }\n                    /// @src 9:8201:8218  \"return returndata\"\n                    var_1263_mpos := var_returndata_mpos\n                    leave\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212203423fcc48402a9c18f015f8a51220bd730a68b5b7313c779470ea26217f9f00f64736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000157713dd5e888b87dba361264c2ecd697fde5a316345da8d7188de17ce0",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "Address": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"Address.sol:Address\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000001434a78b4ef4200d60805b6a7b1edc0cce9cc7c61f9b7ff803a7069d4f1a344e"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 9:\"node_modules/@openzeppelin/contracts/utils/Address.sol\"\nobject \"Address_1335\" {\n    code {\n        {\n            /// @src 9:194:9363  \"library Address {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Address_1335_deployed\")\n            codecopy(_1, dataoffset(\"Address_1335_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 9:\"node_modules/@openzeppelin/contracts/utils/Address.sol\"\n    object \"Address_1335_deployed\" {\n        code {\n            {\n                /// @src 9:194:9363  \"library Address {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212204961be739cdadcf8d7cb104d1bd6b87f08f76a284e8f0429ea51d392cbd69cf864736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000070d090b64a9399a5c5d7e6ae87bf58efc78e325b96cb11437c80f2761",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "Context": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "StorageSlot": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"StorageSlot.sol:StorageSlot\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000003233bdefee1a94d8ba1de7fcba9c3c8c39cbd1e0cef7731b7de82af0065b4114"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 11:\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\"\nobject \"StorageSlot_1475\" {\n    code {\n        {\n            /// @src 11:1420:4105  \"library StorageSlot {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"StorageSlot_1475_deployed\")\n            codecopy(_1, dataoffset(\"StorageSlot_1475_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 11:\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\"\n    object \"StorageSlot_1475_deployed\" {\n        code {\n            {\n                /// @src 11:1420:4105  \"library StorageSlot {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122041fb550a35f06d98872349bf59ac9e0e76372c50f74f7096516e4d16081699ff64736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000078eb444125378a0e7b0b729376ad575bda7a97d0140ee4c65bab35193",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "exportedSymbols": {
          "Context": [
            1365
          ],
          "Ownable": [
            112
          ]
        },
        "id": 113,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "102:23:0"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 2,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 113,
            "sourceUnit": 1366,
            "src": "127:30:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 4,
                  "name": "Context",
                  "nameLocations": [
                    "683:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1365,
                  "src": "683:7:0"
                },
                "id": 5,
                "nodeType": "InheritanceSpecifier",
                "src": "683:7:0"
              }
            ],
            "canonicalName": "Ownable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "159:494:0",
              "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
            },
            "fullyImplemented": true,
            "id": 112,
            "linearizedBaseContracts": [
              112,
              1365
            ],
            "name": "Ownable",
            "nameLocation": "672:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "713:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 112,
                "src": "697:22:0",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "697:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 13,
                "name": "OwnershipTransferred",
                "nameLocation": "732:20:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 12,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 9,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "769:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 13,
                      "src": "753:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "800:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 13,
                      "src": "784:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "784:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "752:57:0"
                },
                "src": "726:84:0"
              },
              {
                "body": {
                  "id": 22,
                  "nodeType": "Block",
                  "src": "926:49:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 18,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1347,
                              "src": "955:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 19,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "955:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "936:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 20,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "936:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 21,
                      "nodeType": "ExpressionStatement",
                      "src": "936:32:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 14,
                  "nodeType": "StructuredDocumentation",
                  "src": "816:91:0",
                  "text": " @dev Initializes the contract setting the deployer as the initial owner."
                },
                "id": 23,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 15,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "923:2:0"
                },
                "returnParameters": {
                  "id": 16,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "926:0:0"
                },
                "scope": 112,
                "src": "912:63:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 30,
                  "nodeType": "Block",
                  "src": "1084:41:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 26,
                          "name": "_checkOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "1094:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1094:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 28,
                      "nodeType": "ExpressionStatement",
                      "src": "1094:13:0"
                    },
                    {
                      "id": 29,
                      "nodeType": "PlaceholderStatement",
                      "src": "1117:1:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 24,
                  "nodeType": "StructuredDocumentation",
                  "src": "981:77:0",
                  "text": " @dev Throws if called by any account other than the owner."
                },
                "id": 31,
                "name": "onlyOwner",
                "nameLocation": "1072:9:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 25,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1081:2:0"
                },
                "src": "1063:62:0",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 39,
                  "nodeType": "Block",
                  "src": "1256:30:0",
                  "statements": [
                    {
                      "expression": {
                        "id": 37,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "1273:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 36,
                      "id": 38,
                      "nodeType": "Return",
                      "src": "1266:13:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 32,
                  "nodeType": "StructuredDocumentation",
                  "src": "1131:65:0",
                  "text": " @dev Returns the address of the current owner."
                },
                "functionSelector": "8da5cb5b",
                "id": 40,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1210:5:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1215:2:0"
                },
                "returnParameters": {
                  "id": 36,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 40,
                      "src": "1247:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1246:9:0"
                },
                "scope": 112,
                "src": "1201:85:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 53,
                  "nodeType": "Block",
                  "src": "1404:85:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 49,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 45,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1422:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 46,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1422:7:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 47,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1347,
                                "src": "1433:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 48,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1433:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1422:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1447:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 44,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1414:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1414:68:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 52,
                      "nodeType": "ExpressionStatement",
                      "src": "1414:68:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 41,
                  "nodeType": "StructuredDocumentation",
                  "src": "1292:62:0",
                  "text": " @dev Throws if the sender is not the owner."
                },
                "id": 54,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_checkOwner",
                "nameLocation": "1368:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 42,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1379:2:0"
                },
                "returnParameters": {
                  "id": 43,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1404:0:0"
                },
                "scope": 112,
                "src": "1359:130:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 67,
                  "nodeType": "Block",
                  "src": "1878:47:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 63,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1915:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1907:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 61,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1907:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1907:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 60,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "1888:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 66,
                      "nodeType": "ExpressionStatement",
                      "src": "1888:30:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 55,
                  "nodeType": "StructuredDocumentation",
                  "src": "1495:324:0",
                  "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                },
                "functionSelector": "715018a6",
                "id": 68,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 58,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 57,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1868:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "1868:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1868:9:0"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "1833:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 56,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1850:2:0"
                },
                "returnParameters": {
                  "id": 59,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1878:0:0"
                },
                "scope": 112,
                "src": "1824:101:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 90,
                  "nodeType": "Block",
                  "src": "2144:128:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 77,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2162:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 80,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2182:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2174:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 78,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2174:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 81,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2174:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2162:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                            "id": 83,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            },
                            "value": "Ownable: new owner is the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            }
                          ],
                          "id": 76,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2154:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2154:73:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 85,
                      "nodeType": "ExpressionStatement",
                      "src": "2154:73:0"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 87,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "2256:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "2237:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2237:28:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 89,
                      "nodeType": "ExpressionStatement",
                      "src": "2237:28:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 69,
                  "nodeType": "StructuredDocumentation",
                  "src": "1931:138:0",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                },
                "functionSelector": "f2fde38b",
                "id": 91,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 74,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 73,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2134:9:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "2134:9:0"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2134:9:0"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "2083:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 72,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2109:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "2101:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2101:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2100:18:0"
                },
                "returnParameters": {
                  "id": 75,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2144:0:0"
                },
                "scope": 112,
                "src": "2074:198:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 110,
                  "nodeType": "Block",
                  "src": "2489:124:0",
                  "statements": [
                    {
                      "assignments": [
                        98
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 98,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "2507:8:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 110,
                          "src": "2499:16:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 97,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2499:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 100,
                      "initialValue": {
                        "id": 99,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2518:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2499:25:0"
                    },
                    {
                      "expression": {
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 101,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "2534:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 102,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "2543:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2534:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 104,
                      "nodeType": "ExpressionStatement",
                      "src": "2534:17:0"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 106,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2587:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 107,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2597:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 105,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "2566:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2566:40:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 109,
                      "nodeType": "EmitStatement",
                      "src": "2561:45:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 92,
                  "nodeType": "StructuredDocumentation",
                  "src": "2278:143:0",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                },
                "id": 111,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "2435:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 95,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2462:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 111,
                      "src": "2454:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2454:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2453:18:0"
                },
                "returnParameters": {
                  "id": 96,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2489:0:0"
                },
                "scope": 112,
                "src": "2426:187:0",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 113,
            "src": "654:1961:0",
            "usedErrors": []
          }
        ],
        "src": "102:2514:0"
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
        "exportedSymbols": {
          "IERC1967": [
            133
          ]
        },
        "id": 134,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 114,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "107:23:1"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC1967",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 115,
              "nodeType": "StructuredDocumentation",
              "src": "132:133:1",
              "text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
            },
            "fullyImplemented": true,
            "id": 133,
            "linearizedBaseContracts": [
              133
            ],
            "name": "IERC1967",
            "nameLocation": "276:8:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": {
                  "id": 116,
                  "nodeType": "StructuredDocumentation",
                  "src": "291:68:1",
                  "text": " @dev Emitted when the implementation is upgraded."
                },
                "eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                "id": 120,
                "name": "Upgraded",
                "nameLocation": "370:8:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 119,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 118,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nameLocation": "395:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "379:30:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "379:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "378:32:1"
                },
                "src": "364:47:1"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 121,
                  "nodeType": "StructuredDocumentation",
                  "src": "417:67:1",
                  "text": " @dev Emitted when the admin account has changed."
                },
                "eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
                "id": 127,
                "name": "AdminChanged",
                "nameLocation": "495:12:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 126,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 123,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "previousAdmin",
                      "nameLocation": "516:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "508:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 122,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "508:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 125,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "newAdmin",
                      "nameLocation": "539:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 127,
                      "src": "531:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 124,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "531:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "507:41:1"
                },
                "src": "489:60:1"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 128,
                  "nodeType": "StructuredDocumentation",
                  "src": "555:59:1",
                  "text": " @dev Emitted when the beacon is changed."
                },
                "eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
                "id": 132,
                "name": "BeaconUpgraded",
                "nameLocation": "625:14:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 131,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 130,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "beacon",
                      "nameLocation": "656:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 132,
                      "src": "640:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "640:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "639:24:1"
                },
                "src": "619:45:1"
              }
            ],
            "scope": 134,
            "src": "266:400:1",
            "usedErrors": []
          }
        ],
        "src": "107:560:1"
      }
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
        "exportedSymbols": {
          "IERC1822Proxiable": [
            143
          ]
        },
        "id": 144,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 135,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "113:23:2"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC1822Proxiable",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 136,
              "nodeType": "StructuredDocumentation",
              "src": "138:203:2",
              "text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
            },
            "fullyImplemented": false,
            "id": 143,
            "linearizedBaseContracts": [
              143
            ],
            "name": "IERC1822Proxiable",
            "nameLocation": "352:17:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 137,
                  "nodeType": "StructuredDocumentation",
                  "src": "376:438:2",
                  "text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
                },
                "functionSelector": "52d1902d",
                "id": 142,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "proxiableUUID",
                "nameLocation": "828:13:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 138,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "841:2:2"
                },
                "returnParameters": {
                  "id": 141,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 140,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 142,
                      "src": "867:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "867:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "866:9:2"
                },
                "scope": 143,
                "src": "819:57:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 144,
            "src": "342:536:2",
            "usedErrors": []
          }
        ],
        "src": "113:766:2"
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "exportedSymbols": {
          "Address": [
            1335
          ],
          "ERC1967Proxy": [
            180
          ],
          "ERC1967Upgrade": [
            484
          ],
          "IBeacon": [
            546
          ],
          "IERC1822Proxiable": [
            143
          ],
          "IERC1967": [
            133
          ],
          "Proxy": [
            536
          ],
          "StorageSlot": [
            1475
          ]
        },
        "id": 181,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 145,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "114:23:3"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
            "file": "../Proxy.sol",
            "id": 146,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 181,
            "sourceUnit": 537,
            "src": "139:22:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
            "file": "./ERC1967Upgrade.sol",
            "id": 147,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 181,
            "sourceUnit": 485,
            "src": "162:30:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 149,
                  "name": "Proxy",
                  "nameLocations": [
                    "592:5:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 536,
                  "src": "592:5:3"
                },
                "id": 150,
                "nodeType": "InheritanceSpecifier",
                "src": "592:5:3"
              },
              {
                "baseName": {
                  "id": 151,
                  "name": "ERC1967Upgrade",
                  "nameLocations": [
                    "599:14:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 484,
                  "src": "599:14:3"
                },
                "id": 152,
                "nodeType": "InheritanceSpecifier",
                "src": "599:14:3"
              }
            ],
            "canonicalName": "ERC1967Proxy",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "194:372:3",
              "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
            },
            "fullyImplemented": true,
            "id": 180,
            "linearizedBaseContracts": [
              180,
              484,
              133,
              536
            ],
            "name": "ERC1967Proxy",
            "nameLocation": "576:12:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 166,
                  "nodeType": "Block",
                  "src": "1014:56:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 161,
                            "name": "_logic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 155,
                            "src": "1042:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 162,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "1050:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 163,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1057:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 160,
                          "name": "_upgradeToAndCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "1024:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                            "typeString": "function (address,bytes memory,bool)"
                          }
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1024:39:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 165,
                      "nodeType": "ExpressionStatement",
                      "src": "1024:39:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 153,
                  "nodeType": "StructuredDocumentation",
                  "src": "620:333:3",
                  "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializing the storage of the proxy like a Solidity constructor."
                },
                "id": 167,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 158,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 155,
                      "mutability": "mutable",
                      "name": "_logic",
                      "nameLocation": "978:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "970:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 154,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "970:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 157,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "999:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 167,
                      "src": "986:18:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "986:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "969:36:3"
                },
                "returnParameters": {
                  "id": 159,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1014:0:3"
                },
                "scope": 180,
                "src": "958:112:3",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  501
                ],
                "body": {
                  "id": 178,
                  "nodeType": "Block",
                  "src": "1229:59:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 174,
                            "name": "ERC1967Upgrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "1246:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$484_$",
                              "typeString": "type(contract ERC1967Upgrade)"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1261:18:3",
                          "memberName": "_getImplementation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 210,
                          "src": "1246:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1246:35:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 173,
                      "id": 177,
                      "nodeType": "Return",
                      "src": "1239:42:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 168,
                  "nodeType": "StructuredDocumentation",
                  "src": "1076:67:3",
                  "text": " @dev Returns the current implementation address."
                },
                "id": 179,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_implementation",
                "nameLocation": "1157:15:3",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 170,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1197:8:3"
                },
                "parameters": {
                  "id": 169,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1172:2:3"
                },
                "returnParameters": {
                  "id": 173,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "impl",
                      "nameLocation": "1223:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 179,
                      "src": "1215:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1215:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1214:14:3"
                },
                "scope": 180,
                "src": "1148:140:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 181,
            "src": "567:723:3",
            "usedErrors": []
          }
        ],
        "src": "114:1177:3"
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
      "id": 4,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
        "exportedSymbols": {
          "Address": [
            1335
          ],
          "ERC1967Upgrade": [
            484
          ],
          "IBeacon": [
            546
          ],
          "IERC1822Proxiable": [
            143
          ],
          "IERC1967": [
            133
          ],
          "StorageSlot": [
            1475
          ]
        },
        "id": 485,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 182,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "116:23:4"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
            "file": "../beacon/IBeacon.sol",
            "id": 183,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 485,
            "sourceUnit": 547,
            "src": "141:31:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol",
            "file": "../../interfaces/IERC1967.sol",
            "id": 184,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 485,
            "sourceUnit": 134,
            "src": "173:39:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
            "file": "../../interfaces/draft-IERC1822.sol",
            "id": 185,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 485,
            "sourceUnit": 144,
            "src": "213:45:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
            "file": "../../utils/Address.sol",
            "id": 186,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 485,
            "sourceUnit": 1336,
            "src": "259:33:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
            "file": "../../utils/StorageSlot.sol",
            "id": 187,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 485,
            "sourceUnit": 1476,
            "src": "293:37:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 189,
                  "name": "IERC1967",
                  "nameLocations": [
                    "553:8:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "553:8:4"
                },
                "id": 190,
                "nodeType": "InheritanceSpecifier",
                "src": "553:8:4"
              }
            ],
            "canonicalName": "ERC1967Upgrade",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "332:184:4",
              "text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
            },
            "fullyImplemented": true,
            "id": 484,
            "linearizedBaseContracts": [
              484,
              133
            ],
            "name": "ERC1967Upgrade",
            "nameLocation": "535:14:4",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": true,
                "id": 193,
                "mutability": "constant",
                "name": "_ROLLBACK_SLOT",
                "nameLocation": "672:14:4",
                "nodeType": "VariableDeclaration",
                "scope": 484,
                "src": "647:108:4",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 191,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "647:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": {
                  "hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
                  "id": 192,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "689:66:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
                    "typeString": "int_const 3304...(69 digits omitted)...9347"
                  },
                  "value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
                },
                "visibility": "private"
              },
              {
                "constant": true,
                "documentation": {
                  "id": 194,
                  "nodeType": "StructuredDocumentation",
                  "src": "762:214:4",
                  "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
                },
                "id": 197,
                "mutability": "constant",
                "name": "_IMPLEMENTATION_SLOT",
                "nameLocation": "1007:20:4",
                "nodeType": "VariableDeclaration",
                "scope": 484,
                "src": "981:115:4",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 195,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "981:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": {
                  "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                  "id": 196,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1030:66:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                    "typeString": "int_const 2444...(69 digits omitted)...5612"
                  },
                  "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 209,
                  "nodeType": "Block",
                  "src": "1237:78:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 205,
                              "name": "_IMPLEMENTATION_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "1281:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 203,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "1254:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1266:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1397,
                            "src": "1254:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1371_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1254:48:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1303:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1370,
                        "src": "1254:54:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 202,
                      "id": 208,
                      "nodeType": "Return",
                      "src": "1247:61:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 198,
                  "nodeType": "StructuredDocumentation",
                  "src": "1103:67:4",
                  "text": " @dev Returns the current implementation address."
                },
                "id": 210,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getImplementation",
                "nameLocation": "1184:18:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 199,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1202:2:4"
                },
                "returnParameters": {
                  "id": 202,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 210,
                      "src": "1228:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1228:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1227:9:4"
                },
                "scope": 484,
                "src": "1175:140:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 233,
                  "nodeType": "Block",
                  "src": "1469:196:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 219,
                                "name": "newImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "1506:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 217,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1335,
                                "src": "1487:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$1335_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1495:10:4",
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1023,
                              "src": "1487:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1487:37:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                            "id": 221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1526:47:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
                              "typeString": "literal_string \"ERC1967: new implementation is not a contract\""
                            },
                            "value": "ERC1967: new implementation is not a contract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
                              "typeString": "literal_string \"ERC1967: new implementation is not a contract\""
                            }
                          ],
                          "id": 216,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1479:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1479:95:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 223,
                      "nodeType": "ExpressionStatement",
                      "src": "1479:95:4"
                    },
                    {
                      "expression": {
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 227,
                                "name": "_IMPLEMENTATION_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 197,
                                "src": "1611:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 224,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1475,
                                "src": "1584:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1596:14:4",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1397,
                              "src": "1584:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1371_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1584:48:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 229,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "1633:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1370,
                          "src": "1584:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 230,
                          "name": "newImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "1641:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1584:74:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 232,
                      "nodeType": "ExpressionStatement",
                      "src": "1584:74:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 211,
                  "nodeType": "StructuredDocumentation",
                  "src": "1321:80:4",
                  "text": " @dev Stores a new address in the EIP1967 implementation slot."
                },
                "id": 234,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_setImplementation",
                "nameLocation": "1415:18:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 214,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "newImplementation",
                      "nameLocation": "1442:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 234,
                      "src": "1434:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1434:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1433:27:4"
                },
                "returnParameters": {
                  "id": 215,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1469:0:4"
                },
                "scope": 484,
                "src": "1406:259:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 248,
                  "nodeType": "Block",
                  "src": "1827:96:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 241,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "1856:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 240,
                          "name": "_setImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "1837:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1837:37:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 243,
                      "nodeType": "ExpressionStatement",
                      "src": "1837:37:4"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 245,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 237,
                            "src": "1898:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 244,
                          "name": "Upgraded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1889:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1889:27:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 247,
                      "nodeType": "EmitStatement",
                      "src": "1884:32:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 235,
                  "nodeType": "StructuredDocumentation",
                  "src": "1671:95:4",
                  "text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
                },
                "id": 249,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_upgradeTo",
                "nameLocation": "1780:10:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 238,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "newImplementation",
                      "nameLocation": "1799:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 249,
                      "src": "1791:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1791:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1790:27:4"
                },
                "returnParameters": {
                  "id": 239,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1827:0:4"
                },
                "scope": 484,
                "src": "1771:152:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 278,
                  "nodeType": "Block",
                  "src": "2155:167:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 260,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2176:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 259,
                          "name": "_upgradeTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "2165:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2165:29:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 262,
                      "nodeType": "ExpressionStatement",
                      "src": "2165:29:4"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 263,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 254,
                              "src": "2208:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2213:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2208:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2222:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2208:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 267,
                          "name": "forceCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "2227:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2208:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 277,
                      "nodeType": "IfStatement",
                      "src": "2204:112:4",
                      "trueBody": {
                        "id": 276,
                        "nodeType": "Block",
                        "src": "2238:78:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 272,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 252,
                                  "src": "2281:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 273,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 254,
                                  "src": "2300:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 269,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1335,
                                  "src": "2252:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Address_$1335_$",
                                    "typeString": "type(library Address)"
                                  }
                                },
                                "id": 271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2260:20:4",
                                "memberName": "functionDelegateCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1222,
                                "src": "2252:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bytes memory) returns (bytes memory)"
                                }
                              },
                              "id": 274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2252:53:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 275,
                            "nodeType": "ExpressionStatement",
                            "src": "2252:53:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 250,
                  "nodeType": "StructuredDocumentation",
                  "src": "1929:123:4",
                  "text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
                },
                "id": 279,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_upgradeToAndCall",
                "nameLocation": "2066:17:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 257,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "newImplementation",
                      "nameLocation": "2092:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2084:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2084:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2124:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2111:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2111:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 256,
                      "mutability": "mutable",
                      "name": "forceCall",
                      "nameLocation": "2135:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 279,
                      "src": "2130:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 255,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2130:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2083:62:4"
                },
                "returnParameters": {
                  "id": 258,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2155:0:4"
                },
                "scope": 484,
                "src": "2057:265:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 331,
                  "nodeType": "Block",
                  "src": "2596:820:4",
                  "statements": [
                    {
                      "condition": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 291,
                              "name": "_ROLLBACK_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 193,
                              "src": "2937:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 289,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "2910:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2922:14:4",
                            "memberName": "getBooleanSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1408,
                            "src": "2910:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1374_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2910:42:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BooleanSlot_$1374_storage_ptr",
                            "typeString": "struct StorageSlot.BooleanSlot storage pointer"
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2953:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1373,
                        "src": "2910:48:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 329,
                        "nodeType": "Block",
                        "src": "3028:382:4",
                        "statements": [
                          {
                            "clauses": [
                              {
                                "block": {
                                  "id": 314,
                                  "nodeType": "Block",
                                  "src": "3122:115:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            "id": 310,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 308,
                                              "name": "slot",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 305,
                                              "src": "3148:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                              "id": 309,
                                              "name": "_IMPLEMENTATION_SLOT",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 197,
                                              "src": "3156:20:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            "src": "3148:28:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          {
                                            "hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
                                            "id": 311,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3178:43:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
                                              "typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
                                            },
                                            "value": "ERC1967Upgrade: unsupported proxiableUUID"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
                                              "typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
                                            }
                                          ],
                                          "id": 307,
                                          "name": "require",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -18,
                                            -18
                                          ],
                                          "referencedDeclaration": -18,
                                          "src": "3140:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (bool,string memory) pure"
                                          }
                                        },
                                        "id": 312,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3140:82:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 313,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3140:82:4"
                                    }
                                  ]
                                },
                                "errorName": "",
                                "id": 315,
                                "nodeType": "TryCatchClause",
                                "parameters": {
                                  "id": 306,
                                  "nodeType": "ParameterList",
                                  "parameters": [
                                    {
                                      "constant": false,
                                      "id": 305,
                                      "mutability": "mutable",
                                      "name": "slot",
                                      "nameLocation": "3116:4:4",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 315,
                                      "src": "3108:12:4",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      "typeName": {
                                        "id": 304,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3108:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "src": "3107:14:4"
                                },
                                "src": "3099:138:4"
                              },
                              {
                                "block": {
                                  "id": 320,
                                  "nodeType": "Block",
                                  "src": "3244:89:4",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
                                            "id": 317,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3269:48:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
                                              "typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
                                            },
                                            "value": "ERC1967Upgrade: new implementation is not UUPS"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
                                              "typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
                                            }
                                          ],
                                          "id": 316,
                                          "name": "revert",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [
                                            -19,
                                            -19
                                          ],
                                          "referencedDeclaration": -19,
                                          "src": "3262:6:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                            "typeString": "function (string memory) pure"
                                          }
                                        },
                                        "id": 318,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3262:56:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 319,
                                      "nodeType": "ExpressionStatement",
                                      "src": "3262:56:4"
                                    }
                                  ]
                                },
                                "errorName": "",
                                "id": 321,
                                "nodeType": "TryCatchClause",
                                "src": "3238:95:4"
                              }
                            ],
                            "externalCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 300,
                                      "name": "newImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 282,
                                      "src": "3064:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 299,
                                    "name": "IERC1822Proxiable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 143,
                                    "src": "3046:17:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$143_$",
                                      "typeString": "type(contract IERC1822Proxiable)"
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3046:36:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC1822Proxiable_$143",
                                    "typeString": "contract IERC1822Proxiable"
                                  }
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3083:13:4",
                                "memberName": "proxiableUUID",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 142,
                                "src": "3046:50:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                                  "typeString": "function () view external returns (bytes32)"
                                }
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3046:52:4",
                              "tryCall": true,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 322,
                            "nodeType": "TryStatement",
                            "src": "3042:291:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 324,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "3364:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 325,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "3383:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 326,
                                  "name": "forceCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 286,
                                  "src": "3389:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 323,
                                "name": "_upgradeToAndCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "3346:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                                  "typeString": "function (address,bytes memory,bool)"
                                }
                              },
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3346:53:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 328,
                            "nodeType": "ExpressionStatement",
                            "src": "3346:53:4"
                          }
                        ]
                      },
                      "id": 330,
                      "nodeType": "IfStatement",
                      "src": "2906:504:4",
                      "trueBody": {
                        "id": 298,
                        "nodeType": "Block",
                        "src": "2960:62:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 295,
                                  "name": "newImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 282,
                                  "src": "2993:17:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 294,
                                "name": "_setImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 234,
                                "src": "2974:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2974:37:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 297,
                            "nodeType": "ExpressionStatement",
                            "src": "2974:37:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 280,
                  "nodeType": "StructuredDocumentation",
                  "src": "2328:161:4",
                  "text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
                },
                "id": 332,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_upgradeToAndCallUUPS",
                "nameLocation": "2503:21:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 287,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 282,
                      "mutability": "mutable",
                      "name": "newImplementation",
                      "nameLocation": "2533:17:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 332,
                      "src": "2525:25:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 281,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 284,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2565:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 332,
                      "src": "2552:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 283,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2552:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 286,
                      "mutability": "mutable",
                      "name": "forceCall",
                      "nameLocation": "2576:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 332,
                      "src": "2571:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 285,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2571:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2524:62:4"
                },
                "returnParameters": {
                  "id": 288,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2596:0:4"
                },
                "scope": 484,
                "src": "2494:922:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "constant": true,
                "documentation": {
                  "id": 333,
                  "nodeType": "StructuredDocumentation",
                  "src": "3422:189:4",
                  "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
                },
                "id": 336,
                "mutability": "constant",
                "name": "_ADMIN_SLOT",
                "nameLocation": "3642:11:4",
                "nodeType": "VariableDeclaration",
                "scope": 484,
                "src": "3616:106:4",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 334,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "3616:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": {
                  "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                  "id": 335,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3656:66:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                    "typeString": "int_const 8195...(69 digits omitted)...7091"
                  },
                  "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 348,
                  "nodeType": "Block",
                  "src": "3837:69:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 344,
                              "name": "_ADMIN_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 336,
                              "src": "3881:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 342,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "3854:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3866:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1397,
                            "src": "3854:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1371_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3854:39:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3894:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1370,
                        "src": "3854:45:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 341,
                      "id": 347,
                      "nodeType": "Return",
                      "src": "3847:52:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 337,
                  "nodeType": "StructuredDocumentation",
                  "src": "3729:50:4",
                  "text": " @dev Returns the current admin."
                },
                "id": 349,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getAdmin",
                "nameLocation": "3793:9:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 338,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3802:2:4"
                },
                "returnParameters": {
                  "id": 341,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 340,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 349,
                      "src": "3828:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 339,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3828:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3827:9:4"
                },
                "scope": 484,
                "src": "3784:122:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 374,
                  "nodeType": "Block",
                  "src": "4033:156:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 356,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 352,
                              "src": "4051:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4071:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4063:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 357,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4063:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4063:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4051:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4075:40:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
                              "typeString": "literal_string \"ERC1967: new admin is the zero address\""
                            },
                            "value": "ERC1967: new admin is the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
                              "typeString": "literal_string \"ERC1967: new admin is the zero address\""
                            }
                          ],
                          "id": 355,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4043:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4043:73:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 364,
                      "nodeType": "ExpressionStatement",
                      "src": "4043:73:4"
                    },
                    {
                      "expression": {
                        "id": 372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 368,
                                "name": "_ADMIN_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 336,
                                "src": "4153:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 365,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1475,
                                "src": "4126:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4138:14:4",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1397,
                              "src": "4126:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1371_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4126:39:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "4166:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1370,
                          "src": "4126:45:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 371,
                          "name": "newAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 352,
                          "src": "4174:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4126:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 373,
                      "nodeType": "ExpressionStatement",
                      "src": "4126:56:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 350,
                  "nodeType": "StructuredDocumentation",
                  "src": "3912:71:4",
                  "text": " @dev Stores a new address in the EIP1967 admin slot."
                },
                "id": 375,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_setAdmin",
                "nameLocation": "3997:9:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 353,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 352,
                      "mutability": "mutable",
                      "name": "newAdmin",
                      "nameLocation": "4015:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 375,
                      "src": "4007:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 351,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4007:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4006:18:4"
                },
                "returnParameters": {
                  "id": 354,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4033:0:4"
                },
                "scope": 484,
                "src": "3988:201:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 391,
                  "nodeType": "Block",
                  "src": "4349:86:4",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 382,
                              "name": "_getAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "4377:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4377:11:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 384,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "4390:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 381,
                          "name": "AdminChanged",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 127,
                          "src": "4364:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4364:35:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 386,
                      "nodeType": "EmitStatement",
                      "src": "4359:40:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 388,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 378,
                            "src": "4419:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 387,
                          "name": "_setAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 375,
                          "src": "4409:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4409:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 390,
                      "nodeType": "ExpressionStatement",
                      "src": "4409:19:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 376,
                  "nodeType": "StructuredDocumentation",
                  "src": "4195:100:4",
                  "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
                },
                "id": 392,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_changeAdmin",
                "nameLocation": "4309:12:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 379,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 378,
                      "mutability": "mutable",
                      "name": "newAdmin",
                      "nameLocation": "4330:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 392,
                      "src": "4322:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 377,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4322:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4321:18:4"
                },
                "returnParameters": {
                  "id": 380,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4349:0:4"
                },
                "scope": 484,
                "src": "4300:135:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "constant": true,
                "documentation": {
                  "id": 393,
                  "nodeType": "StructuredDocumentation",
                  "src": "4441:232:4",
                  "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
                },
                "id": 396,
                "mutability": "constant",
                "name": "_BEACON_SLOT",
                "nameLocation": "4704:12:4",
                "nodeType": "VariableDeclaration",
                "scope": 484,
                "src": "4678:107:4",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 394,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "4678:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": {
                  "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
                  "id": 395,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4719:66:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                    "typeString": "int_const 7415...(69 digits omitted)...4704"
                  },
                  "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 408,
                  "nodeType": "Block",
                  "src": "4902:70:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 404,
                              "name": "_BEACON_SLOT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "4946:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 402,
                              "name": "StorageSlot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "4919:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                "typeString": "type(library StorageSlot)"
                              }
                            },
                            "id": 403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4931:14:4",
                            "memberName": "getAddressSlot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1397,
                            "src": "4919:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1371_storage_ptr_$",
                              "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4919:40:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot storage pointer"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4960:5:4",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1370,
                        "src": "4919:46:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 401,
                      "id": 407,
                      "nodeType": "Return",
                      "src": "4912:53:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 397,
                  "nodeType": "StructuredDocumentation",
                  "src": "4792:51:4",
                  "text": " @dev Returns the current beacon."
                },
                "id": 409,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getBeacon",
                "nameLocation": "4857:10:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 398,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4867:2:4"
                },
                "returnParameters": {
                  "id": 401,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 400,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "4893:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 399,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4893:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4892:9:4"
                },
                "scope": 484,
                "src": "4848:124:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 444,
                  "nodeType": "Block",
                  "src": "5101:324:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 418,
                                "name": "newBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 412,
                                "src": "5138:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 416,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1335,
                                "src": "5119:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$1335_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5127:10:4",
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1023,
                              "src": "5119:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5119:29:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5150:39:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
                              "typeString": "literal_string \"ERC1967: new beacon is not a contract\""
                            },
                            "value": "ERC1967: new beacon is not a contract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
                              "typeString": "literal_string \"ERC1967: new beacon is not a contract\""
                            }
                          ],
                          "id": 415,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5111:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5111:79:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 422,
                      "nodeType": "ExpressionStatement",
                      "src": "5111:79:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 427,
                                        "name": "newBeacon",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 412,
                                        "src": "5248:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 426,
                                      "name": "IBeacon",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "5240:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IBeacon_$546_$",
                                        "typeString": "type(contract IBeacon)"
                                      }
                                    },
                                    "id": 428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5240:18:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBeacon_$546",
                                      "typeString": "contract IBeacon"
                                    }
                                  },
                                  "id": 429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5259:14:4",
                                  "memberName": "implementation",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 545,
                                  "src": "5240:33:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5240:35:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 424,
                                "name": "Address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1335,
                                "src": "5221:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Address_$1335_$",
                                  "typeString": "type(library Address)"
                                }
                              },
                              "id": 425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5229:10:4",
                              "memberName": "isContract",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1023,
                              "src": "5221:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5221:55:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5290:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
                              "typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
                            },
                            "value": "ERC1967: beacon implementation is not a contract"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
                              "typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
                            }
                          ],
                          "id": 423,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5200:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5200:150:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 434,
                      "nodeType": "ExpressionStatement",
                      "src": "5200:150:4"
                    },
                    {
                      "expression": {
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 438,
                                "name": "_BEACON_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 396,
                                "src": "5387:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 435,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1475,
                                "src": "5360:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$1475_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5372:14:4",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1397,
                              "src": "5360:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1371_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5360:40:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "5401:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1370,
                          "src": "5360:46:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 441,
                          "name": "newBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 412,
                          "src": "5409:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5360:58:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 443,
                      "nodeType": "ExpressionStatement",
                      "src": "5360:58:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 410,
                  "nodeType": "StructuredDocumentation",
                  "src": "4978:71:4",
                  "text": " @dev Stores a new beacon in the EIP1967 beacon slot."
                },
                "id": 445,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_setBeacon",
                "nameLocation": "5063:10:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 413,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 412,
                      "mutability": "mutable",
                      "name": "newBeacon",
                      "nameLocation": "5082:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 445,
                      "src": "5074:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 411,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5074:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5073:19:4"
                },
                "returnParameters": {
                  "id": 414,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5101:0:4"
                },
                "scope": 484,
                "src": "5054:371:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 482,
                  "nodeType": "Block",
                  "src": "5824:217:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 456,
                            "name": "newBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "5845:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 455,
                          "name": "_setBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 445,
                          "src": "5834:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5834:21:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 458,
                      "nodeType": "ExpressionStatement",
                      "src": "5834:21:4"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 460,
                            "name": "newBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "5885:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 459,
                          "name": "BeaconUpgraded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "5870:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5870:25:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 462,
                      "nodeType": "EmitStatement",
                      "src": "5865:30:4"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 463,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "5909:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5914:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5909:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5923:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5909:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 467,
                          "name": "forceCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 452,
                          "src": "5928:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5909:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 481,
                      "nodeType": "IfStatement",
                      "src": "5905:130:4",
                      "trueBody": {
                        "id": 480,
                        "nodeType": "Block",
                        "src": "5939:96:4",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 473,
                                          "name": "newBeacon",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 448,
                                          "src": "5990:9:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 472,
                                        "name": "IBeacon",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 546,
                                        "src": "5982:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IBeacon_$546_$",
                                          "typeString": "type(contract IBeacon)"
                                        }
                                      },
                                      "id": 474,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5982:18:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBeacon_$546",
                                        "typeString": "contract IBeacon"
                                      }
                                    },
                                    "id": 475,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6001:14:4",
                                    "memberName": "implementation",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 545,
                                    "src": "5982:33:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                      "typeString": "function () view external returns (address)"
                                    }
                                  },
                                  "id": 476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5982:35:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 477,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 450,
                                  "src": "6019:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 469,
                                  "name": "Address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1335,
                                  "src": "5953:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Address_$1335_$",
                                    "typeString": "type(library Address)"
                                  }
                                },
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5961:20:4",
                                "memberName": "functionDelegateCall",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1222,
                                "src": "5953:28:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (address,bytes memory) returns (bytes memory)"
                                }
                              },
                              "id": 478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5953:71:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 479,
                            "nodeType": "ExpressionStatement",
                            "src": "5953:71:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 446,
                  "nodeType": "StructuredDocumentation",
                  "src": "5431:292:4",
                  "text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
                },
                "id": 483,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_upgradeBeaconToAndCall",
                "nameLocation": "5737:23:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 453,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 448,
                      "mutability": "mutable",
                      "name": "newBeacon",
                      "nameLocation": "5769:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "5761:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 447,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5761:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5793:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "5780:17:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 449,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5780:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 452,
                      "mutability": "mutable",
                      "name": "forceCall",
                      "nameLocation": "5804:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "5799:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 451,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5799:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5760:54:4"
                },
                "returnParameters": {
                  "id": 454,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5824:0:4"
                },
                "scope": 484,
                "src": "5728:313:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 485,
            "src": "517:5526:4",
            "usedErrors": []
          }
        ],
        "src": "116:5928:4"
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
      "id": 5,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/Proxy.sol",
        "exportedSymbols": {
          "Proxy": [
            536
          ]
        },
        "id": 537,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 486,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "99:23:5"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Proxy",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 487,
              "nodeType": "StructuredDocumentation",
              "src": "124:598:5",
              "text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
            },
            "fullyImplemented": false,
            "id": 536,
            "linearizedBaseContracts": [
              536
            ],
            "name": "Proxy",
            "nameLocation": "741:5:5",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 494,
                  "nodeType": "Block",
                  "src": "1008:835:5",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "1027:810:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1280:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1283:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "calldatasize",
                                    "nodeType": "YulIdentifier",
                                    "src": "1286:12:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1286:14:5"
                                }
                              ],
                              "functionName": {
                                "name": "calldatacopy",
                                "nodeType": "YulIdentifier",
                                "src": "1267:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1267:34:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1267:34:5"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "1428:74:5",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "1455:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1455:5:5"
                                },
                                {
                                  "name": "implementation",
                                  "nodeType": "YulIdentifier",
                                  "src": "1462:14:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1478:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "calldatasize",
                                    "nodeType": "YulIdentifier",
                                    "src": "1481:12:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1481:14:5"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1497:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1500:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "delegatecall",
                                "nodeType": "YulIdentifier",
                                "src": "1442:12:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1442:60:5"
                            },
                            "variables": [
                              {
                                "name": "result",
                                "nodeType": "YulTypedName",
                                "src": "1432:6:5",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1570:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1573:1:5",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "returndatasize",
                                    "nodeType": "YulIdentifier",
                                    "src": "1576:14:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1576:16:5"
                                }
                              ],
                              "functionName": {
                                "name": "returndatacopy",
                                "nodeType": "YulIdentifier",
                                "src": "1555:14:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1555:38:5"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1555:38:5"
                          },
                          {
                            "cases": [
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "1688:59:5",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1713:1:5",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "1716:14:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1716:16:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "revert",
                                          "nodeType": "YulIdentifier",
                                          "src": "1706:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1706:27:5"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "1706:27:5"
                                    }
                                  ]
                                },
                                "nodeType": "YulCase",
                                "src": "1681:66:5",
                                "value": {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1686:1:5",
                                  "type": "",
                                  "value": "0"
                                }
                              },
                              {
                                "body": {
                                  "nodeType": "YulBlock",
                                  "src": "1768:59:5",
                                  "statements": [
                                    {
                                      "expression": {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1793:1:5",
                                            "type": "",
                                            "value": "0"
                                          },
                                          {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "returndatasize",
                                              "nodeType": "YulIdentifier",
                                              "src": "1796:14:5"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1796:16:5"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "return",
                                          "nodeType": "YulIdentifier",
                                          "src": "1786:6:5"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1786:27:5"
                                      },
                                      "nodeType": "YulExpressionStatement",
                                      "src": "1786:27:5"
                                    }
                                  ]
                                },
                                "nodeType": "YulCase",
                                "src": "1760:67:5",
                                "value": "default"
                              }
                            ],
                            "expression": {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "1614:6:5"
                            },
                            "nodeType": "YulSwitch",
                            "src": "1607:220:5"
                          }
                        ]
                      },
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 490,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "1462:14:5",
                          "valueSize": 1
                        }
                      ],
                      "id": 493,
                      "nodeType": "InlineAssembly",
                      "src": "1018:819:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 488,
                  "nodeType": "StructuredDocumentation",
                  "src": "753:190:5",
                  "text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
                },
                "id": 495,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_delegate",
                "nameLocation": "957:9:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 491,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 490,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nameLocation": "975:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "967:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "967:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "966:24:5"
                },
                "returnParameters": {
                  "id": 492,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1008:0:5"
                },
                "scope": 536,
                "src": "948:895:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "documentation": {
                  "id": 496,
                  "nodeType": "StructuredDocumentation",
                  "src": "1849:173:5",
                  "text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."
                },
                "id": 501,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "_implementation",
                "nameLocation": "2036:15:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 497,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2051:2:5"
                },
                "returnParameters": {
                  "id": 500,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 499,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 501,
                      "src": "2085:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 498,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2085:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2084:9:5"
                },
                "scope": 536,
                "src": "2027:67:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 513,
                  "nodeType": "Block",
                  "src": "2360:72:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 505,
                          "name": "_beforeFallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "2370:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2370:17:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 507,
                      "nodeType": "ExpressionStatement",
                      "src": "2370:17:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 509,
                              "name": "_implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 501,
                              "src": "2407:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2407:17:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 508,
                          "name": "_delegate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 495,
                          "src": "2397:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2397:28:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 512,
                      "nodeType": "ExpressionStatement",
                      "src": "2397:28:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 502,
                  "nodeType": "StructuredDocumentation",
                  "src": "2100:217:5",
                  "text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
                },
                "id": 514,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_fallback",
                "nameLocation": "2331:9:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 503,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2340:2:5"
                },
                "returnParameters": {
                  "id": 504,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2360:0:5"
                },
                "scope": 536,
                "src": "2322:110:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 521,
                  "nodeType": "Block",
                  "src": "2665:28:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 518,
                          "name": "_fallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "2675:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2675:11:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 520,
                      "nodeType": "ExpressionStatement",
                      "src": "2675:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 515,
                  "nodeType": "StructuredDocumentation",
                  "src": "2438:186:5",
                  "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
                },
                "id": 522,
                "implemented": true,
                "kind": "fallback",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 516,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2637:2:5"
                },
                "returnParameters": {
                  "id": 517,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2665:0:5"
                },
                "scope": 536,
                "src": "2629:64:5",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 529,
                  "nodeType": "Block",
                  "src": "2888:28:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 526,
                          "name": "_fallback",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "2898:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2898:11:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 528,
                      "nodeType": "ExpressionStatement",
                      "src": "2898:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 523,
                  "nodeType": "StructuredDocumentation",
                  "src": "2699:149:5",
                  "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
                },
                "id": 530,
                "implemented": true,
                "kind": "receive",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 524,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2860:2:5"
                },
                "returnParameters": {
                  "id": 525,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2888:0:5"
                },
                "scope": 536,
                "src": "2853:63:5",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 534,
                  "nodeType": "Block",
                  "src": "3242:2:5",
                  "statements": []
                },
                "documentation": {
                  "id": 531,
                  "nodeType": "StructuredDocumentation",
                  "src": "2922:271:5",
                  "text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."
                },
                "id": 535,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_beforeFallback",
                "nameLocation": "3207:15:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 532,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3222:2:5"
                },
                "returnParameters": {
                  "id": 533,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3242:0:5"
                },
                "scope": 536,
                "src": "3198:46:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 537,
            "src": "723:2523:5",
            "usedErrors": []
          }
        ],
        "src": "99:3148:5"
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "id": 6,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "exportedSymbols": {
          "IBeacon": [
            546
          ]
        },
        "id": 547,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 538,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "93:23:6"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IBeacon",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 539,
              "nodeType": "StructuredDocumentation",
              "src": "118:79:6",
              "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
            },
            "fullyImplemented": false,
            "id": 546,
            "linearizedBaseContracts": [
              546
            ],
            "name": "IBeacon",
            "nameLocation": "208:7:6",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 540,
                  "nodeType": "StructuredDocumentation",
                  "src": "222:162:6",
                  "text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
                },
                "functionSelector": "5c60da1b",
                "id": 545,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "implementation",
                "nameLocation": "398:14:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 541,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "412:2:6"
                },
                "returnParameters": {
                  "id": 544,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 543,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 545,
                      "src": "438:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 542,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "438:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "437:9:6"
                },
                "scope": 546,
                "src": "389:58:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 547,
            "src": "198:251:6",
            "usedErrors": []
          }
        ],
        "src": "93:357:6"
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
      "id": 7,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
        "exportedSymbols": {
          "Address": [
            1335
          ],
          "Context": [
            1365
          ],
          "ERC1967Proxy": [
            180
          ],
          "ERC1967Upgrade": [
            484
          ],
          "IBeacon": [
            546
          ],
          "IERC1822Proxiable": [
            143
          ],
          "IERC1967": [
            133
          ],
          "ITransparentUpgradeableProxy": [
            716
          ],
          "Ownable": [
            112
          ],
          "Proxy": [
            536
          ],
          "ProxyAdmin": [
            682
          ],
          "StorageSlot": [
            1475
          ],
          "TransparentUpgradeableProxy": [
            1005
          ]
        },
        "id": 683,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 548,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "116:23:7"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
            "file": "./TransparentUpgradeableProxy.sol",
            "id": 549,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 683,
            "sourceUnit": 1006,
            "src": "141:43:7",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
            "file": "../../access/Ownable.sol",
            "id": 550,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 683,
            "sourceUnit": 113,
            "src": "185:34:7",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 552,
                  "name": "Ownable",
                  "nameLocations": [
                    "473:7:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "473:7:7"
                },
                "id": 553,
                "nodeType": "InheritanceSpecifier",
                "src": "473:7:7"
              }
            ],
            "canonicalName": "ProxyAdmin",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 551,
              "nodeType": "StructuredDocumentation",
              "src": "221:228:7",
              "text": " @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."
            },
            "fullyImplemented": true,
            "id": 682,
            "linearizedBaseContracts": [
              682,
              112,
              1365
            ],
            "name": "ProxyAdmin",
            "nameLocation": "459:10:7",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 586,
                  "nodeType": "Block",
                  "src": "756:332:7",
                  "statements": [
                    {
                      "assignments": [
                        563,
                        565
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 563,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "929:7:7",
                          "nodeType": "VariableDeclaration",
                          "scope": 586,
                          "src": "924:12:7",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 562,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "924:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 565,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "951:10:7",
                          "nodeType": "VariableDeclaration",
                          "scope": 586,
                          "src": "938:23:7",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 564,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "938:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 573,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "5c60da1b",
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "991:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29",
                              "typeString": "literal_string hex\"5c60da1b\""
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_96a4c6be7716f5be15d118c16bd1d464cb27f01187d0b9218993a5d488a47c29",
                              "typeString": "literal_string hex\"5c60da1b\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 568,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 557,
                                "src": "973:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                                  "typeString": "contract ITransparentUpgradeableProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                                  "typeString": "contract ITransparentUpgradeableProxy"
                                }
                              ],
                              "id": 567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "965:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 566,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "965:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "965:14:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "980:10:7",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "965:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "965:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "923:82:7"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 575,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 563,
                            "src": "1023:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 574,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1015:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 577,
                      "nodeType": "ExpressionStatement",
                      "src": "1015:16:7"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 580,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "1059:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1072:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 581,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1072:7:7",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 583,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1071:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 578,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1048:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1052:6:7",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "1048:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1048:33:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "functionReturnParameters": 561,
                      "id": 585,
                      "nodeType": "Return",
                      "src": "1041:40:7"
                    }
                  ]
                },
                "documentation": {
                  "id": 554,
                  "nodeType": "StructuredDocumentation",
                  "src": "487:158:7",
                  "text": " @dev Returns the current implementation of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."
                },
                "functionSelector": "204e1c7a",
                "id": 587,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getProxyImplementation",
                "nameLocation": "659:22:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 558,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 557,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "711:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 587,
                      "src": "682:34:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                        "typeString": "contract ITransparentUpgradeableProxy"
                      },
                      "typeName": {
                        "id": 556,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 555,
                          "name": "ITransparentUpgradeableProxy",
                          "nameLocations": [
                            "682:28:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 716,
                          "src": "682:28:7"
                        },
                        "referencedDeclaration": 716,
                        "src": "682:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "681:36:7"
                },
                "returnParameters": {
                  "id": 561,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 560,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 587,
                      "src": "747:7:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 559,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "747:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "746:9:7"
                },
                "scope": 682,
                "src": "650:438:7",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 620,
                  "nodeType": "Block",
                  "src": "1345:323:7",
                  "statements": [
                    {
                      "assignments": [
                        597,
                        599
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 597,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "1509:7:7",
                          "nodeType": "VariableDeclaration",
                          "scope": 620,
                          "src": "1504:12:7",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 596,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "1504:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 599,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "1531:10:7",
                          "nodeType": "VariableDeclaration",
                          "scope": 620,
                          "src": "1518:23:7",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 598,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1518:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 607,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "f851a440",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1571:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7",
                              "typeString": "literal_string hex\"f851a440\""
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_cb23cf6c353ccb16f0d92c8e6b5c5b425654e65dd07e2d295b394de4cf15afb7",
                              "typeString": "literal_string hex\"f851a440\""
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 602,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 591,
                                "src": "1553:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                                  "typeString": "contract ITransparentUpgradeableProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                                  "typeString": "contract ITransparentUpgradeableProxy"
                                }
                              ],
                              "id": 601,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1545:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 600,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1545:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1545:14:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1560:10:7",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "1545:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1545:40:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1503:82:7"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 609,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 597,
                            "src": "1603:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 608,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1595:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1595:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 611,
                      "nodeType": "ExpressionStatement",
                      "src": "1595:16:7"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 614,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "1639:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1652:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 615,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1652:7:7",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 617,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1651:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 612,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1628:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1632:6:7",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "1628:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1628:33:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "functionReturnParameters": 595,
                      "id": 619,
                      "nodeType": "Return",
                      "src": "1621:40:7"
                    }
                  ]
                },
                "documentation": {
                  "id": 588,
                  "nodeType": "StructuredDocumentation",
                  "src": "1094:149:7",
                  "text": " @dev Returns the current admin of `proxy`.\n Requirements:\n - This contract must be the admin of `proxy`."
                },
                "functionSelector": "f3b7dead",
                "id": 621,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getProxyAdmin",
                "nameLocation": "1257:13:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 592,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 591,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "1300:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "1271:34:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                        "typeString": "contract ITransparentUpgradeableProxy"
                      },
                      "typeName": {
                        "id": 590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 589,
                          "name": "ITransparentUpgradeableProxy",
                          "nameLocations": [
                            "1271:28:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 716,
                          "src": "1271:28:7"
                        },
                        "referencedDeclaration": 716,
                        "src": "1271:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1270:36:7"
                },
                "returnParameters": {
                  "id": 595,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 594,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 621,
                      "src": "1336:7:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 593,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1336:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1335:9:7"
                },
                "scope": 682,
                "src": "1248:420:7",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 638,
                  "nodeType": "Block",
                  "src": "1947:44:7",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 635,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "1975:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 632,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "1957:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                              "typeString": "contract ITransparentUpgradeableProxy"
                            }
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1963:11:7",
                          "memberName": "changeAdmin",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 703,
                          "src": "1957:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1957:27:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 637,
                      "nodeType": "ExpressionStatement",
                      "src": "1957:27:7"
                    }
                  ]
                },
                "documentation": {
                  "id": 622,
                  "nodeType": "StructuredDocumentation",
                  "src": "1674:163:7",
                  "text": " @dev Changes the admin of `proxy` to `newAdmin`.\n Requirements:\n - This contract must be the current admin of `proxy`."
                },
                "functionSelector": "7eff275e",
                "id": 639,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 630,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 629,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1937:9:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "1937:9:7"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1937:9:7"
                  }
                ],
                "name": "changeProxyAdmin",
                "nameLocation": "1851:16:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 628,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 625,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "1897:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "1868:34:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                        "typeString": "contract ITransparentUpgradeableProxy"
                      },
                      "typeName": {
                        "id": 624,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 623,
                          "name": "ITransparentUpgradeableProxy",
                          "nameLocations": [
                            "1868:28:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 716,
                          "src": "1868:28:7"
                        },
                        "referencedDeclaration": 716,
                        "src": "1868:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 627,
                      "mutability": "mutable",
                      "name": "newAdmin",
                      "nameLocation": "1912:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 639,
                      "src": "1904:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 626,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1904:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1867:54:7"
                },
                "returnParameters": {
                  "id": 631,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1947:0:7"
                },
                "scope": 682,
                "src": "1842:149:7",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 656,
                  "nodeType": "Block",
                  "src": "2298:48:7",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 653,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "2324:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 650,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 643,
                            "src": "2308:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                              "typeString": "contract ITransparentUpgradeableProxy"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2314:9:7",
                          "memberName": "upgradeTo",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 708,
                          "src": "2308:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address) external"
                          }
                        },
                        "id": 654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2308:31:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 655,
                      "nodeType": "ExpressionStatement",
                      "src": "2308:31:7"
                    }
                  ]
                },
                "documentation": {
                  "id": 640,
                  "nodeType": "StructuredDocumentation",
                  "src": "1997:194:7",
                  "text": " @dev Upgrades `proxy` to `implementation`. See {TransparentUpgradeableProxy-upgradeTo}.\n Requirements:\n - This contract must be the admin of `proxy`."
                },
                "functionSelector": "99a88ec4",
                "id": 657,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 648,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 647,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2288:9:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "2288:9:7"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2288:9:7"
                  }
                ],
                "name": "upgrade",
                "nameLocation": "2205:7:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 646,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 643,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "2242:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "2213:34:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                        "typeString": "contract ITransparentUpgradeableProxy"
                      },
                      "typeName": {
                        "id": 642,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 641,
                          "name": "ITransparentUpgradeableProxy",
                          "nameLocations": [
                            "2213:28:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 716,
                          "src": "2213:28:7"
                        },
                        "referencedDeclaration": 716,
                        "src": "2213:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 645,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nameLocation": "2257:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 657,
                      "src": "2249:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2249:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2212:60:7"
                },
                "returnParameters": {
                  "id": 649,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2298:0:7"
                },
                "scope": 682,
                "src": "2196:150:7",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 680,
                  "nodeType": "Block",
                  "src": "2778:79:7",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 676,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "2829:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 677,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "2845:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 670,
                              "name": "proxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 661,
                              "src": "2788:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                                "typeString": "contract ITransparentUpgradeableProxy"
                              }
                            },
                            "id": 672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2794:16:7",
                            "memberName": "upgradeToAndCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 715,
                            "src": "2788:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory) payable external"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "id": 673,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2818:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2822:5:7",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "2818:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "2788:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                            "typeString": "function (address,bytes memory) payable external"
                          }
                        },
                        "id": 678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2788:62:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 679,
                      "nodeType": "ExpressionStatement",
                      "src": "2788:62:7"
                    }
                  ]
                },
                "documentation": {
                  "id": 658,
                  "nodeType": "StructuredDocumentation",
                  "src": "2352:255:7",
                  "text": " @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation. See\n {TransparentUpgradeableProxy-upgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`."
                },
                "functionSelector": "9623609d",
                "id": 681,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 668,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 667,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2768:9:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "2768:9:7"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2768:9:7"
                  }
                ],
                "name": "upgradeAndCall",
                "nameLocation": "2621:14:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 666,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 661,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "2674:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "2645:34:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                        "typeString": "contract ITransparentUpgradeableProxy"
                      },
                      "typeName": {
                        "id": 660,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 659,
                          "name": "ITransparentUpgradeableProxy",
                          "nameLocations": [
                            "2645:28:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 716,
                          "src": "2645:28:7"
                        },
                        "referencedDeclaration": 716,
                        "src": "2645:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$716",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 663,
                      "mutability": "mutable",
                      "name": "implementation",
                      "nameLocation": "2697:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "2689:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 662,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2689:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 665,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2734:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 681,
                      "src": "2721:17:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 664,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2721:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2635:109:7"
                },
                "returnParameters": {
                  "id": 669,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2778:0:7"
                },
                "scope": 682,
                "src": "2612:245:7",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "public"
              }
            ],
            "scope": 683,
            "src": "450:2409:7",
            "usedErrors": []
          }
        ],
        "src": "116:2744:7"
      }
    },
    "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
      "id": 8,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
        "exportedSymbols": {
          "Address": [
            1335
          ],
          "ERC1967Proxy": [
            180
          ],
          "ERC1967Upgrade": [
            484
          ],
          "IBeacon": [
            546
          ],
          "IERC1822Proxiable": [
            143
          ],
          "IERC1967": [
            133
          ],
          "ITransparentUpgradeableProxy": [
            716
          ],
          "Proxy": [
            536
          ],
          "StorageSlot": [
            1475
          ],
          "TransparentUpgradeableProxy": [
            1005
          ]
        },
        "id": 1006,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 684,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "133:23:8"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
            "file": "../ERC1967/ERC1967Proxy.sol",
            "id": 685,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1006,
            "sourceUnit": 181,
            "src": "158:37:8",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 687,
                  "name": "IERC1967",
                  "nameLocations": [
                    "679:8:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "679:8:8"
                },
                "id": 688,
                "nodeType": "InheritanceSpecifier",
                "src": "679:8:8"
              }
            ],
            "canonicalName": "ITransparentUpgradeableProxy",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 686,
              "nodeType": "StructuredDocumentation",
              "src": "197:439:8",
              "text": " @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."
            },
            "fullyImplemented": false,
            "id": 716,
            "linearizedBaseContracts": [
              716,
              133
            ],
            "name": "ITransparentUpgradeableProxy",
            "nameLocation": "647:28:8",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "f851a440",
                "id": 693,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "admin",
                "nameLocation": "703:5:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 689,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "708:2:8"
                },
                "returnParameters": {
                  "id": 692,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 691,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 693,
                      "src": "734:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 690,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "734:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "733:9:8"
                },
                "scope": 716,
                "src": "694:49:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "5c60da1b",
                "id": 698,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "implementation",
                "nameLocation": "758:14:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 694,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "772:2:8"
                },
                "returnParameters": {
                  "id": 697,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 696,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 698,
                      "src": "798:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 695,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "798:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "797:9:8"
                },
                "scope": 716,
                "src": "749:58:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "8f283970",
                "id": 703,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "changeAdmin",
                "nameLocation": "822:11:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 701,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 700,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 703,
                      "src": "834:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 699,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "834:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "833:9:8"
                },
                "returnParameters": {
                  "id": 702,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "851:0:8"
                },
                "scope": 716,
                "src": "813:39:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "3659cfe6",
                "id": 708,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "upgradeTo",
                "nameLocation": "867:9:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 706,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 705,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 708,
                      "src": "877:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 704,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "877:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "876:9:8"
                },
                "returnParameters": {
                  "id": 707,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "894:0:8"
                },
                "scope": 716,
                "src": "858:37:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "4f1ef286",
                "id": 715,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "upgradeToAndCall",
                "nameLocation": "910:16:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 713,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 710,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 715,
                      "src": "927:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "927:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 712,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 715,
                      "src": "936:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 711,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "936:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "926:23:8"
                },
                "returnParameters": {
                  "id": 714,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "966:0:8"
                },
                "scope": 716,
                "src": "901:66:8",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1006,
            "src": "637:332:8",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 718,
                  "name": "ERC1967Proxy",
                  "nameLocations": [
                    "3429:12:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "3429:12:8"
                },
                "id": 719,
                "nodeType": "InheritanceSpecifier",
                "src": "3429:12:8"
              }
            ],
            "canonicalName": "TransparentUpgradeableProxy",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 717,
              "nodeType": "StructuredDocumentation",
              "src": "971:2417:8",
              "text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised."
            },
            "fullyImplemented": true,
            "id": 1005,
            "linearizedBaseContracts": [
              1005,
              180,
              484,
              133,
              536
            ],
            "name": "TransparentUpgradeableProxy",
            "nameLocation": "3398:27:8",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 737,
                  "nodeType": "Block",
                  "src": "3763:37:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 734,
                            "name": "admin_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "3786:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 733,
                          "name": "_changeAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "3773:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3773:20:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 736,
                      "nodeType": "ExpressionStatement",
                      "src": "3773:20:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 720,
                  "nodeType": "StructuredDocumentation",
                  "src": "3448:210:8",
                  "text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
                },
                "id": 738,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "id": 729,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "3748:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 730,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "3756:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 731,
                    "kind": "baseConstructorSpecifier",
                    "modifierName": {
                      "id": 728,
                      "name": "ERC1967Proxy",
                      "nameLocations": [
                        "3735:12:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 180,
                      "src": "3735:12:8"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3735:27:8"
                  }
                ],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 727,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 722,
                      "mutability": "mutable",
                      "name": "_logic",
                      "nameLocation": "3683:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3675:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3675:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "admin_",
                      "nameLocation": "3699:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3691:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3691:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 726,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "3720:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "3707:18:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3707:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3674:52:8"
                },
                "returnParameters": {
                  "id": 732,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3763:0:8"
                },
                "scope": 1005,
                "src": "3663:137:8",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 753,
                  "nodeType": "Block",
                  "src": "4151:115:8",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 741,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4165:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4169:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4165:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 743,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "4179:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4179:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4165:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 751,
                        "nodeType": "Block",
                        "src": "4224:36:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 748,
                                "name": "_fallback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  847
                                ],
                                "referencedDeclaration": 847,
                                "src": "4238:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4238:11:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 750,
                            "nodeType": "ExpressionStatement",
                            "src": "4238:11:8"
                          }
                        ]
                      },
                      "id": 752,
                      "nodeType": "IfStatement",
                      "src": "4161:99:8",
                      "trueBody": {
                        "id": 747,
                        "nodeType": "Block",
                        "src": "4192:26:8",
                        "statements": [
                          {
                            "id": 746,
                            "nodeType": "PlaceholderStatement",
                            "src": "4206:1:8"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 739,
                  "nodeType": "StructuredDocumentation",
                  "src": "3806:321:8",
                  "text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n implementation provides a function with the same selector."
                },
                "id": 754,
                "name": "ifAdmin",
                "nameLocation": "4141:7:8",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 740,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4148:2:8"
                },
                "src": "4132:134:8",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  514
                ],
                "body": {
                  "id": 846,
                  "nodeType": "Block",
                  "src": "4454:1055:8",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 759,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4468:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4472:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4468:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 761,
                            "name": "_getAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "4482:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4482:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4468:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 844,
                        "nodeType": "Block",
                        "src": "5461:42:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 839,
                                  "name": "super",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -25,
                                  "src": "5475:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$1005_$",
                                    "typeString": "type(contract super TransparentUpgradeableProxy)"
                                  }
                                },
                                "id": 841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5481:9:8",
                                "memberName": "_fallback",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 514,
                                "src": "5475:15:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                  "typeString": "function ()"
                                }
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5475:17:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 843,
                            "nodeType": "ExpressionStatement",
                            "src": "5475:17:8"
                          }
                        ]
                      },
                      "id": 845,
                      "nodeType": "IfStatement",
                      "src": "4464:1039:8",
                      "trueBody": {
                        "id": 838,
                        "nodeType": "Block",
                        "src": "4495:960:8",
                        "statements": [
                          {
                            "assignments": [
                              765
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 765,
                                "mutability": "mutable",
                                "name": "ret",
                                "nameLocation": "4522:3:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 838,
                                "src": "4509:16:8",
                                "stateVariable": false,
                                "storageLocation": "memory",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes"
                                },
                                "typeName": {
                                  "id": 764,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4509:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 766,
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4509:16:8"
                          },
                          {
                            "assignments": [
                              768
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 768,
                                "mutability": "mutable",
                                "name": "selector",
                                "nameLocation": "4546:8:8",
                                "nodeType": "VariableDeclaration",
                                "scope": 838,
                                "src": "4539:15:8",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "typeName": {
                                  "id": 767,
                                  "name": "bytes4",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4539:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 771,
                            "initialValue": {
                              "expression": {
                                "id": 769,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4557:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4561:3:8",
                              "memberName": "sig",
                              "nodeType": "MemberAccess",
                              "src": "4557:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4539:25:8"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 772,
                                "name": "selector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 768,
                                "src": "4582:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 773,
                                    "name": "ITransparentUpgradeableProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 716,
                                    "src": "4594:28:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$",
                                      "typeString": "type(contract ITransparentUpgradeableProxy)"
                                    }
                                  },
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4623:9:8",
                                  "memberName": "upgradeTo",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 708,
                                  "src": "4594:38:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function ITransparentUpgradeableProxy.upgradeTo(address)"
                                  }
                                },
                                "id": 775,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4633:8:8",
                                "memberName": "selector",
                                "nodeType": "MemberAccess",
                                "src": "4594:47:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "4582:59:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 783,
                                  "name": "selector",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 768,
                                  "src": "4712:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 784,
                                      "name": "ITransparentUpgradeableProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 716,
                                      "src": "4724:28:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$",
                                        "typeString": "type(contract ITransparentUpgradeableProxy)"
                                      }
                                    },
                                    "id": 785,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "4753:16:8",
                                    "memberName": "upgradeToAndCall",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 715,
                                    "src": "4724:45:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                      "typeString": "function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes memory) payable"
                                    }
                                  },
                                  "id": 786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4770:8:8",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "4724:54:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "4712:66:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "id": 798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 794,
                                    "name": "selector",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "4856:8:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 795,
                                        "name": "ITransparentUpgradeableProxy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 716,
                                        "src": "4868:28:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$",
                                          "typeString": "type(contract ITransparentUpgradeableProxy)"
                                        }
                                      },
                                      "id": 796,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "4897:11:8",
                                      "memberName": "changeAdmin",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 703,
                                      "src": "4868:40:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function ITransparentUpgradeableProxy.changeAdmin(address)"
                                      }
                                    },
                                    "id": 797,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "4909:8:8",
                                    "memberName": "selector",
                                    "nodeType": "MemberAccess",
                                    "src": "4868:49:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "src": "4856:61:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 805,
                                      "name": "selector",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 768,
                                      "src": "4990:8:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 806,
                                          "name": "ITransparentUpgradeableProxy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 716,
                                          "src": "5002:28:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$",
                                            "typeString": "type(contract ITransparentUpgradeableProxy)"
                                          }
                                        },
                                        "id": 807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "5031:5:8",
                                        "memberName": "admin",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 693,
                                        "src": "5002:34:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
                                          "typeString": "function ITransparentUpgradeableProxy.admin() view returns (address)"
                                        }
                                      },
                                      "id": 808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "5037:8:8",
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "5002:43:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "4990:55:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      },
                                      "id": 820,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 816,
                                        "name": "selector",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 768,
                                        "src": "5112:8:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "expression": {
                                          "expression": {
                                            "id": 817,
                                            "name": "ITransparentUpgradeableProxy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 716,
                                            "src": "5124:28:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$716_$",
                                              "typeString": "type(contract ITransparentUpgradeableProxy)"
                                            }
                                          },
                                          "id": 818,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "5153:14:8",
                                          "memberName": "implementation",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 698,
                                          "src": "5124:43:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
                                            "typeString": "function ITransparentUpgradeableProxy.implementation() view returns (address)"
                                          }
                                        },
                                        "id": 819,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "5168:8:8",
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "src": "5124:52:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      "src": "5112:64:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 831,
                                      "nodeType": "Block",
                                      "src": "5248:109:8",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
                                                "id": 828,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "5273:68:8",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                                                  "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                                                },
                                                "value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
                                                  "typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
                                                }
                                              ],
                                              "id": 827,
                                              "name": "revert",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                -19,
                                                -19
                                              ],
                                              "referencedDeclaration": -19,
                                              "src": "5266:6:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) pure"
                                              }
                                            },
                                            "id": 829,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5266:76:8",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 830,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5266:76:8"
                                        }
                                      ]
                                    },
                                    "id": 832,
                                    "nodeType": "IfStatement",
                                    "src": "5108:249:8",
                                    "trueBody": {
                                      "id": 826,
                                      "nodeType": "Block",
                                      "src": "5178:64:8",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 824,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 821,
                                              "name": "ret",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 765,
                                              "src": "5196:3:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 822,
                                                "name": "_dispatchImplementation",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 887,
                                                "src": "5202:23:8",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                                                  "typeString": "function () returns (bytes memory)"
                                                }
                                              },
                                              "id": 823,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5202:25:8",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            },
                                            "src": "5196:31:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "id": 825,
                                          "nodeType": "ExpressionStatement",
                                          "src": "5196:31:8"
                                        }
                                      ]
                                    }
                                  },
                                  "id": 833,
                                  "nodeType": "IfStatement",
                                  "src": "4986:371:8",
                                  "trueBody": {
                                    "id": 815,
                                    "nodeType": "Block",
                                    "src": "5047:55:8",
                                    "statements": [
                                      {
                                        "expression": {
                                          "id": 813,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftHandSide": {
                                            "id": 810,
                                            "name": "ret",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 765,
                                            "src": "5065:3:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "nodeType": "Assignment",
                                          "operator": "=",
                                          "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                              "argumentTypes": [],
                                              "id": 811,
                                              "name": "_dispatchAdmin",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 867,
                                              "src": "5071:14:8",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () returns (bytes memory)"
                                              }
                                            },
                                            "id": 812,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5071:16:8",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "src": "5065:22:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 814,
                                        "nodeType": "ExpressionStatement",
                                        "src": "5065:22:8"
                                      }
                                    ]
                                  }
                                },
                                "id": 834,
                                "nodeType": "IfStatement",
                                "src": "4852:505:8",
                                "trueBody": {
                                  "id": 804,
                                  "nodeType": "Block",
                                  "src": "4919:61:8",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 799,
                                          "name": "ret",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 765,
                                          "src": "4937:3:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 800,
                                            "name": "_dispatchChangeAdmin",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 916,
                                            "src": "4943:20:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () returns (bytes memory)"
                                            }
                                          },
                                          "id": 801,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4943:22:8",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "src": "4937:28:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 803,
                                      "nodeType": "ExpressionStatement",
                                      "src": "4937:28:8"
                                    }
                                  ]
                                }
                              },
                              "id": 835,
                              "nodeType": "IfStatement",
                              "src": "4708:649:8",
                              "trueBody": {
                                "id": 793,
                                "nodeType": "Block",
                                "src": "4780:66:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 791,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 788,
                                        "name": "ret",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "4798:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 789,
                                          "name": "_dispatchUpgradeToAndCall",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 982,
                                          "src": "4804:25:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () returns (bytes memory)"
                                          }
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4804:27:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "src": "4798:33:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 792,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4798:33:8"
                                  }
                                ]
                              }
                            },
                            "id": 836,
                            "nodeType": "IfStatement",
                            "src": "4578:779:8",
                            "trueBody": {
                              "id": 782,
                              "nodeType": "Block",
                              "src": "4643:59:8",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 780,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 777,
                                      "name": "ret",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 765,
                                      "src": "4661:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 778,
                                        "name": "_dispatchUpgradeTo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 950,
                                        "src": "4667:18:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () returns (bytes memory)"
                                        }
                                      },
                                      "id": 779,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4667:20:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "src": "4661:26:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 781,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4661:26:8"
                                }
                              ]
                            }
                          },
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "5379:66:8",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "5408:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5413:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5404:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5404:14:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "5426:3:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "5420:5:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5420:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "5397:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5397:34:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "5397:34:8"
                                }
                              ]
                            },
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 765,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "5408:3:8",
                                "valueSize": 1
                              },
                              {
                                "declaration": 765,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "5426:3:8",
                                "valueSize": 1
                              }
                            ],
                            "id": 837,
                            "nodeType": "InlineAssembly",
                            "src": "5370:75:8"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 755,
                  "nodeType": "StructuredDocumentation",
                  "src": "4272:130:8",
                  "text": " @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior"
                },
                "id": 847,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_fallback",
                "nameLocation": "4416:9:8",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 757,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4445:8:8"
                },
                "parameters": {
                  "id": 756,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4425:2:8"
                },
                "returnParameters": {
                  "id": 758,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4454:0:8"
                },
                "scope": 1005,
                "src": "4407:1102:8",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 866,
                  "nodeType": "Block",
                  "src": "5917:108:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 853,
                          "name": "_requireZeroValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "5927:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5927:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 855,
                      "nodeType": "ExpressionStatement",
                      "src": "5927:19:8"
                    },
                    {
                      "assignments": [
                        857
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 857,
                          "mutability": "mutable",
                          "name": "admin",
                          "nameLocation": "5965:5:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 866,
                          "src": "5957:13:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 856,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5957:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 860,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 858,
                          "name": "_getAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "5973:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5973:11:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5957:27:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 863,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 857,
                            "src": "6012:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 861,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6001:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6005:6:8",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6001:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6001:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 852,
                      "id": 865,
                      "nodeType": "Return",
                      "src": "5994:24:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 848,
                  "nodeType": "StructuredDocumentation",
                  "src": "5515:340:8",
                  "text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
                },
                "id": 867,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_dispatchAdmin",
                "nameLocation": "5869:14:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 849,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5883:2:8"
                },
                "returnParameters": {
                  "id": 852,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 867,
                      "src": "5903:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5903:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5902:14:8"
                },
                "scope": 1005,
                "src": "5860:165:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 886,
                  "nodeType": "Block",
                  "src": "6451:132:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 873,
                          "name": "_requireZeroValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "6461:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6461:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 875,
                      "nodeType": "ExpressionStatement",
                      "src": "6461:19:8"
                    },
                    {
                      "assignments": [
                        877
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 877,
                          "mutability": "mutable",
                          "name": "implementation",
                          "nameLocation": "6499:14:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 886,
                          "src": "6491:22:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 876,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6491:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 880,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 878,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            179
                          ],
                          "referencedDeclaration": 179,
                          "src": "6516:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6516:17:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6491:42:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 883,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 877,
                            "src": "6561:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 881,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6550:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6554:6:8",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6550:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6550:26:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 872,
                      "id": 885,
                      "nodeType": "Return",
                      "src": "6543:33:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 868,
                  "nodeType": "StructuredDocumentation",
                  "src": "6031:349:8",
                  "text": " @dev Returns the current implementation.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
                },
                "id": 887,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_dispatchImplementation",
                "nameLocation": "6394:23:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 869,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6417:2:8"
                },
                "returnParameters": {
                  "id": 872,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 871,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 887,
                      "src": "6437:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 870,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6437:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6436:14:8"
                },
                "scope": 1005,
                "src": "6385:198:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 915,
                  "nodeType": "Block",
                  "src": "6757:153:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 893,
                          "name": "_requireZeroValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "6767:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6767:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 895,
                      "nodeType": "ExpressionStatement",
                      "src": "6767:19:8"
                    },
                    {
                      "assignments": [
                        897
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 897,
                          "mutability": "mutable",
                          "name": "newAdmin",
                          "nameLocation": "6805:8:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 915,
                          "src": "6797:16:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6797:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 908,
                      "initialValue": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 900,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6827:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6831:4:8",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "6827:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "6827:12:8",
                            "startExpression": {
                              "hexValue": "34",
                              "id": 902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6836:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6842:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 904,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6842:7:8",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 906,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6841:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 898,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6816:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6820:6:8",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "6816:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6816:35:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6797:54:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 910,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "6874:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 909,
                          "name": "_changeAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 392,
                          "src": "6861:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6861:22:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 912,
                      "nodeType": "ExpressionStatement",
                      "src": "6861:22:8"
                    },
                    {
                      "expression": {
                        "hexValue": "",
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6901:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      "functionReturnParameters": 892,
                      "id": 914,
                      "nodeType": "Return",
                      "src": "6894:9:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 888,
                  "nodeType": "StructuredDocumentation",
                  "src": "6589:100:8",
                  "text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
                },
                "id": 916,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_dispatchChangeAdmin",
                "nameLocation": "6703:20:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 889,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6723:2:8"
                },
                "returnParameters": {
                  "id": 892,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 891,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 916,
                      "src": "6743:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 890,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6743:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6742:14:8"
                },
                "scope": 1005,
                "src": "6694:216:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 949,
                  "nodeType": "Block",
                  "src": "7046:194:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 922,
                          "name": "_requireZeroValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1004,
                          "src": "7056:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7056:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 924,
                      "nodeType": "ExpressionStatement",
                      "src": "7056:19:8"
                    },
                    {
                      "assignments": [
                        926
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 926,
                          "mutability": "mutable",
                          "name": "newImplementation",
                          "nameLocation": "7094:17:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 949,
                          "src": "7086:25:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 925,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7086:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 937,
                      "initialValue": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 929,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7125:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7129:4:8",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "7125:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "7125:12:8",
                            "startExpression": {
                              "hexValue": "34",
                              "id": 931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7134:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7140:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 933,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7140:7:8",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 935,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7139:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            },
                            {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            }
                          ],
                          "expression": {
                            "id": 927,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7114:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7118:6:8",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "7114:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7114:35:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7086:63:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 939,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "7177:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7202:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7196:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 940,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "7196:5:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7196:9:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "66616c7365",
                            "id": 944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7207:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 938,
                          "name": "_upgradeToAndCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "7159:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                            "typeString": "function (address,bytes memory,bool)"
                          }
                        },
                        "id": 945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7159:54:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 946,
                      "nodeType": "ExpressionStatement",
                      "src": "7159:54:8"
                    },
                    {
                      "expression": {
                        "hexValue": "",
                        "id": 947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7231:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      "functionReturnParameters": 921,
                      "id": 948,
                      "nodeType": "Return",
                      "src": "7224:9:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 917,
                  "nodeType": "StructuredDocumentation",
                  "src": "6916:64:8",
                  "text": " @dev Upgrade the implementation of the proxy."
                },
                "id": 950,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_dispatchUpgradeTo",
                "nameLocation": "6994:18:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 918,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7012:2:8"
                },
                "returnParameters": {
                  "id": 921,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 920,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 950,
                      "src": "7032:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 919,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7032:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7031:14:8"
                },
                "scope": 1005,
                "src": "6985:255:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 981,
                  "nodeType": "Block",
                  "src": "7592:186:8",
                  "statements": [
                    {
                      "assignments": [
                        957,
                        959
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 957,
                          "mutability": "mutable",
                          "name": "newImplementation",
                          "nameLocation": "7611:17:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 981,
                          "src": "7603:25:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 956,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7603:7:8",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 959,
                          "mutability": "mutable",
                          "name": "data",
                          "nameLocation": "7643:4:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 981,
                          "src": "7630:17:8",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 958,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7630:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 972,
                      "initialValue": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 962,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7662:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7666:4:8",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "7662:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexRangeAccess",
                            "src": "7662:12:8",
                            "startExpression": {
                              "hexValue": "34",
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7671:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7677:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 966,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7677:7:8",
                                  "typeDescriptions": {}
                                }
                              },
                              {
                                "id": 969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7686:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 968,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7686:5:8",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 970,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7676:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                              "typeString": "tuple(type(address),type(bytes storage pointer))"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr_slice",
                              "typeString": "bytes calldata slice"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                              "typeString": "tuple(type(address),type(bytes storage pointer))"
                            }
                          ],
                          "expression": {
                            "id": 960,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7651:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7655:6:8",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "7651:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7651:42:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(address payable,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7602:91:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 974,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "7721:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 975,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "7740:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "74727565",
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7746:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 973,
                          "name": "_upgradeToAndCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "7703:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                            "typeString": "function (address,bytes memory,bool)"
                          }
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7703:48:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 978,
                      "nodeType": "ExpressionStatement",
                      "src": "7703:48:8"
                    },
                    {
                      "expression": {
                        "hexValue": "",
                        "id": 979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7769:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      "functionReturnParameters": 955,
                      "id": 980,
                      "nodeType": "Return",
                      "src": "7762:9:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 951,
                  "nodeType": "StructuredDocumentation",
                  "src": "7246:273:8",
                  "text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract."
                },
                "id": 982,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_dispatchUpgradeToAndCall",
                "nameLocation": "7533:25:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 952,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7558:2:8"
                },
                "returnParameters": {
                  "id": 955,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 982,
                      "src": "7578:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7578:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7577:14:8"
                },
                "scope": 1005,
                "src": "7524:254:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 991,
                  "nodeType": "Block",
                  "src": "7989:35:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 988,
                          "name": "_getAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "8006:9:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8006:11:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 987,
                      "id": 990,
                      "nodeType": "Return",
                      "src": "7999:18:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 983,
                  "nodeType": "StructuredDocumentation",
                  "src": "7784:142:8",
                  "text": " @dev Returns the current admin.\n CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead."
                },
                "id": 992,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_admin",
                "nameLocation": "7940:6:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 984,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7946:2:8"
                },
                "returnParameters": {
                  "id": 987,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 986,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 992,
                      "src": "7980:7:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 985,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7980:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7979:9:8"
                },
                "scope": 1005,
                "src": "7931:93:8",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1003,
                  "nodeType": "Block",
                  "src": "8298:40:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 997,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8316:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8320:5:8",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "8316:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8329:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8316:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 996,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8308:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                            "typeString": "function (bool) pure"
                          }
                        },
                        "id": 1001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8308:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1002,
                      "nodeType": "ExpressionStatement",
                      "src": "8308:23:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 993,
                  "nodeType": "StructuredDocumentation",
                  "src": "8030:226:8",
                  "text": " @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n emulate some proxy functions being non-payable while still allowing value to pass through."
                },
                "id": 1004,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_requireZeroValue",
                "nameLocation": "8270:17:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 994,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8287:2:8"
                },
                "returnParameters": {
                  "id": 995,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8298:0:8"
                },
                "scope": 1005,
                "src": "8261:77:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 1006,
            "src": "3389:4951:8",
            "usedErrors": []
          }
        ],
        "src": "133:8208:8"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "id": 9,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "exportedSymbols": {
          "Address": [
            1335
          ]
        },
        "id": 1336,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1007,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".1"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:9"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "Address",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 1008,
              "nodeType": "StructuredDocumentation",
              "src": "126:67:9",
              "text": " @dev Collection of functions related to the address type"
            },
            "fullyImplemented": true,
            "id": 1335,
            "linearizedBaseContracts": [
              1335
            ],
            "name": "Address",
            "nameLocation": "202:7:9",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1022,
                  "nodeType": "Block",
                  "src": "1478:254:9",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1016,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "1702:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1017,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1710:4:9",
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "1702:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1715:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1702:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1724:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1702:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1015,
                      "id": 1021,
                      "nodeType": "Return",
                      "src": "1695:30:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1009,
                  "nodeType": "StructuredDocumentation",
                  "src": "216:1191:9",
                  "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                },
                "id": 1023,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isContract",
                "nameLocation": "1421:10:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1012,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1011,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "1440:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1023,
                      "src": "1432:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1010,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1432:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1431:17:9"
                },
                "returnParameters": {
                  "id": 1015,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1014,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1023,
                      "src": "1472:4:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1013,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1471:6:9"
                },
                "scope": 1335,
                "src": "1412:320:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1056,
                  "nodeType": "Block",
                  "src": "2718:241:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1034,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2744:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Address_$1335",
                                      "typeString": "library Address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Address_$1335",
                                      "typeString": "library Address"
                                    }
                                  ],
                                  "id": 1033,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2736:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1032,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2736:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2736:13:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2750:7:9",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2736:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1037,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "2761:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2736:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                            "id": 1039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2769:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            },
                            "value": "Address: insufficient balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            }
                          ],
                          "id": 1031,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2728:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2728:73:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1041,
                      "nodeType": "ExpressionStatement",
                      "src": "2728:73:9"
                    },
                    {
                      "assignments": [
                        1043,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1043,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "2818:7:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1056,
                          "src": "2813:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1042,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "2813:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 1050,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2861:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 1044,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1026,
                              "src": "2831:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2841:4:9",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2831:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 1046,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1028,
                              "src": "2853:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "2831:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2831:33:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2812:52:9"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "2882:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                            "id": 1053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2891:60:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            },
                            "value": "Address: unable to send value, recipient may have reverted"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            }
                          ],
                          "id": 1051,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2874:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:78:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1055,
                      "nodeType": "ExpressionStatement",
                      "src": "2874:78:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1024,
                  "nodeType": "StructuredDocumentation",
                  "src": "1738:904:9",
                  "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                },
                "id": 1057,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sendValue",
                "nameLocation": "2656:9:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1029,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1026,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "2682:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "2666:25:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1025,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2666:15:9",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1028,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2701:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1057,
                      "src": "2693:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2693:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2665:43:9"
                },
                "returnParameters": {
                  "id": 1030,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2718:0:9"
                },
                "scope": 1335,
                "src": "2647:312:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1074,
                  "nodeType": "Block",
                  "src": "3790:96:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1068,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1060,
                            "src": "3829:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1069,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "3837:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 1070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3843:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                            "id": 1071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3846:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            },
                            "value": "Address: low-level call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            }
                          ],
                          "id": 1067,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1115,
                            1159
                          ],
                          "referencedDeclaration": 1159,
                          "src": "3807:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3807:72:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1066,
                      "id": 1073,
                      "nodeType": "Return",
                      "src": "3800:79:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1058,
                  "nodeType": "StructuredDocumentation",
                  "src": "2965:731:9",
                  "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                },
                "id": 1075,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "3710:12:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1063,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1060,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "3731:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "3723:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1059,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3723:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1062,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3752:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "3739:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1061,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3739:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3722:35:9"
                },
                "returnParameters": {
                  "id": 1066,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1065,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1075,
                      "src": "3776:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3776:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3775:14:9"
                },
                "scope": 1335,
                "src": "3701:185:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1094,
                  "nodeType": "Block",
                  "src": "4255:76:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1088,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1078,
                            "src": "4294:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1089,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "4302:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 1090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4308:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 1091,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "4311:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1087,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1115,
                            1159
                          ],
                          "referencedDeclaration": 1159,
                          "src": "4272:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4272:52:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1086,
                      "id": 1093,
                      "nodeType": "Return",
                      "src": "4265:59:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1076,
                  "nodeType": "StructuredDocumentation",
                  "src": "3892:211:9",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 1095,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "4117:12:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1083,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1078,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4147:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "4139:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1077,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4139:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4176:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "4163:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1079,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4163:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1082,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "4204:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "4190:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1081,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4190:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4129:93:9"
                },
                "returnParameters": {
                  "id": 1086,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1085,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1095,
                      "src": "4241:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4241:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4240:14:9"
                },
                "scope": 1335,
                "src": "4108:223:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1114,
                  "nodeType": "Block",
                  "src": "4806:111:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1108,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "4845:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1109,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1100,
                            "src": "4853:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1110,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1102,
                            "src": "4859:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4866:43:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            },
                            "value": "Address: low-level call with value failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            }
                          ],
                          "id": 1107,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1115,
                            1159
                          ],
                          "referencedDeclaration": 1159,
                          "src": "4823:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4823:87:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1106,
                      "id": 1113,
                      "nodeType": "Return",
                      "src": "4816:94:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1096,
                  "nodeType": "StructuredDocumentation",
                  "src": "4337:351:9",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                },
                "id": 1115,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "4702:21:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1103,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1098,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4732:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1115,
                      "src": "4724:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1097,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4724:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1100,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4753:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1115,
                      "src": "4740:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1099,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4740:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1102,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "4767:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1115,
                      "src": "4759:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4759:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4723:50:9"
                },
                "returnParameters": {
                  "id": 1106,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1105,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1115,
                      "src": "4792:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1104,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4792:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4791:14:9"
                },
                "scope": 1335,
                "src": "4693:224:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1158,
                  "nodeType": "Block",
                  "src": "5344:267:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1132,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5370:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Address_$1335",
                                      "typeString": "library Address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Address_$1335",
                                      "typeString": "library Address"
                                    }
                                  ],
                                  "id": 1131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5362:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1130,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5362:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5362:13:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5376:7:9",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "5362:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1135,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "5387:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5362:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                            "id": 1137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5394:40:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            },
                            "value": "Address: insufficient balance for call"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            }
                          ],
                          "id": 1129,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5354:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5354:81:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1139,
                      "nodeType": "ExpressionStatement",
                      "src": "5354:81:9"
                    },
                    {
                      "assignments": [
                        1141,
                        1143
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1141,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "5451:7:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1158,
                          "src": "5446:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1140,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "5446:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1143,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "5473:10:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1158,
                          "src": "5460:23:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1142,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5460:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1150,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1148,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "5513:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1144,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "5487:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5494:4:9",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5487:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 1146,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "5506:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "5487:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5487:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5445:73:9"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1152,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "5562:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1153,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "5570:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1154,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1143,
                            "src": "5579:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1155,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "5591:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1151,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1290,
                          "src": "5535:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5535:69:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1128,
                      "id": 1157,
                      "nodeType": "Return",
                      "src": "5528:76:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1116,
                  "nodeType": "StructuredDocumentation",
                  "src": "4923:237:9",
                  "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 1159,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "5174:21:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1125,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1118,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5213:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1159,
                      "src": "5205:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5205:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1120,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5242:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1159,
                      "src": "5229:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1119,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5229:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "5264:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1159,
                      "src": "5256:13:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5256:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1124,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "5293:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1159,
                      "src": "5279:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1123,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5279:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5195:116:9"
                },
                "returnParameters": {
                  "id": 1128,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1127,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1159,
                      "src": "5330:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1126,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5330:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5329:14:9"
                },
                "scope": 1335,
                "src": "5165:446:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1175,
                  "nodeType": "Block",
                  "src": "5888:97:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1170,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "5924:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1171,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "5932:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                            "id": 1172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5938:39:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            },
                            "value": "Address: low-level static call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            }
                          ],
                          "id": 1169,
                          "name": "functionStaticCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1176,
                            1205
                          ],
                          "referencedDeclaration": 1205,
                          "src": "5905:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5905:73:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1168,
                      "id": 1174,
                      "nodeType": "Return",
                      "src": "5898:80:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1160,
                  "nodeType": "StructuredDocumentation",
                  "src": "5617:166:9",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 1176,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "5797:18:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1165,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1162,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5824:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "5816:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5816:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1164,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5845:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "5832:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1163,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5832:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5815:35:9"
                },
                "returnParameters": {
                  "id": 1168,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1167,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1176,
                      "src": "5874:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1166,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5874:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5873:14:9"
                },
                "scope": 1335,
                "src": "5788:197:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1204,
                  "nodeType": "Block",
                  "src": "6327:168:9",
                  "statements": [
                    {
                      "assignments": [
                        1189,
                        1191
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1189,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "6343:7:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1204,
                          "src": "6338:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1188,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6338:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1191,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "6365:10:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1204,
                          "src": "6352:23:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1190,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6352:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1196,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1194,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1181,
                            "src": "6397:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1192,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "6379:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6386:10:9",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "6379:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 1195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6379:23:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6337:65:9"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1198,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1179,
                            "src": "6446:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1199,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "6454:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1200,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1191,
                            "src": "6463:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1201,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "6475:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1197,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1290,
                          "src": "6419:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6419:69:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1187,
                      "id": 1203,
                      "nodeType": "Return",
                      "src": "6412:76:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1177,
                  "nodeType": "StructuredDocumentation",
                  "src": "5991:173:9",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 1205,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "6178:18:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1184,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1179,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6214:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1205,
                      "src": "6206:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1178,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6206:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1181,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6243:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1205,
                      "src": "6230:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1180,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6230:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1183,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "6271:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1205,
                      "src": "6257:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6257:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6196:93:9"
                },
                "returnParameters": {
                  "id": 1187,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1186,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1205,
                      "src": "6313:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1185,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6313:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6312:14:9"
                },
                "scope": 1335,
                "src": "6169:326:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1221,
                  "nodeType": "Block",
                  "src": "6771:101:9",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1216,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "6809:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1217,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "6817:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6823:41:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            },
                            "value": "Address: low-level delegate call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            }
                          ],
                          "id": 1215,
                          "name": "functionDelegateCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1222,
                            1251
                          ],
                          "referencedDeclaration": 1251,
                          "src": "6788:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6788:77:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1214,
                      "id": 1220,
                      "nodeType": "Return",
                      "src": "6781:84:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1206,
                  "nodeType": "StructuredDocumentation",
                  "src": "6501:168:9",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 1222,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "6683:20:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1211,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1208,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6712:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "6704:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1207,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6704:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6733:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "6720:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6720:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6703:35:9"
                },
                "returnParameters": {
                  "id": 1214,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1213,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1222,
                      "src": "6757:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1212,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6757:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6756:14:9"
                },
                "scope": 1335,
                "src": "6674:198:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1250,
                  "nodeType": "Block",
                  "src": "7213:170:9",
                  "statements": [
                    {
                      "assignments": [
                        1235,
                        1237
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1235,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "7229:7:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1250,
                          "src": "7224:12:9",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1234,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "7224:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1237,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "7251:10:9",
                          "nodeType": "VariableDeclaration",
                          "scope": 1250,
                          "src": "7238:23:9",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1236,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7238:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1242,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1240,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "7285:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1238,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "7265:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7272:12:9",
                          "memberName": "delegatecall",
                          "nodeType": "MemberAccess",
                          "src": "7265:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) returns (bool,bytes memory)"
                          }
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7265:25:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7223:67:9"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1244,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1225,
                            "src": "7334:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1245,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1235,
                            "src": "7342:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1246,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "7351:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1247,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "7363:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1243,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1290,
                          "src": "7307:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7307:69:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1233,
                      "id": 1249,
                      "nodeType": "Return",
                      "src": "7300:76:9"
                    }
                  ]
                },
                "documentation": {
                  "id": 1223,
                  "nodeType": "StructuredDocumentation",
                  "src": "6878:175:9",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 1251,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "7067:20:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1230,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1225,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7105:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "7097:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1224,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7097:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1227,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7134:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "7121:17:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1226,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7121:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1229,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7162:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "7148:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7148:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7087:93:9"
                },
                "returnParameters": {
                  "id": 1233,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1232,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1251,
                      "src": "7199:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1231,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7199:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7198:14:9"
                },
                "scope": 1335,
                "src": "7058:325:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1289,
                  "nodeType": "Block",
                  "src": "7865:434:9",
                  "statements": [
                    {
                      "condition": {
                        "id": 1265,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1256,
                        "src": "7879:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1287,
                        "nodeType": "Block",
                        "src": "8235:58:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1283,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1258,
                                  "src": "8257:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 1284,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1260,
                                  "src": "8269:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1282,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "8249:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8249:33:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1286,
                            "nodeType": "ExpressionStatement",
                            "src": "8249:33:9"
                          }
                        ]
                      },
                      "id": 1288,
                      "nodeType": "IfStatement",
                      "src": "7875:418:9",
                      "trueBody": {
                        "id": 1281,
                        "nodeType": "Block",
                        "src": "7888:341:9",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1266,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1258,
                                  "src": "7906:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7917:6:9",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7906:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7927:1:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7906:22:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1278,
                            "nodeType": "IfStatement",
                            "src": "7902:286:9",
                            "trueBody": {
                              "id": 1277,
                              "nodeType": "Block",
                              "src": "7930:258:9",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1272,
                                            "name": "target",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1254,
                                            "src": "8132:6:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1271,
                                          "name": "isContract",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1023,
                                          "src": "8121:10:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 1273,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8121:18:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                        "id": 1274,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8141:31:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        },
                                        "value": "Address: call to non-contract"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        }
                                      ],
                                      "id": 1270,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "8113:7:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 1275,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8113:60:9",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1276,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8113:60:9"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1279,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "8208:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1264,
                            "id": 1280,
                            "nodeType": "Return",
                            "src": "8201:17:9"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 1252,
                  "nodeType": "StructuredDocumentation",
                  "src": "7389:277:9",
                  "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
                },
                "id": 1290,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResultFromTarget",
                "nameLocation": "7680:26:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1261,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1254,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7724:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1290,
                      "src": "7716:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1253,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7716:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1256,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7745:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1290,
                      "src": "7740:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1255,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7740:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1258,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "7775:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1290,
                      "src": "7762:23:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1257,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7762:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1260,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7809:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1290,
                      "src": "7795:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1259,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7795:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7706:121:9"
                },
                "returnParameters": {
                  "id": 1264,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1263,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1290,
                      "src": "7851:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1262,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7851:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7850:14:9"
                },
                "scope": 1335,
                "src": "7671:628:9",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1313,
                  "nodeType": "Block",
                  "src": "8680:135:9",
                  "statements": [
                    {
                      "condition": {
                        "id": 1302,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "8694:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1311,
                        "nodeType": "Block",
                        "src": "8751:58:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1307,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1295,
                                  "src": "8773:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 1308,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1297,
                                  "src": "8785:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1306,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "8765:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 1309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8765:33:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1310,
                            "nodeType": "ExpressionStatement",
                            "src": "8765:33:9"
                          }
                        ]
                      },
                      "id": 1312,
                      "nodeType": "IfStatement",
                      "src": "8690:119:9",
                      "trueBody": {
                        "id": 1305,
                        "nodeType": "Block",
                        "src": "8703:42:9",
                        "statements": [
                          {
                            "expression": {
                              "id": 1303,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1295,
                              "src": "8724:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1301,
                            "id": 1304,
                            "nodeType": "Return",
                            "src": "8717:17:9"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 1291,
                  "nodeType": "StructuredDocumentation",
                  "src": "8305:210:9",
                  "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
                },
                "id": 1314,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResult",
                "nameLocation": "8529:16:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1298,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8560:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1314,
                      "src": "8555:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1292,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8555:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1295,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8590:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1314,
                      "src": "8577:23:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1294,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8577:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1297,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8624:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1314,
                      "src": "8610:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1296,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8610:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8545:97:9"
                },
                "returnParameters": {
                  "id": 1301,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1300,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1314,
                      "src": "8666:12:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1299,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8666:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8665:14:9"
                },
                "scope": 1335,
                "src": "8520:295:9",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1333,
                  "nodeType": "Block",
                  "src": "8904:457:9",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1321,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "8980:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8991:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8980:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9000:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8980:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1331,
                        "nodeType": "Block",
                        "src": "9310:45:9",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1328,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1318,
                                  "src": "9331:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1327,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "9324:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9324:20:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1330,
                            "nodeType": "ExpressionStatement",
                            "src": "9324:20:9"
                          }
                        ]
                      },
                      "id": 1332,
                      "nodeType": "IfStatement",
                      "src": "8976:379:9",
                      "trueBody": {
                        "id": 1326,
                        "nodeType": "Block",
                        "src": "9003:301:9",
                        "statements": [
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "9161:133:9",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9179:40:9",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "9208:10:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9202:5:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9202:17:9"
                                  },
                                  "variables": [
                                    {
                                      "name": "returndata_size",
                                      "nodeType": "YulTypedName",
                                      "src": "9183:15:9",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9247:2:9",
                                            "type": "",
                                            "value": "32"
                                          },
                                          {
                                            "name": "returndata",
                                            "nodeType": "YulIdentifier",
                                            "src": "9251:10:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9243:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9243:19:9"
                                      },
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulIdentifier",
                                        "src": "9264:15:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "9236:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9236:44:9"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9236:44:9"
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 1316,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9208:10:9",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1316,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9251:10:9",
                                "valueSize": 1
                              }
                            ],
                            "id": 1325,
                            "nodeType": "InlineAssembly",
                            "src": "9152:142:9"
                          }
                        ]
                      }
                    }
                  ]
                },
                "id": 1334,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_revert",
                "nameLocation": "8830:7:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1319,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1316,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8851:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1334,
                      "src": "8838:23:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1315,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8838:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1318,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8877:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1334,
                      "src": "8863:26:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1317,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8863:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8837:53:9"
                },
                "returnParameters": {
                  "id": 1320,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8904:0:9"
                },
                "scope": 1335,
                "src": "8821:540:9",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 1336,
            "src": "194:9169:9",
            "usedErrors": []
          }
        ],
        "src": "101:9263:9"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "id": 10,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "exportedSymbols": {
          "Context": [
            1365
          ]
        },
        "id": 1366,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1337,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:10"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Context",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1338,
              "nodeType": "StructuredDocumentation",
              "src": "126:496:10",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 1365,
            "linearizedBaseContracts": [
              1365
            ],
            "name": "Context",
            "nameLocation": "641:7:10",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1346,
                  "nodeType": "Block",
                  "src": "717:34:10",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 1343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "734:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "738:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "734:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1342,
                      "id": 1345,
                      "nodeType": "Return",
                      "src": "727:17:10"
                    }
                  ]
                },
                "id": 1347,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "664:10:10",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1339,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "674:2:10"
                },
                "returnParameters": {
                  "id": 1342,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1341,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "708:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1340,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "707:9:10"
                },
                "scope": 1365,
                "src": "655:96:10",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1355,
                  "nodeType": "Block",
                  "src": "824:32:10",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 1352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "841:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "845:4:10",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "841:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 1351,
                      "id": 1354,
                      "nodeType": "Return",
                      "src": "834:15:10"
                    }
                  ]
                },
                "id": 1356,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "766:8:10",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1348,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "774:2:10"
                },
                "returnParameters": {
                  "id": 1351,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1350,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1356,
                      "src": "808:14:10",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1349,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "807:16:10"
                },
                "scope": 1365,
                "src": "757:99:10",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1363,
                  "nodeType": "Block",
                  "src": "934:25:10",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 1360,
                      "id": 1362,
                      "nodeType": "Return",
                      "src": "944:8:10"
                    }
                  ]
                },
                "id": 1364,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "871:20:10",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1357,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "891:2:10"
                },
                "returnParameters": {
                  "id": 1360,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1359,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1364,
                      "src": "925:7:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "925:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "924:9:10"
                },
                "scope": 1365,
                "src": "862:97:10",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 1366,
            "src": "623:338:10",
            "usedErrors": []
          }
        ],
        "src": "101:861:10"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
      "id": 11,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/StorageSlot.sol",
        "exportedSymbols": {
          "StorageSlot": [
            1475
          ]
        },
        "id": 1476,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1367,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "193:23:11"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "StorageSlot",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 1368,
              "nodeType": "StructuredDocumentation",
              "src": "218:1201:11",
              "text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
            },
            "fullyImplemented": true,
            "id": 1475,
            "linearizedBaseContracts": [
              1475
            ],
            "name": "StorageSlot",
            "nameLocation": "1428:11:11",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "StorageSlot.AddressSlot",
                "id": 1371,
                "members": [
                  {
                    "constant": false,
                    "id": 1370,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "1483:5:11",
                    "nodeType": "VariableDeclaration",
                    "scope": 1371,
                    "src": "1475:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 1369,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1475:7:11",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "AddressSlot",
                "nameLocation": "1453:11:11",
                "nodeType": "StructDefinition",
                "scope": 1475,
                "src": "1446:49:11",
                "visibility": "public"
              },
              {
                "canonicalName": "StorageSlot.BooleanSlot",
                "id": 1374,
                "members": [
                  {
                    "constant": false,
                    "id": 1373,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "1535:5:11",
                    "nodeType": "VariableDeclaration",
                    "scope": 1374,
                    "src": "1530:10:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 1372,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1530:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "BooleanSlot",
                "nameLocation": "1508:11:11",
                "nodeType": "StructDefinition",
                "scope": 1475,
                "src": "1501:46:11",
                "visibility": "public"
              },
              {
                "canonicalName": "StorageSlot.Bytes32Slot",
                "id": 1377,
                "members": [
                  {
                    "constant": false,
                    "id": 1376,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "1590:5:11",
                    "nodeType": "VariableDeclaration",
                    "scope": 1377,
                    "src": "1582:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 1375,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1582:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Bytes32Slot",
                "nameLocation": "1560:11:11",
                "nodeType": "StructDefinition",
                "scope": 1475,
                "src": "1553:49:11",
                "visibility": "public"
              },
              {
                "canonicalName": "StorageSlot.Uint256Slot",
                "id": 1380,
                "members": [
                  {
                    "constant": false,
                    "id": 1379,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "1645:5:11",
                    "nodeType": "VariableDeclaration",
                    "scope": 1380,
                    "src": "1637:13:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 1378,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1637:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Uint256Slot",
                "nameLocation": "1615:11:11",
                "nodeType": "StructDefinition",
                "scope": 1475,
                "src": "1608:49:11",
                "visibility": "public"
              },
              {
                "canonicalName": "StorageSlot.StringSlot",
                "id": 1383,
                "members": [
                  {
                    "constant": false,
                    "id": 1382,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "1698:5:11",
                    "nodeType": "VariableDeclaration",
                    "scope": 1383,
                    "src": "1691:12:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    },
                    "typeName": {
                      "id": 1381,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1691:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "StringSlot",
                "nameLocation": "1670:10:11",
                "nodeType": "StructDefinition",
                "scope": 1475,
                "src": "1663:47:11",
                "visibility": "public"
              },
              {
                "canonicalName": "StorageSlot.BytesSlot",
                "id": 1386,
                "members": [
                  {
                    "constant": false,
                    "id": 1385,
                    "mutability": "mutable",
                    "name": "value",
                    "nameLocation": "1749:5:11",
                    "nodeType": "VariableDeclaration",
                    "scope": 1386,
                    "src": "1743:11:11",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 1384,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1743:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "BytesSlot",
                "nameLocation": "1723:9:11",
                "nodeType": "StructDefinition",
                "scope": 1475,
                "src": "1716:45:11",
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1396,
                  "nodeType": "Block",
                  "src": "1943:106:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "2005:38:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2019:14:11",
                            "value": {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2029:4:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "2019:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1393,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "2019:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1389,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2029:4:11",
                          "valueSize": 1
                        }
                      ],
                      "id": 1395,
                      "nodeType": "InlineAssembly",
                      "src": "1996:47:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1387,
                  "nodeType": "StructuredDocumentation",
                  "src": "1767:87:11",
                  "text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
                },
                "id": 1397,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getAddressSlot",
                "nameLocation": "1868:14:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1390,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1389,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "1891:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "1883:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1388,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1883:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1882:14:11"
                },
                "returnParameters": {
                  "id": 1394,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1393,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "1940:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1397,
                      "src": "1920:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                        "typeString": "struct StorageSlot.AddressSlot"
                      },
                      "typeName": {
                        "id": 1392,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1391,
                          "name": "AddressSlot",
                          "nameLocations": [
                            "1920:11:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1371,
                          "src": "1920:11:11"
                        },
                        "referencedDeclaration": 1371,
                        "src": "1920:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$1371_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1919:23:11"
                },
                "scope": 1475,
                "src": "1859:190:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1407,
                  "nodeType": "Block",
                  "src": "2231:106:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "2293:38:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2307:14:11",
                            "value": {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2317:4:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "2307:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1404,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "2307:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1400,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2317:4:11",
                          "valueSize": 1
                        }
                      ],
                      "id": 1406,
                      "nodeType": "InlineAssembly",
                      "src": "2284:47:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1398,
                  "nodeType": "StructuredDocumentation",
                  "src": "2055:87:11",
                  "text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
                },
                "id": 1408,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getBooleanSlot",
                "nameLocation": "2156:14:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1401,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1400,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "2179:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1408,
                      "src": "2171:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1399,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2171:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2170:14:11"
                },
                "returnParameters": {
                  "id": 1405,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1404,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2228:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1408,
                      "src": "2208:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BooleanSlot_$1374_storage_ptr",
                        "typeString": "struct StorageSlot.BooleanSlot"
                      },
                      "typeName": {
                        "id": 1403,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1402,
                          "name": "BooleanSlot",
                          "nameLocations": [
                            "2208:11:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1374,
                          "src": "2208:11:11"
                        },
                        "referencedDeclaration": 1374,
                        "src": "2208:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BooleanSlot_$1374_storage_ptr",
                          "typeString": "struct StorageSlot.BooleanSlot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2207:23:11"
                },
                "scope": 1475,
                "src": "2147:190:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1418,
                  "nodeType": "Block",
                  "src": "2519:106:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "2581:38:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2595:14:11",
                            "value": {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2605:4:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "2595:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1415,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "2595:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1411,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2605:4:11",
                          "valueSize": 1
                        }
                      ],
                      "id": 1417,
                      "nodeType": "InlineAssembly",
                      "src": "2572:47:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1409,
                  "nodeType": "StructuredDocumentation",
                  "src": "2343:87:11",
                  "text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
                },
                "id": 1419,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getBytes32Slot",
                "nameLocation": "2444:14:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1412,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1411,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "2467:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1419,
                      "src": "2459:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1410,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2459:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2458:14:11"
                },
                "returnParameters": {
                  "id": 1416,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1415,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2516:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1419,
                      "src": "2496:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bytes32Slot_$1377_storage_ptr",
                        "typeString": "struct StorageSlot.Bytes32Slot"
                      },
                      "typeName": {
                        "id": 1414,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1413,
                          "name": "Bytes32Slot",
                          "nameLocations": [
                            "2496:11:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1377,
                          "src": "2496:11:11"
                        },
                        "referencedDeclaration": 1377,
                        "src": "2496:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Slot_$1377_storage_ptr",
                          "typeString": "struct StorageSlot.Bytes32Slot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2495:23:11"
                },
                "scope": 1475,
                "src": "2435:190:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1429,
                  "nodeType": "Block",
                  "src": "2807:106:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "2869:38:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2883:14:11",
                            "value": {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2893:4:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "2883:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1426,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "2883:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1422,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "2893:4:11",
                          "valueSize": 1
                        }
                      ],
                      "id": 1428,
                      "nodeType": "InlineAssembly",
                      "src": "2860:47:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1420,
                  "nodeType": "StructuredDocumentation",
                  "src": "2631:87:11",
                  "text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
                },
                "id": 1430,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getUint256Slot",
                "nameLocation": "2732:14:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1423,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1422,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "2755:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "2747:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1421,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2747:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2746:14:11"
                },
                "returnParameters": {
                  "id": 1427,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1426,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2804:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1430,
                      "src": "2784:21:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Uint256Slot_$1380_storage_ptr",
                        "typeString": "struct StorageSlot.Uint256Slot"
                      },
                      "typeName": {
                        "id": 1425,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1424,
                          "name": "Uint256Slot",
                          "nameLocations": [
                            "2784:11:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1380,
                          "src": "2784:11:11"
                        },
                        "referencedDeclaration": 1380,
                        "src": "2784:11:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Uint256Slot_$1380_storage_ptr",
                          "typeString": "struct StorageSlot.Uint256Slot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2783:23:11"
                },
                "scope": 1475,
                "src": "2723:190:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1440,
                  "nodeType": "Block",
                  "src": "3092:106:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "3154:38:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3168:14:11",
                            "value": {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "3178:4:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "3168:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1437,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "3168:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1433,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3178:4:11",
                          "valueSize": 1
                        }
                      ],
                      "id": 1439,
                      "nodeType": "InlineAssembly",
                      "src": "3145:47:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1431,
                  "nodeType": "StructuredDocumentation",
                  "src": "2919:86:11",
                  "text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
                },
                "id": 1441,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getStringSlot",
                "nameLocation": "3019:13:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1434,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1433,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "3041:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1441,
                      "src": "3033:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1432,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3033:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3032:14:11"
                },
                "returnParameters": {
                  "id": 1438,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1437,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "3089:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1441,
                      "src": "3070:20:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StringSlot_$1383_storage_ptr",
                        "typeString": "struct StorageSlot.StringSlot"
                      },
                      "typeName": {
                        "id": 1436,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1435,
                          "name": "StringSlot",
                          "nameLocations": [
                            "3070:10:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1383,
                          "src": "3070:10:11"
                        },
                        "referencedDeclaration": 1383,
                        "src": "3070:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$1383_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3069:22:11"
                },
                "scope": 1475,
                "src": "3010:188:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1451,
                  "nodeType": "Block",
                  "src": "3400:112:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "3462:44:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3476:20:11",
                            "value": {
                              "name": "store.slot",
                              "nodeType": "YulIdentifier",
                              "src": "3486:10:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "3476:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1448,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "3476:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1444,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "3486:10:11",
                          "suffix": "slot",
                          "valueSize": 1
                        }
                      ],
                      "id": 1450,
                      "nodeType": "InlineAssembly",
                      "src": "3453:53:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1442,
                  "nodeType": "StructuredDocumentation",
                  "src": "3204:101:11",
                  "text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
                },
                "id": 1452,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getStringSlot",
                "nameLocation": "3319:13:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1445,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1444,
                      "mutability": "mutable",
                      "name": "store",
                      "nameLocation": "3348:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1452,
                      "src": "3333:20:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1443,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3332:22:11"
                },
                "returnParameters": {
                  "id": 1449,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1448,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "3397:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1452,
                      "src": "3378:20:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StringSlot_$1383_storage_ptr",
                        "typeString": "struct StorageSlot.StringSlot"
                      },
                      "typeName": {
                        "id": 1447,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1446,
                          "name": "StringSlot",
                          "nameLocations": [
                            "3378:10:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1383,
                          "src": "3378:10:11"
                        },
                        "referencedDeclaration": 1383,
                        "src": "3378:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$1383_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3377:22:11"
                },
                "scope": 1475,
                "src": "3310:202:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1462,
                  "nodeType": "Block",
                  "src": "3688:106:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "3750:38:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3764:14:11",
                            "value": {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "3774:4:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "3764:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1459,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "3764:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1455,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "3774:4:11",
                          "valueSize": 1
                        }
                      ],
                      "id": 1461,
                      "nodeType": "InlineAssembly",
                      "src": "3741:47:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1453,
                  "nodeType": "StructuredDocumentation",
                  "src": "3518:85:11",
                  "text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
                },
                "id": 1463,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getBytesSlot",
                "nameLocation": "3617:12:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1456,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1455,
                      "mutability": "mutable",
                      "name": "slot",
                      "nameLocation": "3638:4:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1463,
                      "src": "3630:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1454,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3630:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3629:14:11"
                },
                "returnParameters": {
                  "id": 1460,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1459,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "3685:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1463,
                      "src": "3667:19:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BytesSlot_$1386_storage_ptr",
                        "typeString": "struct StorageSlot.BytesSlot"
                      },
                      "typeName": {
                        "id": 1458,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1457,
                          "name": "BytesSlot",
                          "nameLocations": [
                            "3667:9:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1386,
                          "src": "3667:9:11"
                        },
                        "referencedDeclaration": 1386,
                        "src": "3667:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$1386_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3666:21:11"
                },
                "scope": 1475,
                "src": "3608:186:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1473,
                  "nodeType": "Block",
                  "src": "3991:112:11",
                  "statements": [
                    {
                      "AST": {
                        "nodeType": "YulBlock",
                        "src": "4053:44:11",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4067:20:11",
                            "value": {
                              "name": "store.slot",
                              "nodeType": "YulIdentifier",
                              "src": "4077:10:11"
                            },
                            "variableNames": [
                              {
                                "name": "r.slot",
                                "nodeType": "YulIdentifier",
                                "src": "4067:6:11"
                              }
                            ]
                          }
                        ]
                      },
                      "documentation": "@solidity memory-safe-assembly",
                      "evmVersion": "paris",
                      "externalReferences": [
                        {
                          "declaration": 1470,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "4067:6:11",
                          "suffix": "slot",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1466,
                          "isOffset": false,
                          "isSlot": true,
                          "src": "4077:10:11",
                          "suffix": "slot",
                          "valueSize": 1
                        }
                      ],
                      "id": 1472,
                      "nodeType": "InlineAssembly",
                      "src": "4044:53:11"
                    }
                  ]
                },
                "documentation": {
                  "id": 1464,
                  "nodeType": "StructuredDocumentation",
                  "src": "3800:99:11",
                  "text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
                },
                "id": 1474,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getBytesSlot",
                "nameLocation": "3913:12:11",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1467,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1466,
                      "mutability": "mutable",
                      "name": "store",
                      "nameLocation": "3940:5:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "3926:19:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1465,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3926:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3925:21:11"
                },
                "returnParameters": {
                  "id": 1471,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1470,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "3988:1:11",
                      "nodeType": "VariableDeclaration",
                      "scope": 1474,
                      "src": "3970:19:11",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BytesSlot_$1386_storage_ptr",
                        "typeString": "struct StorageSlot.BytesSlot"
                      },
                      "typeName": {
                        "id": 1469,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1468,
                          "name": "BytesSlot",
                          "nameLocations": [
                            "3970:9:11"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1386,
                          "src": "3970:9:11"
                        },
                        "referencedDeclaration": 1386,
                        "src": "3970:9:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$1386_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3969:21:11"
                },
                "scope": 1475,
                "src": "3904:199:11",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1476,
            "src": "1420:2685:11",
            "usedErrors": []
          }
        ],
        "src": "193:3913:11"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
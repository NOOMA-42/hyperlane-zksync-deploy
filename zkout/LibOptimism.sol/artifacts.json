{
  "contracts": {
    "node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol": {
      "LibOptimism": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Primitives for cross-chain aware contracts for https://www.optimism.io/[Optimism]. See the https://community.optimism.io/docs/developers/bridge/messaging/#accessing-msg-sender[documentation] for the functionality used here.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol\":\"LibOptimism\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]},\"node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol\":{\"keccak256\":\"0x8003c8830d918de3ddda2aa45ecb0e529337befd36f8d2f74961f77d64ec8406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3c0725e69a762665d329ef5a58403d445a54969d84ce9afa0b7ddf968b26b\",\"dweb:/ipfs/QmdsNMRhoSNZa7QFGwLg69Pi596wFoKT2KtowXsDQLwvjT\"]},\"node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol\":{\"keccak256\":\"0x73cfd321cef49b3df770b4d5b9009d2b47530df1c698fefbadd302e68b5915d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f84a74982bdd717c09c801747fdc6b6e76770088dd405d102465b2fce0829e\",\"dweb:/ipfs/QmXnKtn23y8q8bGoRNwjTkWGKiKXdnFpV6fnFRzQZT6EtL\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"LibOptimism.sol:LibOptimism\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000f03503a9628e798aa80d3a4139a5d6f1c52346917bed60ca5bef4d01505b253"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 1:\"node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol\"\nobject \"LibOptimism_53\" {\n    code {\n        {\n            /// @src 1:521:1386  \"library LibOptimism {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"LibOptimism_53_deployed\")\n            codecopy(_1, dataoffset(\"LibOptimism_53_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol\"\n    object \"LibOptimism_53_deployed\" {\n        code {\n            {\n                /// @src 1:521:1386  \"library LibOptimism {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cc221ca4240266a6c49996e8d0efd8a134f6ea62285abf9ce8633582a190863264736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000007fe5e61822d99e0113590c36e5a1be0fd393ea0eaebcbe5c6b166fb14",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol": {
      "ICrossDomainMessenger": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "msgHash",
                "type": "bytes32"
              }
            ],
            "name": "FailedRelayedMessage",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "msgHash",
                "type": "bytes32"
              }
            ],
            "name": "RelayedMessage",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "target",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "bytes",
                "name": "message",
                "type": "bytes"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "messageNonce",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "gasLimit",
                "type": "uint256"
              }
            ],
            "name": "SentMessage",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_target",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              },
              {
                "internalType": "uint32",
                "name": "_gasLimit",
                "type": "uint32"
              }
            ],
            "name": "sendMessage",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "xDomainMessageSender",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_gasLimit\":\"Gas limit for the provided message.\",\"_message\":\"Message to send to the target.\",\"_target\":\"Target contract address.\"}}},\"title\":\"ICrossDomainMessenger\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a cross domain message to the target messenger.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol\":\"ICrossDomainMessenger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol\":{\"keccak256\":\"0x73cfd321cef49b3df770b4d5b9009d2b47530df1c698fefbadd302e68b5915d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f84a74982bdd717c09c801747fdc6b6e76770088dd405d102465b2fce0829e\",\"dweb:/ipfs/QmXnKtn23y8q8bGoRNwjTkWGKiKXdnFpV6fnFRzQZT6EtL\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "sendMessage(address,bytes,uint32)": "3dbb202b",
            "xDomainMessageSender()": "6e296e45"
          }
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "node_modules/@openzeppelin/contracts/crosschain/errors.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/crosschain/errors.sol",
        "exportedSymbols": {
          "InvalidCrossChainSender": [
            9
          ],
          "NotCrossChainCall": [
            3
          ]
        },
        "id": 10,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "105:23:0"
          },
          {
            "errorSelector": "4a74df92",
            "id": 3,
            "name": "NotCrossChainCall",
            "nameLocation": "136:17:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:2:0"
            },
            "src": "130:26:0"
          },
          {
            "errorSelector": "ef25d32b",
            "id": 9,
            "name": "InvalidCrossChainSender",
            "nameLocation": "163:23:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "actual",
                  "nameLocation": "195:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "187:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "expected",
                  "nameLocation": "211:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "203:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "203:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:34:0"
            },
            "src": "157:64:0"
          }
        ],
        "src": "105:117:0"
      }
    },
    "node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/crosschain/optimism/LibOptimism.sol",
        "exportedSymbols": {
          "InvalidCrossChainSender": [
            9
          ],
          "LibOptimism": [
            53
          ],
          "NotCrossChainCall": [
            3
          ],
          "Optimism_Bridge": [
            92
          ]
        },
        "id": 54,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 11,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "119:23:1"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol",
            "file": "../../vendor/optimism/ICrossDomainMessenger.sol",
            "id": 13,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 54,
            "sourceUnit": 93,
            "src": "144:105:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 12,
                  "name": "ICrossDomainMessenger",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 92,
                  "src": "152:21:1",
                  "typeDescriptions": {}
                },
                "local": "Optimism_Bridge",
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/crosschain/errors.sol",
            "file": "../errors.sol",
            "id": 14,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 54,
            "sourceUnit": 10,
            "src": "250:23:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "LibOptimism",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 15,
              "nodeType": "StructuredDocumentation",
              "src": "275:245:1",
              "text": " @dev Primitives for cross-chain aware contracts for https://www.optimism.io/[Optimism].\n See the https://community.optimism.io/docs/developers/bridge/messaging/#accessing-msg-sender[documentation]\n for the functionality used here."
            },
            "fullyImplemented": true,
            "id": 53,
            "linearizedBaseContracts": [
              53
            ],
            "name": "LibOptimism",
            "nameLocation": "529:11:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 28,
                  "nodeType": "Block",
                  "src": "757:47:1",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 26,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "774:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "778:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "774:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 25,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "788:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "774:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 22,
                      "id": 27,
                      "nodeType": "Return",
                      "src": "767:30:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 16,
                  "nodeType": "StructuredDocumentation",
                  "src": "547:135:1",
                  "text": " @dev Returns whether the current function call is the result of a\n cross-chain message relayed by `messenger`."
                },
                "id": 29,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isCrossChain",
                "nameLocation": "696:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 19,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "717:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 29,
                      "src": "709:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "709:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "708:19:1"
                },
                "returnParameters": {
                  "id": 22,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 29,
                      "src": "751:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "751:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "750:6:1"
                },
                "scope": 53,
                "src": "687:117:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 51,
                  "nodeType": "Block",
                  "src": "1244:140:1",
                  "statements": [
                    {
                      "condition": {
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1258:24:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 38,
                              "name": "messenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1272:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 37,
                            "name": "isCrossChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "1259:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1259:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 44,
                      "nodeType": "IfStatement",
                      "src": "1254:56:1",
                      "trueBody": {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41,
                            "name": "NotCrossChainCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1291:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1291:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "RevertStatement",
                        "src": "1284:26:1"
                      }
                    },
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 46,
                                "name": "messenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32,
                                "src": "1344:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 45,
                              "name": "Optimism_Bridge",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 92,
                              "src": "1328:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ICrossDomainMessenger_$92_$",
                                "typeString": "type(contract ICrossDomainMessenger)"
                              }
                            },
                            "id": 47,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1328:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ICrossDomainMessenger_$92",
                              "typeString": "contract ICrossDomainMessenger"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1355:20:1",
                          "memberName": "xDomainMessageSender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 81,
                          "src": "1328:47:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1328:49:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 36,
                      "id": 50,
                      "nodeType": "Return",
                      "src": "1321:56:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 30,
                  "nodeType": "StructuredDocumentation",
                  "src": "810:352:1",
                  "text": " @dev Returns the address of the sender that triggered the current\n cross-chain message through `messenger`.\n NOTE: {isCrossChain} should be checked before trying to recover the\n sender, as it will revert with `NotCrossChainCall` if the current\n function call is not the result of a cross-chain message."
                },
                "id": 52,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "crossChainSender",
                "nameLocation": "1176:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "messenger",
                      "nameLocation": "1201:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 52,
                      "src": "1193:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1193:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1192:19:1"
                },
                "returnParameters": {
                  "id": 36,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 52,
                      "src": "1235:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1235:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1234:9:1"
                },
                "scope": 53,
                "src": "1167:217:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 54,
            "src": "521:865:1",
            "usedErrors": []
          }
        ],
        "src": "119:1268:1"
      }
    },
    "node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/vendor/optimism/ICrossDomainMessenger.sol",
        "exportedSymbols": {
          "ICrossDomainMessenger": [
            92
          ]
        },
        "id": 93,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 55,
            "literals": [
              "solidity",
              ">",
              "0.5",
              ".0",
              "<",
              "0.9",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "124:30:2"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "ICrossDomainMessenger",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 56,
              "nodeType": "StructuredDocumentation",
              "src": "156:39:2",
              "text": " @title ICrossDomainMessenger"
            },
            "fullyImplemented": false,
            "id": 92,
            "linearizedBaseContracts": [
              92
            ],
            "name": "ICrossDomainMessenger",
            "nameLocation": "206:21:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "eventSelector": "cb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a",
                "id": 68,
                "name": "SentMessage",
                "nameLocation": "290:11:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 67,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 58,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "318:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "302:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "302:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "334:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "326:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "326:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 62,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "348:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "342:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "342:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 64,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "messageNonce",
                      "nameLocation": "365:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "357:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "357:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 66,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "gasLimit",
                      "nameLocation": "387:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 68,
                      "src": "379:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "379:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "301:95:2"
                },
                "src": "284:113:2"
              },
              {
                "anonymous": false,
                "eventSelector": "4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c",
                "id": 72,
                "name": "RelayedMessage",
                "nameLocation": "408:14:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 71,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 70,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "msgHash",
                      "nameLocation": "439:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 72,
                      "src": "423:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "423:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "422:25:2"
                },
                "src": "402:46:2"
              },
              {
                "anonymous": false,
                "eventSelector": "99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f",
                "id": 76,
                "name": "FailedRelayedMessage",
                "nameLocation": "459:20:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 75,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "msgHash",
                      "nameLocation": "496:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 76,
                      "src": "480:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "480:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "479:25:2"
                },
                "src": "453:52:2"
              },
              {
                "functionSelector": "6e296e45",
                "id": 81,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "xDomainMessageSender",
                "nameLocation": "579:20:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 77,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "599:2:2"
                },
                "returnParameters": {
                  "id": 80,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 79,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 81,
                      "src": "625:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 78,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "625:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "624:9:2"
                },
                "scope": 92,
                "src": "570:64:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 82,
                  "nodeType": "StructuredDocumentation",
                  "src": "720:233:2",
                  "text": " Sends a cross domain message to the target messenger.\n @param _target Target contract address.\n @param _message Message to send to the target.\n @param _gasLimit Gas limit for the provided message."
                },
                "functionSelector": "3dbb202b",
                "id": 91,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "sendMessage",
                "nameLocation": "967:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 89,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "_target",
                      "nameLocation": "987:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "979:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "979:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "1011:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "996:23:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "996:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88,
                      "mutability": "mutable",
                      "name": "_gasLimit",
                      "nameLocation": "1028:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "1021:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1021:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "978:60:2"
                },
                "returnParameters": {
                  "id": 90,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1047:0:2"
                },
                "scope": 92,
                "src": "958:90:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 93,
            "src": "196:854:2",
            "usedErrors": []
          }
        ],
        "src": "124:927:2"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
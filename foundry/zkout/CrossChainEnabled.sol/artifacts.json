{
  "contracts": {
    "node_modules/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol": {
      "CrossChainEnabled": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information for building cross-chain aware contracts. This abstract contract provides accessors and modifiers to control the execution flow when receiving cross-chain messages. Actual implementations of cross-chain aware contracts, which are based on this abstraction, will  have to inherit from a bridge-specific specialization. Such specializations are provided under `crosschain/<chain>/CrossChainEnabled<chain>.sol`. _Available since v4.6._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol\":\"CrossChainEnabled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol\":{\"keccak256\":\"0x1ec2f661e2b0bd06b245f7e847111d5b40d32380794bd2d791e89b0bdc3ef082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9466ccdfd19225a51b9b785e60f22b04220684b8c9f24e11b62b740ad77f761f\",\"dweb:/ipfs/QmUAXfC4rzW9cqVdNkXA5c4HgqxNRwzo2MbUV4wDT52tED\"]},\"node_modules/@openzeppelin/contracts/crosschain/errors.sol\":{\"keccak256\":\"0xa1e9b651a2427925598b49ef35da5930abc07859cfac5b9dfb1912f063a024b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c514518c36a3fb1c5f1a99d88857e93160c72ea1fd728c443406ad1acb43ae9a\",\"dweb:/ipfs/Qmc3oXjBNhdeM5cfWpsvewXZAhH34Scgna2W3MvLaiiapQ\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "node_modules/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/crosschain/CrossChainEnabled.sol",
        "exportedSymbols": {
          "CrossChainEnabled": [
            49
          ],
          "InvalidCrossChainSender": [
            59
          ],
          "NotCrossChainCall": [
            53
          ]
        },
        "id": 50,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "116:23:0"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/crosschain/errors.sol",
            "file": "./errors.sol",
            "id": 2,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 50,
            "sourceUnit": 60,
            "src": "141:22:0",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "CrossChainEnabled",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "165:496:0",
              "text": " @dev Provides information for building cross-chain aware contracts. This\n abstract contract provides accessors and modifiers to control the execution\n flow when receiving cross-chain messages.\n Actual implementations of cross-chain aware contracts, which are based on\n this abstraction, will  have to inherit from a bridge-specific\n specialization. Such specializations are provided under\n `crosschain/<chain>/CrossChainEnabled<chain>.sol`.\n _Available since v4.6._"
            },
            "fullyImplemented": false,
            "id": 49,
            "linearizedBaseContracts": [
              49
            ],
            "name": "CrossChainEnabled",
            "nameLocation": "680:17:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 14,
                  "nodeType": "Block",
                  "src": "847:76:0",
                  "statements": [
                    {
                      "condition": {
                        "id": 8,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "861:16:0",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6,
                            "name": "_isCrossChain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "862:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 7,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "862:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 12,
                      "nodeType": "IfStatement",
                      "src": "857:48:0",
                      "trueBody": {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9,
                            "name": "NotCrossChainCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "886:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 10,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "886:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11,
                        "nodeType": "RevertStatement",
                        "src": "879:26:0"
                      }
                    },
                    {
                      "id": 13,
                      "nodeType": "PlaceholderStatement",
                      "src": "915:1:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 4,
                  "nodeType": "StructuredDocumentation",
                  "src": "704:112:0",
                  "text": " @dev Throws if the current function call is not the result of a\n cross-chain execution."
                },
                "id": 15,
                "name": "onlyCrossChain",
                "nameLocation": "830:14:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 5,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "844:2:0"
                },
                "src": "821:102:0",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 35,
                  "nodeType": "Block",
                  "src": "1117:146:0",
                  "statements": [
                    {
                      "assignments": [
                        21
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 21,
                          "mutability": "mutable",
                          "name": "actual",
                          "nameLocation": "1135:6:0",
                          "nodeType": "VariableDeclaration",
                          "scope": 35,
                          "src": "1127:14:0",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 20,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1127:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 24,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 22,
                          "name": "_crossChainSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "1144:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1144:19:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1127:36:0"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25,
                          "name": "expected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "1177:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 26,
                          "name": "actual",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "1189:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1177:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 33,
                      "nodeType": "IfStatement",
                      "src": "1173:72:0",
                      "trueBody": {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 29,
                              "name": "actual",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21,
                              "src": "1228:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30,
                              "name": "expected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "1236:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 28,
                            "name": "InvalidCrossChainSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59,
                            "src": "1204:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address) pure"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1204:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 32,
                        "nodeType": "RevertStatement",
                        "src": "1197:48:0"
                      }
                    },
                    {
                      "id": 34,
                      "nodeType": "PlaceholderStatement",
                      "src": "1255:1:0"
                    }
                  ]
                },
                "documentation": {
                  "id": 16,
                  "nodeType": "StructuredDocumentation",
                  "src": "929:135:0",
                  "text": " @dev Throws if the current function call is not the result of a\n cross-chain execution initiated by `account`."
                },
                "id": 36,
                "name": "onlyCrossChainSender",
                "nameLocation": "1078:20:0",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 19,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "expected",
                      "nameLocation": "1107:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 36,
                      "src": "1099:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1099:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1098:18:0"
                },
                "src": "1069:194:0",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "documentation": {
                  "id": 37,
                  "nodeType": "StructuredDocumentation",
                  "src": "1269:112:0",
                  "text": " @dev Returns whether the current function call is the result of a\n cross-chain message."
                },
                "id": 42,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "_isCrossChain",
                "nameLocation": "1395:13:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 38,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1408:2:0"
                },
                "returnParameters": {
                  "id": 41,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 42,
                      "src": "1442:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1442:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1441:6:0"
                },
                "scope": 49,
                "src": "1386:62:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "documentation": {
                  "id": 43,
                  "nodeType": "StructuredDocumentation",
                  "src": "1454:277:0",
                  "text": " @dev Returns the address of the sender of the cross-chain message that\n triggered the current function call.\n IMPORTANT: Should revert with `NotCrossChainCall` if the current function\n call is not the result of a cross-chain message."
                },
                "id": 48,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "_crossChainSender",
                "nameLocation": "1745:17:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 44,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1762:2:0"
                },
                "returnParameters": {
                  "id": 47,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 46,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "1796:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1796:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1795:9:0"
                },
                "scope": 49,
                "src": "1736:69:0",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 50,
            "src": "662:1145:0",
            "usedErrors": []
          }
        ],
        "src": "116:1692:0"
      }
    },
    "node_modules/@openzeppelin/contracts/crosschain/errors.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/crosschain/errors.sol",
        "exportedSymbols": {
          "InvalidCrossChainSender": [
            59
          ],
          "NotCrossChainCall": [
            53
          ]
        },
        "id": 60,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 51,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "105:23:1"
          },
          {
            "errorSelector": "4a74df92",
            "id": 53,
            "name": "NotCrossChainCall",
            "nameLocation": "136:17:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:2:1"
            },
            "src": "130:26:1"
          },
          {
            "errorSelector": "ef25d32b",
            "id": 59,
            "name": "InvalidCrossChainSender",
            "nameLocation": "163:23:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "actual",
                  "nameLocation": "195:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "187:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "187:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "expected",
                  "nameLocation": "211:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59,
                  "src": "203:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "203:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "186:34:1"
            },
            "src": "157:64:1"
          }
        ],
        "src": "105:117:1"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
{
  "contracts": {
    "contracts/libs/TypeCasts.sol": {
      "TypeCasts": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/TypeCasts.sol\":\"TypeCasts\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52\",\"dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TypeCasts.sol:TypeCasts\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000009f123f89310cd475062e1f32df8e00aa6da6c5595cc57db29971938ceeefd6f1"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 0:\"contracts/libs/TypeCasts.sol\"\nobject \"TypeCasts_40\" {\n    code {\n        {\n            /// @src 0:73:427  \"library TypeCasts {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"TypeCasts_40_deployed\")\n            codecopy(_1, dataoffset(\"TypeCasts_40_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/libs/TypeCasts.sol\"\n    object \"TypeCasts_40_deployed\" {\n        code {\n            {\n                /// @src 0:73:427  \"library TypeCasts {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122039e3cade4cc62d4b19c08b6456795fbd434ea1e800ecd0a5bfba94c3819e400164736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000007855f292caaee13302853241b4c46b31ae98545d877f7add323761f81",
        "factoryDependencies": {}
      }
    },
    "contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol": {
      "IPortalTokenBridge": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "oldContract",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newContract",
                "type": "address"
              }
            ],
            "name": "ContractUpgraded",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "encodedVm",
                "type": "bytes"
              }
            ],
            "name": "completeTransferWithPayload",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              }
            ],
            "name": "isWrappedAsset",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "encoded",
                "type": "bytes"
              }
            ],
            "name": "parseTransferWithPayload",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "uint8",
                    "name": "payloadID",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "tokenAddress",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint16",
                    "name": "tokenChain",
                    "type": "uint16"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "to",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint16",
                    "name": "toChain",
                    "type": "uint16"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "fromAddress",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "bytes",
                    "name": "payload",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct IPortalTokenBridge.TransferWithPayload",
                "name": "transfer",
                "type": "tuple"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "recipientChain",
                "type": "uint16"
              },
              {
                "internalType": "bytes32",
                "name": "recipient",
                "type": "bytes32"
              },
              {
                "internalType": "uint32",
                "name": "nonce",
                "type": "uint32"
              },
              {
                "internalType": "bytes",
                "name": "payload",
                "type": "bytes"
              }
            ],
            "name": "transferTokensWithPayload",
            "outputs": [
              {
                "internalType": "uint64",
                "name": "sequence",
                "type": "uint64"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint16",
                "name": "tokenChainId",
                "type": "uint16"
              },
              {
                "internalType": "bytes32",
                "name": "tokenAddress",
                "type": "bytes32"
              }
            ],
            "name": "wrappedAsset",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransferWithPayload\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct IPortalTokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nonce\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol\":\"IPortalTokenBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol\":{\"keccak256\":\"0x10a66c1ec47cf1a63f7a825863303c1686e81460dbe5f561961021c79132601e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd944e1d339545085de0831365e3885751ca54ff5d2843cc2eb71521dea7aa8c\",\"dweb:/ipfs/QmUAm2Bf4MSyCTanUEs9W34qJ8J4oproCwf4WX68CQ4mEK\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "completeTransferWithPayload(bytes)": "c3f511c1",
            "isWrappedAsset(address)": "1a2be4da",
            "parseTransferWithPayload(bytes)": "ea63738d",
            "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)": "c5a5ebda",
            "wrappedAsset(uint16,bytes32)": "1ff1e286"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/mock/MockPortalBridge.sol": {
      "MockPortalBridge": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "contract MockToken",
                "name": "_token",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "oldContract",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newContract",
                "type": "address"
              }
            ],
            "name": "ContractUpgraded",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_originDomain",
                "type": "uint32"
              },
              {
                "internalType": "uint224",
                "name": "_nonce",
                "type": "uint224"
              },
              {
                "internalType": "address",
                "name": "_token",
                "type": "address"
              }
            ],
            "name": "adapterData",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "encodedVm",
                "type": "bytes"
              }
            ],
            "name": "completeTransferWithPayload",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "isWrappedAsset",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_originDomain",
                "type": "uint32"
              },
              {
                "internalType": "uint224",
                "name": "_nonce",
                "type": "uint224"
              },
              {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "mockPortalVaa",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "encoded",
                "type": "bytes"
              }
            ],
            "name": "parseTransferWithPayload",
            "outputs": [
              {
                "components": [
                  {
                    "internalType": "uint8",
                    "name": "payloadID",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "tokenAddress",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint16",
                    "name": "tokenChain",
                    "type": "uint16"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "to",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint16",
                    "name": "toChain",
                    "type": "uint16"
                  },
                  {
                    "internalType": "bytes32",
                    "name": "fromAddress",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "bytes",
                    "name": "payload",
                    "type": "bytes"
                  }
                ],
                "internalType": "struct IPortalTokenBridge.TransferWithPayload",
                "name": "transfer",
                "type": "tuple"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              },
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              },
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "transferTokensWithPayload",
            "outputs": [
              {
                "internalType": "uint64",
                "name": "sequence",
                "type": "uint64"
              }
            ],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              },
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "name": "wrappedAsset",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract MockToken\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_originDomain\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"_nonce\",\"type\":\"uint224\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"adapterData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedVm\",\"type\":\"bytes\"}],\"name\":\"completeTransferWithPayload\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWrappedAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_originDomain\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"_nonce\",\"type\":\"uint224\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mockPortalVaa\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encoded\",\"type\":\"bytes\"}],\"name\":\"parseTransferWithPayload\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"payloadID\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"tokenAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"tokenChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint16\",\"name\":\"toChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"fromAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct IPortalTokenBridge.TransferWithPayload\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"transferTokensWithPayload\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"sequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"wrappedAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockPortalBridge.sol\":\"MockPortalBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/libs/TypeCasts.sol\":{\"keccak256\":\"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52\",\"dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ\"]},\"contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol\":{\"keccak256\":\"0x10a66c1ec47cf1a63f7a825863303c1686e81460dbe5f561961021c79132601e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://fd944e1d339545085de0831365e3885751ca54ff5d2843cc2eb71521dea7aa8c\",\"dweb:/ipfs/QmUAm2Bf4MSyCTanUEs9W34qJ8J4oproCwf4WX68CQ4mEK\"]},\"contracts/mock/MockPortalBridge.sol\":{\"keccak256\":\"0x6aa78d984a914092abea42cbdb7848de3e3ce0a1c3282729f594272ecd512811\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://214b8bd1eebd0edb7320bb2b48211c3790ad9e2f066d456af0b2b603b9e5ee6c\",\"dweb:/ipfs/QmeC4mdiShDCPyFqJ71ix62YHyRTTcswKaMycuikhyUxdF\"]},\"contracts/mock/MockToken.sol\":{\"keccak256\":\"0x9ae34a5d2eac9e11b1150cde7c3a97250cf1ab258644567e0e2b0c115e973c5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1866da8bd0afde687292e95ebada6335cb8beec97b06fc81d504b1f3f04e77fc\",\"dweb:/ipfs/QmRYodU36i7JdQFQuTzq6WyLmbosR1Vc2qFZY8QmkxMfMD\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"MockPortalBridge.sol:MockPortalBridge\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[10]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.le\t@.BB0_12\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_18\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_37\n\tsub.s!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_14[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_26[0], r2, r6\n\tjump.ge\t@.BB0_47\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\t63, r6, r6\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_15[0], r6, r7\n\tjump.gt\t@.BB0_47\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_131\n\tadd\tr0, r0, r5\n.BB0_53:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_53\n.BB0_131:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_55\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_55:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_17[0], r0, r1\n\tld.1\t128, r2\n\tsub.s!\t96, r2, r3\n\tadd\tr0, r0, r3\n\tadd.lt\tr1, r0, r3\n\tand\t@CPI0_17[0], r2, r2\n\tsub!\tr2, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tadd.ne\tr3, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t160, r2\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t192, r3\n\tsub.s!\t@CPI0_27[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r0, stack-[7]\n\tadd\tr2, r0, stack-[8]\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tsload\tr1, r1\n\tld.1\t224, r2\n\tadd\tr2, r0, stack-[9]\n\tadd\t@CPI0_20[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_59\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t36, r2, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr2, r1\n\tadd\tr2, r0, stack-[9]\n\tadd\t4, r2, r1\n\tcontext.caller\tr2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_68\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_63\n.BB0_68:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.gt\t@.BB0_47\n\tadd\tstack-[9], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[6], r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r3\n\tadd\tr3, r0, stack-[9]\n\tadd\tstack-[8], r0, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @fun_adapterData, @DEFAULT_UNWIND\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[10]\n\tadd\t32, r4, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tadd\t64, r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r3\n\tsub\tr1, r3, r2\n\tsub.s\t32, r2, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[10], r0, r1\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r4\n\tjump\t@.BB0_35\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_137\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_137:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.le\t@.BB0_9\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_12:\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_20\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_25\n\tsub.s!\t@CPI0_13[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_27[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr4, r0, r1\n\tnear_call\tr0, @fun_adapterData, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[10]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n.BB0_35:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n.BB0_36:\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_70\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_14[0], r5, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r5, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r5, r6\n\tptr.add\tr1, r6, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_14[0], r4, r2\n\tjump.gt\t@.BB0_47\n\tadd\t31, r4, r7\n\tsub.s\t32, r0, r2\n\tand\tr7, r2, r7\n\tadd\t63, r7, r7\n\tand\tr7, r2, r7\n\tsub.s!\t@CPI0_15[0], r7, r8\n\tjump.le\t@.BB0_116\n.BB0_47:\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_9:\n\tsstore\tr0, r0\n\tadd\t1, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_3[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_37:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_27[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tst.1\t160, r2\n\tst.1\t192, r3\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tst.1\t224, r1\n\tadd\t96, r0, r1\n\tst.1\t128, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t32, r0, r1\n\tst.1\t256, r1\n\tadd\t128, r0, r1\n\tadd\t288, r0, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tsub.s\t256, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\t@CPI0_30[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_25:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t65535, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_70:\n\tsub.s!\t196, r3, r2\n\tjump.lt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r8\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t65535, r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t164, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_14[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_14[0], r2, r6\n\tjump.gt\t@.BB0_47\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\t63, r6, r6\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_15[0], r6, r7\n\tjump.gt\t@.BB0_47\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_135\n\tadd\tr0, r0, r5\n.BB0_81:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_81\n.BB0_135:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_83\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_83:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tsload\tr0, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_85\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_116:\n\tadd\t128, r7, r7\n\tst.1\t64, r7\n\tst.1\t128, r4\n\tadd\tr5, r4, r5\n\tadd\t36, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_136\n\tadd\tr0, r0, r6\n.BB0_119:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_119\n.BB0_136:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_121\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_121:\n\tadd\t160, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r12\n\tsub.s!\t@CPI0_16[0], r12, r1\n\tjump.gt\t@.BB0_47\n\tadd\t256, r12, r1\n\tst.1\t64, r1\n\tadd\t224, r12, r9\n\tadd\t96, r0, r1\n\tst.1\tr9, r1\n\tadd\t192, r12, r10\n\tst.1\tr10, r0\n\tadd\t160, r12, r11\n\tst.1\tr11, r0\n\tadd\t128, r12, r13\n\tst.1\tr13, r0\n\tadd\t96, r12, r14\n\tst.1\tr14, r0\n\tadd\t64, r12, r15\n\tst.1\tr15, r0\n\tst.1.inc\tr12, r0, r7\n\tst.1\tr7, r0\n\tadd\t@CPI0_17[0], r0, r1\n\tld.1\t128, r3\n\tsub.s!\t64, r3, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr1, r0, r4\n\tand\t@CPI0_17[0], r3, r5\n\tsub!\tr5, r0, r6\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI0_17[0], r5, r5\n\tadd.ne\tr4, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tld.1\t160, r1\n\tadd\tr1, r0, stack-[10]\n\tld.1\t192, r1\n\tsub.s!\t@CPI0_14[0], r1, r4\n\tjump.gt\t@.BB0_2\n\tadd\t160, r3, r8\n\tadd\t191, r1, r3\n\tadd\t@CPI0_17[0], r0, r5\n\tsub!\tr3, r8, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tadd\tr7, r0, r4\n\tadd\tr8, r0, stack-[9]\n\tand\t@CPI0_17[0], r8, r7\n\tand\t@CPI0_17[0], r3, r3\n\tsub!\tr3, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr3, r7, r3\n\tadd\tr4, r0, r7\n\tsub.s!\t@CPI0_17[0], r3, r3\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r3\n\tjump.ne\t@.BB0_2\n\tadd\t160, r1, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_14[0], r3, r5\n\tjump.gt\t@.BB0_47\n\tadd\t31, r3, r5\n\tand\tr5, r2, r5\n\tadd\t63, r5, r5\n\tand\tr5, r2, r2\n\tld.1\t64, r4\n\tadd\tr4, r2, r2\n\tadd\tr4, r0, stack-[8]\n\tsub!\tr2, r4, r5\n\tadd\t0, r0, r5\n\tadd.lt\t1, r0, r5\n\tsub.s!\t@CPI0_14[0], r2, r6\n\tjump.gt\t@.BB0_47\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_47\n\tst.1\t64, r2\n\tadd\tstack-[8], r0, r2\n\tst.1.inc\tr2, r3, r2\n\tadd\t192, r1, r1\n\tadd\tr3, r1, r5\n\tsub.s!\tstack-[9], r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\tr9, r0, stack-[2]\n\tadd\tr10, r0, stack-[9]\n\tadd\tr11, r0, stack-[7]\n\tadd\tr12, r0, stack-[3]\n\tadd\tr13, r0, stack-[6]\n\tadd\tr14, r0, stack-[5]\n\tadd\tr15, r0, stack-[1]\n\tadd\tr7, r0, stack-[4]\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[8], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tadd\tstack-[1], r0, r5\n\tst.1\tr5, r1\n\tadd\t32, r0, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[10]\n\tst.1.inc\tr4, r1, r1\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tand\t255, r2, r2\n\tst.1\tr1, r2\n\tadd\tstack-[4], r0, r1\n\tld.1\tr1, r1\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tld.1\tr5, r1\n\tadd\t96, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\t160, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tand\t65535, r1, r1\n\tadd\t192, r4, r2\n\tst.1\tr2, r1\n\tadd\tstack-[9], r0, r1\n\tld.1\tr1, r1\n\tadd\t224, r4, r2\n\tst.1\tr2, r1\n\tld.1\tr3, r1\n\tadd\t256, r4, r2\n\tadd\t256, r0, r3\n\tst.1\tr2, r3\n\tadd\t288, r4, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tjump\t@.BB0_36\n.BB0_85:\n\tadd\t1, r1, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tsload\tr1, r2\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\tr8, r0, stack-[8]\n\tst.1\tr1, r8\n\tadd\t36, r4, r1\n\tcontext.this\tr3\n\tst.1\tr1, r3\n\tadd\t@CPI0_18[0], r0, r1\n\tst.1\tr4, r1\n\tadd\tr4, r0, stack-[10]\n\tadd\t4, r4, r1\n\tcontext.caller\tr3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_87\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_96\n.BB0_87:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[10], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_19[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_134\n\tadd\tr0, r0, r7\n.BB0_89:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_89\n.BB0_134:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_91\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[10], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_91:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_92\n.BB0_96:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[10], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_14[0], r1, r4\n\tjump.gt\t@.BB0_47\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_47\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_20[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_2[0], r1, r1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_59\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tstack-[8], r0, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[9]\n\tadd\t4, r3, r1\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_108\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[9], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_104\n.BB0_108:\n\tadd\tstack-[9], r0, r1\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.gt\t@.BB0_47\n\tadd\tstack-[9], r0, r3\n\tst.1\t64, r3\n\tsload\tr0, r1\n\tand\t@CPI0_14[0], r1, r1\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_24[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_59:\n\trevert\n.BB0_92:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_133\n\tadd\tr0, r0, r6\n.BB0_94:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_94\n.BB0_133:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_67\n\tjump\t@.BB0_66\n.BB0_63:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_130\n\tadd\tr0, r0, r6\n.BB0_65:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_65\n.BB0_130:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_67\n.BB0_66:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_67:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_104:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_132\n\tadd\tr0, r0, r6\n.BB0_106:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_106\n.BB0_132:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_67\n\tjump\t@.BB0_66\n.func_end0:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin1:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end1:\n\nabi_encode_bytes:\n.func_begin2:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r2\n.BB2_2:\n\tadd\tr2, r1, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nfinalize_allocation:\n.func_begin3:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI3_0[0], r1, r3\n\tjump.gt\t@.BB3_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB3_2\n\tst.1\t64, r1\n\tret\n.BB3_2:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_adapterData:\n.func_begin4:\n\tadd\tr1, r0, r4\n\tand\t@CPI4_0[0], r3, r3\n\tld.1\t64, r1\n\tadd\t96, r1, r5\n\tst.1\tr5, r3\n\tand\t@CPI4_1[0], r2, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tand\t@CPI4_2[0], r4, r2\n\tadd\t32, r1, r3\n\tst.1\tr3, r2\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI4_3[0], r1, r2\n\tjump.ge\t@.BB4_1\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tret\n.BB4_1:\n\tadd\t@CPI4_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__cxa_throw:\n.func_begin5:\n\trevert\n.func_end5:\n\n__farcall:\n.func_begin6:\n.tmp0:\n\tfar_call\tr1, r2, @.BB6_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n__staticcall:\n.func_begin7:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB7_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI4_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 2682712666\nCPI0_6:\n\t.cell 3315985369\nCPI0_7:\n\t.cell 3315985370\nCPI0_8:\n\t.cell 3932386189\nCPI0_9:\n\t.cell 2682712667\nCPI0_10:\n\t.cell 3287617985\nCPI0_11:\n\t.cell 439084250\nCPI0_12:\n\t.cell 535945862\nCPI0_13:\n\t.cell 2351589163\nCPI0_14:\nCPI3_0:\n\t.cell 18446744073709551615\nCPI0_15:\n\t.cell 18446744073709551487\nCPI0_16:\n\t.cell 18446744073709551359\nCPI0_17:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_18:\n\t.cell 16156842317565293874272834530371880720966471053262404558597773956279093428224\nCPI0_19:\n\t.cell 7922816251426433759354395033600\nCPI0_20:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_21:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_22:\n\t.cell 30118423258652246046632470796666483989585745284173815106108394894625632944128\nCPI0_23:\nCPI3_2:\nCPI4_5:\n\t.cell 2852213850513516153367582212096\nCPI0_24:\n\t.cell 2535301200456458802993406410752\nCPI0_25:\nCPI3_1:\nCPI4_4:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_26:\n\t.cell 18446744073709551616\nCPI0_27:\nCPI4_1:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI0_28:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI0_29:\n\t.cell 5387515050969974956360988622848\nCPI0_30:\n\t.cell 4722366482869645213696\nCPI0_31:\n\t.cell 2535301202817642044428229017600\nCPI4_3:\n\t.cell 18446744073709551488\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "adapterData(uint32,uint224,address)": "8c2a672b",
            "completeTransferWithPayload(bytes)": "c3f511c1",
            "isWrappedAsset(address)": "1a2be4da",
            "mockPortalVaa(uint32,uint224,uint256)": "9fe6f25b",
            "parseTransferWithPayload(bytes)": "ea63738d",
            "transferTokensWithPayload(address,uint256,uint16,bytes32,uint32,bytes)": "c5a5ebda",
            "wrappedAsset(uint16,bytes32)": "1ff1e286"
          }
        },
        "irOptimized": "/// @use-src 1:\"contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol\", 2:\"contracts/mock/MockPortalBridge.sol\"\nobject \"MockPortalBridge_400\" {\n    code {\n        {\n            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockPortalBridge_400\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n            sstore(/** @src -1:-1:-1 */ 0, 0)\n            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n            sstore(/** @src 2:408:422  \"token = _token\" */ 0x01, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ or(and(sload(/** @src 2:408:422  \"token = _token\" */ 0x01), /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"MockPortalBridge_400_deployed\")\n            codecopy(_3, dataoffset(\"MockPortalBridge_400_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 0:\"contracts/libs/TypeCasts.sol\", 2:\"contracts/mock/MockPortalBridge.sol\"\n    object \"MockPortalBridge_400_deployed\" {\n        code {\n            {\n                /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x1a2be4da {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        pop(abi_decode_address())\n                        mstore(_1, /** @src 2:998:1002  \"true\" */ 0x01)\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        return(_1, 32)\n                    }\n                    case 0x1ff1e286 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        if iszero(eq(value, and(value, 0xffff))) { revert(_4, _4) }\n                        let value_1 := and(sload(1), sub(shl(160, 1), 1))\n                        let memPos := mload(_2)\n                        mstore(memPos, value_1)\n                        return(memPos, 32)\n                    }\n                    case 0x8c2a672b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0 := abi_decode_uint32()\n                        let value1 := abi_decode_uint224()\n                        let value_2 := calldataload(68)\n                        if iszero(eq(value_2, and(value_2, sub(shl(160, 1), 1)))) { revert(_4, _4) }\n                        let ret := fun_adapterData(value0, value1, value_2)\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 32)\n                        return(memPos_1, sub(abi_encode_bytes(ret, add(memPos_1, 32)), memPos_1))\n                    }\n                    case 0x9fe6f25b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_uint32()\n                        let value1_1 := abi_decode_uint224()\n                        /// @src 2:2417:2459  \"abi.encode(_originDomain, _nonce, _amount)\"\n                        let expr_mpos := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(_2)\n                        mstore(/** @src 2:2417:2459  \"abi.encode(_originDomain, _nonce, _amount)\" */ add(expr_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 32), and(value0_1, 0xffffffff))\n                        mstore(add(/** @src 2:2417:2459  \"abi.encode(_originDomain, _nonce, _amount)\" */ expr_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _2), and(value1_1, sub(shl(224, 1), 1)))\n                        mstore(add(/** @src 2:2417:2459  \"abi.encode(_originDomain, _nonce, _amount)\" */ expr_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96), calldataload(68))\n                        /// @src 2:2417:2459  \"abi.encode(_originDomain, _nonce, _amount)\"\n                        mstore(expr_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96)\n                        /// @src 2:2417:2459  \"abi.encode(_originDomain, _nonce, _amount)\"\n                        finalize_allocation_5770(expr_mpos)\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 32)\n                        return(memPos_2, sub(abi_encode_bytes(expr_mpos, add(memPos_2, 32)), memPos_2))\n                    }\n                    case 0xc3f511c1 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let offset := calldataload(_3)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        let value0_2 := abi_decode_bytes(add(_3, offset), calldatasize())\n                        if slt(sub(/** @src 2:1190:1273  \"abi.decode(...\" */ add(value0_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(/** @src 2:1190:1273  \"abi.decode(...\" */ value0_2)), value0_2), /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96) { revert(_4, _4) }\n                        let value_3 := mload(/** @src 2:1190:1273  \"abi.decode(...\" */ add(value0_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 32))\n                        if iszero(eq(value_3, and(value_3, 0xffffffff))) { revert(_4, _4) }\n                        let value_4 := mload(add(/** @src 2:1190:1273  \"abi.decode(...\" */ value0_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _2))\n                        if iszero(eq(value_4, and(value_4, sub(shl(224, 1), 1)))) { revert(_4, _4) }\n                        let value_5 := mload(add(/** @src 2:1190:1273  \"abi.decode(...\" */ value0_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96))\n                        let _5 := sub(shl(160, 1), 1)\n                        let value_6 := and(sload(1), _5)\n                        /// @src 2:1284:1315  \"token.mint(msg.sender, _amount)\"\n                        if iszero(extcodesize(value_6))\n                        {\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 2:1284:1315  \"token.mint(msg.sender, _amount)\"\n                        let _6 := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(_2)\n                        /// @src 2:1284:1315  \"token.mint(msg.sender, _amount)\"\n                        mstore(_6, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ shl(224, 0x40c10f19))\n                        mstore(/** @src 2:1284:1315  \"token.mint(msg.sender, _amount)\" */ add(_6, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _3), /** @src 2:1295:1305  \"msg.sender\" */ caller())\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        mstore(add(/** @src 2:1284:1315  \"token.mint(msg.sender, _amount)\" */ _6, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 36), value_5)\n                        /// @src 2:1284:1315  \"token.mint(msg.sender, _amount)\"\n                        let _7 := call(gas(), value_6, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _4, /** @src 2:1284:1315  \"token.mint(msg.sender, _amount)\" */ _6, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 68, /** @src 2:1284:1315  \"token.mint(msg.sender, _amount)\" */ _6, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _4)\n                        /// @src 2:1284:1315  \"token.mint(msg.sender, _amount)\"\n                        if iszero(_7)\n                        {\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 2:1284:1315  \"token.mint(msg.sender, _amount)\"\n                        if _7 { finalize_allocation_4541(_6) }\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        let value_7 := and(sload(1), _5)\n                        /// @src 2:1514:1564  \"adapterData(_originDomain, _nonce, address(token))\"\n                        let expr_mpos_1 := fun_adapterData(value_3, value_4, /** @src 2:1549:1563  \"address(token)\" */ value_7)\n                        /// @src 2:1426:1578  \"abi.encode(...\"\n                        let expr_mpos_2 := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(_2)\n                        mstore(/** @src 2:1426:1578  \"abi.encode(...\" */ add(expr_mpos_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 32), value_7)\n                        mstore(add(/** @src 2:1426:1578  \"abi.encode(...\" */ expr_mpos_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _2), _2)\n                        /// @src 2:1426:1578  \"abi.encode(...\"\n                        let _8 := sub(/** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ abi_encode_bytes(expr_mpos_1, add(/** @src 2:1426:1578  \"abi.encode(...\" */ expr_mpos_2, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96)), /** @src 2:1426:1578  \"abi.encode(...\" */ expr_mpos_2)\n                        mstore(expr_mpos_2, add(_8, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ not(31)))\n                        /// @src 2:1426:1578  \"abi.encode(...\"\n                        finalize_allocation(expr_mpos_2, _8)\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, 32)\n                        return(memPos_3, sub(abi_encode_bytes(expr_mpos_2, add(memPos_3, 32)), memPos_3))\n                    }\n                    case 0xc5a5ebda {\n                        if slt(add(calldatasize(), not(3)), 192) { revert(_4, _4) }\n                        pop(abi_decode_address())\n                        let value_8 := calldataload(36)\n                        let value_9 := calldataload(68)\n                        if iszero(eq(value_9, and(value_9, 0xffff))) { revert(_4, _4) }\n                        let value_10 := calldataload(132)\n                        if iszero(eq(value_10, and(value_10, 0xffffffff))) { revert(_4, _4) }\n                        let offset_1 := calldataload(164)\n                        let _9 := 0xffffffffffffffff\n                        if gt(offset_1, _9) { revert(_4, _4) }\n                        pop(abi_decode_bytes(add(_3, offset_1), calldatasize()))\n                        let _10 := sload(_4)\n                        let sum := add(_10, 1)\n                        if gt(_10, sum)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, 36)\n                        }\n                        sstore(_4, sum)\n                        let _11 := sub(shl(160, 1), 1)\n                        let value_11 := and(sload(1), _11)\n                        /// @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\"\n                        let _12 := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(_2)\n                        /// @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\"\n                        mstore(_12, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ shl(224, 0x23b872dd))\n                        mstore(/** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ add(_12, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _3), /** @src 2:695:705  \"msg.sender\" */ caller())\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        mstore(add(/** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ _12, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 36), /** @src 2:715:719  \"this\" */ address())\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        mstore(add(/** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ _12, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 68), value_8)\n                        /// @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\"\n                        let _13 := call(gas(), value_11, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _4, /** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ _12, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 100, /** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ _12, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 32)\n                        /// @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\"\n                        if iszero(_13)\n                        {\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\"\n                        if _13\n                        {\n                            let _14 := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 32\n                            /// @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\"\n                            if gt(/** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _14, /** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ returndatasize()) { _14 := returndatasize() }\n                            finalize_allocation(_12, _14)\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            if slt(sub(/** @src 2:676:729  \"token.transferFrom(msg.sender, address(this), amount)\" */ add(_12, _14), /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _12), 32) { revert(_4, _4) }\n                            let value_12 := mload(_12)\n                            if iszero(eq(value_12, iszero(iszero(value_12)))) { revert(_4, _4) }\n                        }\n                        let value_13 := and(sload(1), _11)\n                        /// @src 2:739:757  \"token.burn(amount)\"\n                        if iszero(extcodesize(value_13))\n                        {\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 2:739:757  \"token.burn(amount)\"\n                        let _15 := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(_2)\n                        /// @src 2:739:757  \"token.burn(amount)\"\n                        mstore(_15, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ shl(227, 0x0852cd8d))\n                        mstore(/** @src 2:739:757  \"token.burn(amount)\" */ add(_15, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _3), value_8)\n                        /// @src 2:739:757  \"token.burn(amount)\"\n                        let _16 := call(gas(), value_13, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _4, /** @src 2:739:757  \"token.burn(amount)\" */ _15, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 36, /** @src 2:739:757  \"token.burn(amount)\" */ _15, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _4)\n                        /// @src 2:739:757  \"token.burn(amount)\"\n                        if iszero(_16)\n                        {\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            let pos_2 := mload(_2)\n                            returndatacopy(pos_2, _4, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 2:739:757  \"token.burn(amount)\"\n                        if _16\n                        {\n                            finalize_allocation_4541(_15)\n                            /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                            _4 := _4\n                        }\n                        let converted := and(sload(_4), _9)\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, converted)\n                        return(memPos_4, 32)\n                    }\n                    case 0xea63738d {\n                        if callvalue() { revert(_4, _4) }\n                        let _17 := 32\n                        if slt(add(calldatasize(), not(3)), _17) { revert(_4, _4) }\n                        let offset_2 := calldataload(_3)\n                        let _18 := 0xffffffffffffffff\n                        if gt(offset_2, _18) { revert(_4, _4) }\n                        let value0_3 := abi_decode_bytes(add(_3, offset_2), calldatasize())\n                        let memPtr := mload(_2)\n                        let _19 := 256\n                        let newFreePtr := add(memPtr, _19)\n                        if or(gt(newFreePtr, _18), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        mstore(memPtr, _4)\n                        let _20 := add(memPtr, _17)\n                        mstore(_20, _4)\n                        let _21 := add(memPtr, _2)\n                        mstore(_21, _4)\n                        let _22 := add(memPtr, 96)\n                        mstore(_22, _4)\n                        let _23 := add(memPtr, 128)\n                        mstore(_23, _4)\n                        let _24 := add(memPtr, 160)\n                        mstore(_24, _4)\n                        let _25 := add(memPtr, 192)\n                        mstore(_25, _4)\n                        let offset_3 := add(memPtr, 224)\n                        mstore(offset_3, 96)\n                        /// @src 2:1778:1849  \"abi.decode(...\"\n                        let _26 := add(value0_3, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(/** @src 2:1778:1849  \"abi.decode(...\" */ value0_3))\n                        let _27 := add(_26, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _17)\n                        if slt(sub(/** @src 2:1778:1849  \"abi.decode(...\" */ _26, value0_3), /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _2) { revert(_4, _4) }\n                        let value_14 := mload(/** @src 2:1778:1849  \"abi.decode(...\" */ add(value0_3, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _17))\n                        let offset_4 := mload(add(/** @src 2:1778:1849  \"abi.decode(...\" */ value0_3, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ _2))\n                        if gt(offset_4, _18) { revert(_4, _4) }\n                        let _28 := add(/** @src 2:1778:1849  \"abi.decode(...\" */ value0_3, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ offset_4)\n                        if iszero(slt(add(_28, 63), _27)) { revert(_4, _4) }\n                        let _29 := mload(add(_28, _17))\n                        let _30 := array_allocation_size_bytes(_29)\n                        let memPtr_1 := mload(_2)\n                        finalize_allocation(memPtr_1, _30)\n                        mstore(memPtr_1, _29)\n                        if gt(add(add(_28, _29), _2), _27) { revert(_4, _4) }\n                        copy_memory_to_memory_with_cleanup(add(_28, _2), add(memPtr_1, _17), _29)\n                        /// @src 2:1859:1885  \"transfer.payload = payload\"\n                        mstore(/** @src 2:1859:1875  \"transfer.payload\" */ offset_3, /** @src 2:1859:1885  \"transfer.payload = payload\" */ memPtr_1)\n                        /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                        mstore(_21, value_14)\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _17)\n                        mstore(add(memPos_5, _17), and(mload(memPtr), 0xff))\n                        mstore(add(memPos_5, _2), mload(_20))\n                        mstore(add(memPos_5, 96), mload(_21))\n                        let memberValue0 := mload(_22)\n                        let _31 := 0xffff\n                        mstore(add(memPos_5, 128), and(memberValue0, _31))\n                        mstore(add(memPos_5, 160), mload(_23))\n                        mstore(add(memPos_5, 192), and(mload(_24), _31))\n                        mstore(add(memPos_5, 224), mload(_25))\n                        let memberValue0_1 := mload(offset_3)\n                        mstore(add(memPos_5, _19), _19)\n                        return(memPos_5, sub(abi_encode_bytes(memberValue0_1, add(memPos_5, 288)), memPos_5))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_uint32() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_uint224() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(224, 1), 1)))) { revert(0, 0) }\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function finalize_allocation_4541(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_5770(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_bytes(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                let _2 := array_allocation_size_bytes(_1)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\"\n                array := memPtr\n            }\n            /// @ast-id 380 @src 2:1944:2251  \"function adapterData(...\"\n            function fun_adapterData(var_originDomain, var_nonce, var_token) -> var_mpos\n            {\n                /// @src 2:2113:2244  \"abi.encode(...\"\n                let expr_377_mpos := /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ mload(64)\n                mstore(/** @src 2:2113:2244  \"abi.encode(...\" */ add(expr_377_mpos, 0x20), /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ and(var_originDomain, 0xffffffff))\n                mstore(add(/** @src 2:2113:2244  \"abi.encode(...\" */ expr_377_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 64), and(var_nonce, sub(shl(224, 1), 1)))\n                mstore(add(/** @src 2:2113:2244  \"abi.encode(...\" */ expr_377_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96), and(/** @src 2:2196:2230  \"TypeCasts.addressToBytes32(_token)\" */ var_token, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ sub(shl(160, 1), 1)))\n                /// @src 2:2113:2244  \"abi.encode(...\"\n                mstore(expr_377_mpos, /** @src 2:265:2468  \"contract MockPortalBridge is IPortalTokenBridge {...\" */ 96)\n                /// @src 2:2113:2244  \"abi.encode(...\"\n                finalize_allocation_5770(expr_377_mpos)\n                /// @src 2:2094:2244  \"return...\"\n                var_mpos := expr_377_mpos\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200425a1d4a6b5d318f3482725d4d8e8fb2d27d0f8b34d575010e8557ad4aebd7564736f6c63430008130033\"\n    }\n}\n",
        "hash": "010001131a942320a5e8af1aa78f85ede4329e08f1820fd893932fbeb8b0dbf0",
        "factoryDependencies": {}
      }
    },
    "contracts/mock/MockToken.sol": {
      "MockToken": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mock/MockToken.sol\":\"MockToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/mock/MockToken.sol\":{\"keccak256\":\"0x9ae34a5d2eac9e11b1150cde7c3a97250cf1ab258644567e0e2b0c115e973c5b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1866da8bd0afde687292e95ebada6335cb8beec97b06fc81d504b1f3f04e77fc\",\"dweb:/ipfs/QmRYodU36i7JdQFQuTzq6WyLmbosR1Vc2qFZY8QmkxMfMD\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"MockToken.sol:MockToken\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[4]\n\tptr.add\tr1, r0, r4\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr4, r0, r1\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_14\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_106\n\tld\tr4, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.le\t@.BB0_16\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.le\t@.BB0_23\n\tsub.s!\t@CPI0_4[0], r2, r3\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_7[0], r2, r3\n\tjump.eq\t@.BB0_47\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_106\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_113\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_23[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_24[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB0_89\n.BB0_14:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_106\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_30\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_54\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.ne\t@.BB0_106\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_106\n\tadd\t53, r0, r1\n\tjump\t@.BB0_22\n.BB0_23:\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.eq\t@.BB0_58\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.eq\t@.BB0_63\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.ne\t@.BB0_106\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_106\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tjump\t@.BB0_46\n.BB0_30:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_67\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.eq\t@.BB0_76\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_106\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_106\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tptr.add\tr4, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tstack-[3], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tptr.add.s\t36, r3, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[3], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.eq\t@.BB0_93\n\tjump\t@.BB0_114\n.BB0_39:\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.eq\t@.BB0_78\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_106\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t36, r4, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_19[0], r3, r2\n\tjump.gt\t@.BB0_106\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[4]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n.BB0_46:\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n.BB0_22:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_47:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_106\n\tadd\t55, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr2, r6, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_53\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_90\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_101\n.BB0_51:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_106\n\tadd\t54, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.eq\t@.BB0_84\n.BB0_53:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_54:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_83\n.BB0_58:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r5\n\tsub.s!\t@CPI0_19[0], r5, r1\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r4\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_92\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t31, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_63:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tcontext.caller\tr4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_86\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t33, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_67:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_19[0], r3, r1\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_19[0], r1, r1\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t68, r4, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_116\n\tadd\tstack-[2], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_115\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_76:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_106\n\tadd\t18, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_78:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r1, r1\n\tjump.lt\t@.BB0_106\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_106\n\tptr.add.s\t4, r4, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_19[0], r2, r1\n\tjump.gt\t@.BB0_106\n\tptr.add.s\t36, r4, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n.BB0_82:\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_83:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_84:\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_94\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_110\n.BB0_86:\n\tadd\tr2, r0, stack-[4]\n\tst.1\t0, r4\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tadd\tstack-[3], r0, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\tstack-[4], r3, r1\n\tjump.ge\t@.BB0_96\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_31[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_32[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB0_89:\n\tst.1\tr2, r3\n\tadd\t@CPI0_25[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_90:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_98\n\tjump\t@.BB0_95\n.BB0_92:\n\tadd\t53, r0, r1\n\tsload\tr1, r3\n\tadd\tr3, r4, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tand!\t1, r3, r3\n\tjump.eq\t@.BB0_102\n.BB0_93:\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_94:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_107\n.BB0_95:\n\tadd\t32, r0, r1\n\tjump\t@.BB0_112\n.BB0_96:\n\tadd\tr3, r0, stack-[1]\n\tst.1\t0, r2\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tadd\tstack-[4], r0, r3\n\tsub\tstack-[1], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\t53, r0, r1\n\tsload\tr1, r2\n\tsub\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_30[0], r0, r4\n\tadd\tstack-[3], r0, r5\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_104\n.BB0_98:\n\tadd\t@CPI0_27[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_99:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_99\n\tadd\t192, r3, r1\n.BB0_101:\n\tjump\t@.BB0_110\n.BB0_102:\n\tadd\tr4, r0, stack-[3]\n\tsstore\tr1, r2\n\tst.1\t0, r5\n\tadd\t51, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[4]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_106\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[3], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_30[0], r0, r4\n\tadd\tr0, r0, r5\n.BB0_104:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_106\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_106:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_107:\n\tadd\t@CPI0_42[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_108:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_108\n\tadd\t192, r3, r1\n.BB0_110:\n\tsub.s\t97, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.le\t@.BB0_112\n\tadd\t@CPI0_38[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_39[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_112:\n\tadd\t128, r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_113:\n\tsub\tr1, r3, r3\n.BB0_114:\n\tadd\tstack-[2], r0, r1\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_83\n.BB0_115:\n\tsub\tr1, r3, r3\n\tadd\tr4, r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n.BB0_116:\n\tadd\tr4, r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[2], r0, r3\n\tjump\t@.BB0_82\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tadd\t64, r1, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_transfer:\n.func_begin2:\n\tnop\tstack+=[5]\n\tadd\tr3, r0, stack-[5]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tand!\t@CPI2_0[0], r2, stack-[3]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.lt\t@.BB2_8\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB2_2\n.BB2_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 1086394136\nCPI0_3:\n\t.cell 2514000704\nCPI0_4:\n\t.cell 2835717306\nCPI0_5:\n\t.cell 2835717307\nCPI0_6:\n\t.cell 3714247998\nCPI0_7:\n\t.cell 2514000705\nCPI0_8:\n\t.cell 2757214935\nCPI0_9:\n\t.cell 1086394137\nCPI0_10:\n\t.cell 1117154408\nCPI0_11:\n\t.cell 1889567281\nCPI0_12:\n\t.cell 599290588\nCPI0_13:\n\t.cell 599290589\nCPI0_14:\n\t.cell 826074471\nCPI0_15:\n\t.cell 961581905\nCPI0_16:\n\t.cell 117300739\nCPI0_17:\n\t.cell 157198259\nCPI0_18:\n\t.cell 404098525\nCPI0_19:\nCPI2_0:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_20:\n\t.cell 2535301202817642044428229017600\nCPI0_21:\n\t.cell 2535301200456458802993406410752\nCPI0_22:\nCPI2_2:\nCPI3_2:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_23:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_24:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_25:\nCPI2_7:\nCPI3_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_26:\nCPI2_8:\nCPI3_8:\n\t.cell 10458117451882892562347801444352\nCPI0_27:\n\t.cell 30148980456718914367279254941528755963179627010946392082519497346671089299886\nCPI0_28:\n\t.cell 18446744073709551487\nCPI0_29:\nCPI2_3:\nCPI3_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_30:\nCPI2_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_31:\n\t.cell 44957423563285989266247004906403561635230327756000124389404269791890710200320\nCPI0_32:\n\t.cell 31354931781638678494316026001312189103416802390932084224065329695412615668078\nCPI0_33:\n\t.cell 31354931781638678494316026001340845558170976982936511063842609339963588896115\nCPI0_34:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_35:\n\t.cell 10458117454244075803782624051200\nCPI0_36:\n\t.cell 31354931781638678563069525067809233856775101976563302031013534919694566519552\nCPI0_37:\n\t.cell 7922816253787617000789217640448\nCPI0_38:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_39:\n\t.cell 2852213850513516153367582212096\nCPI0_40:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_41:\n\t.cell 7922816251426433759354395033600\nCPI0_42:\n\t.cell 33502907836418749244169045844382937189522934634747984393157770024170991419832\nCPI2_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI2_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI2_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI2_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI2_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI3_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "burn(uint256)": "42966c68",
            "decimals()": "313ce567",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "mint(address,uint256)": "40c10f19",
            "name()": "06fdde03",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": "/// @use-src 3:\"contracts/mock/MockToken.sol\", 4:\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 5:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\", 6:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\", 7:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\", 9:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\"\nobject \"MockToken_432\" {\n    code {\n        {\n            /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MockToken_432_deployed\")\n            codecopy(_1, dataoffset(\"MockToken_432_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 3:\"contracts/mock/MockToken.sol\", 5:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\", 9:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\"\n    object \"MockToken_432_deployed\" {\n        code {\n            {\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 5:2602:2607  \"_name\" */ 0x36)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 5:2602:2607  \"_name\" */ 0x36)\n                            /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                            let dataPos := 33502907836418749244169045844382937189522934634747984393157770024170991419832\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address_6692()\n                        /// @src 5:4964:4970  \"amount\"\n                        fun_approve(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:4964:4970  \"amount\" */ value0, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 5:3700:3712  \"_totalSupply\" */ 0x35)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address_6692()\n                        let value1 := abi_decode_address()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 9:965:975  \"msg.sender\" */ caller())\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 5:11598:11841  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 5:11602:11639  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 5:11622:11639  \"type(uint256).max\" */ not(0)))\n                        /// @src 5:11598:11841  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                            if /** @src 5:11663:11689  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 5:11790:11815  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ sub(/** @src 5:11790:11815  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 5:5782:5788  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 5:3544:3546  \"18\" */ 0x12)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address_6692()\n                        mstore(_4, /** @src 9:965:975  \"msg.sender\" */ caller())\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        /// @src 5:6379:6417  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:6379:6417  \"allowance(owner, spender) + addedValue\" */ value0_2, checked_add_uint256(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ sload(keccak256(_4, _2)), calldataload(36)))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address_6692()\n                        let value_1 := calldataload(36)\n                        let _11 := and(/** @src 5:8961:8982  \"account != address(0)\" */ value0_3, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ sub(shl(160, 1), 1))\n                        if /** @src 5:8961:8982  \"account != address(0)\" */ iszero(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _11)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 31)\n                            mstore(add(memPtr_1, 68), \"ERC20: mint to the zero address\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 5:9089:9111  \"_totalSupply += amount\" */ 0x35, checked_add_uint256(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ sload(/** @src 5:9089:9111  \"_totalSupply += amount\" */ 0x35), value_1))\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        mstore(_4, _11)\n                        mstore(32, /** @src 5:9257:9266  \"_balances\" */ 0x33)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let dataSlot := keccak256(_4, _2)\n                        sstore(dataSlot, add(sload(/** @src 5:9257:9285  \"_balances[account] += amount\" */ dataSlot), /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ value_1))\n                        /// @src 5:9310:9347  \"Transfer(address(0), account, amount)\"\n                        let _12 := /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ mload(_2)\n                        mstore(_12, value_1)\n                        /// @src 5:9310:9347  \"Transfer(address(0), account, amount)\"\n                        log3(_12, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 32, /** @src 5:9310:9347  \"Transfer(address(0), account, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _4, /** @src 5:9310:9347  \"Transfer(address(0), account, amount)\" */ _11)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        return(_4, _4)\n                    }\n                    case 0x42966c68 {\n                        if callvalue() { revert(_4, _4) }\n                        let _13 := 32\n                        if slt(add(calldatasize(), not(3)), _13) { revert(_4, _4) }\n                        let value_2 := calldataload(_3)\n                        if /** @src 5:9816:9837  \"account != address(0)\" */ iszero(/** @src 3:371:381  \"msg.sender\" */ caller())\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), _13)\n                            mstore(add(memPtr_2, 36), 33)\n                            mstore(add(memPtr_2, 68), \"ERC20: burn from the zero addres\")\n                            mstore(add(memPtr_2, 100), \"s\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(_4, /** @src 3:371:381  \"msg.sender\" */ caller())\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        mstore(_13, /** @src 5:9971:9980  \"_balances\" */ 0x33)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let _14 := sload(keccak256(_4, _2))\n                        if /** @src 5:10007:10031  \"accountBalance >= amount\" */ lt(_14, value_2)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), _13)\n                            mstore(add(memPtr_3, 36), 34)\n                            mstore(add(memPtr_3, 68), \"ERC20: burn amount exceeds balan\")\n                            mstore(add(memPtr_3, 100), \"ce\")\n                            revert(memPtr_3, 132)\n                        }\n                        mstore(_4, /** @src 3:371:381  \"msg.sender\" */ caller())\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        mstore(_13, /** @src 5:9971:9980  \"_balances\" */ 0x33)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        sstore(keccak256(_4, _2), sub(/** @src 5:10125:10148  \"accountBalance - amount\" */ _14, value_2))\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        sstore(/** @src 5:10241:10263  \"_totalSupply -= amount\" */ 0x35, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ sub(sload(/** @src 5:10241:10263  \"_totalSupply -= amount\" */ 0x35), /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ value_2))\n                        /// @src 5:10289:10326  \"Transfer(account, address(0), amount)\"\n                        let _15 := /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ mload(_2)\n                        mstore(_15, value_2)\n                        /// @src 5:10289:10326  \"Transfer(account, address(0), amount)\"\n                        log3(_15, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _13, /** @src 5:10289:10326  \"Transfer(account, address(0), amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 3:371:381  \"msg.sender\" */ caller(), /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _4)\n                        return(_4, _4)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address_6692(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 5:3877:3886  \"_balances\" */ 0x33)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let _16 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _16)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_4 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(/** @src 5:2815:2822  \"_symbol\" */ 0x37)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let length_1 := _4\n                        let _17 := 1\n                        length_1 := shr(_17, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _17)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _18 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _18))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_4, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_4, _18), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_4, shl(5, iszero(iszero(length_1)))), _18)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 5:2815:2822  \"_symbol\" */ 0x37)\n                            /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                            let dataPos_1 := 30148980456718914367279254941528755963179627010946392082519497346671089299886\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _18) }\n                            {\n                                mstore(add(add(memPtr_4, i_1), _18), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _17)\n                            }\n                            ret_1 := add(add(memPtr_4, i_1), _18)\n                        }\n                        let newFreePtr_1 := add(memPtr_4, and(add(sub(ret_1, memPtr_4), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_4))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_4), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address_6692()\n                        let value_3 := calldataload(36)\n                        mstore(_4, /** @src 9:965:975  \"msg.sender\" */ caller())\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let _19 := keccak256(_4, _2)\n                        mstore(_4, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, _19)\n                        let _20 := sload(keccak256(_4, _2))\n                        if /** @src 5:7150:7185  \"currentAllowance >= subtractedValue\" */ lt(_20, value_3)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        {\n                            let memPtr_5 := mload(_2)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _3), 32)\n                            mstore(add(memPtr_5, 36), 37)\n                            mstore(add(memPtr_5, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_5, 100), \" zero\")\n                            revert(memPtr_5, 132)\n                        }\n                        /// @src 5:7286:7320  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:7286:7320  \"currentAllowance - subtractedValue\" */ value0_4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ sub(/** @src 5:7286:7320  \"currentAllowance - subtractedValue\" */ _20, value_3))\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address_6692()\n                        /// @src 5:4252:4258  \"amount\"\n                        fun_transfer(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:4252:4258  \"amount\" */ value0_5, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ calldataload(36))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_6 := abi_decode_address_6692()\n                        let value1_1 := abi_decode_address()\n                        let _21 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_6, _21))\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                        let _22 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _21))\n                        mstore(32, _22)\n                        let _23 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _23)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_6692() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 969 @src 5:7814:8602  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 5:7910:7928  \"from != address(0)\" */ var_from, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _1)\n                if /** @src 5:7910:7928  \"from != address(0)\" */ iszero(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 5:7988:8004  \"to != address(0)\" */ var_to, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _1)\n                if /** @src 5:7988:8004  \"to != address(0)\" */ iszero(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 5:7926:7927  \"0\"\n                let _4 := 0x00\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                mstore(/** @src 5:7926:7927  \"0\" */ _4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _2)\n                mstore(0x20, /** @src 5:8126:8135  \"_balances\" */ 0x33)\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                let _5 := sload(keccak256(/** @src 5:7926:7927  \"0\" */ _4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x40))\n                if /** @src 5:8159:8180  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 5:7926:7927  \"0\" */ _4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _2)\n                mstore(0x20, /** @src 5:8126:8135  \"_balances\" */ 0x33)\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                sstore(keccak256(/** @src 5:7926:7927  \"0\" */ _4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x40), sub(/** @src 5:8275:8295  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                mstore(/** @src 5:7926:7927  \"0\" */ _4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _3)\n                let dataSlot := keccak256(/** @src 5:7926:7927  \"0\" */ _4, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 5:8472:8495  \"_balances[to] += amount\" */ dataSlot), /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ var_amount))\n                /// @src 5:8521:8547  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 5:8521:8547  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x20, /** @src 5:8521:8547  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 1143 @src 5:10815:11155  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 5:10916:10935  \"owner != address(0)\" */ var_owner, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _1)\n                if /** @src 5:10916:10935  \"owner != address(0)\" */ iszero(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 5:10994:11015  \"spender != address(0)\" */ var_spender, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _1)\n                if /** @src 5:10994:11015  \"spender != address(0)\" */ iszero(/** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _2)\n                mstore(0x20, /** @src 5:11065:11076  \"_allowances\" */ 0x34)\n                /// @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\"\n                let _4 := keccak256(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x40)\n                mstore(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x40), var_amount)\n                /// @src 5:11116:11148  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 5:11116:11148  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 3:169:400  \"contract MockToken is ERC20Upgradeable {...\" */ 0x20, /** @src 5:11116:11148  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c4461cc5a3ed15e8e6d9c89c3894da8651471abf8b53e94e7cadff55c669f21b64736f6c63430008130033\"\n    }\n}\n",
        "hash": "0100011b757702dc4aa256bbf14c65ddb215f9e55bf46213eb9b1a7c834c8ba8",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "Initializable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
      "ERC20Upgradeable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseAllowance",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseAllowance",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xa9311aeb22f459e57d4dac77ee76cf43fb28ad3215278456211b5852b0e9e970\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdf0d3e42bd25223e45a213311d6d7e177d56a2c541a78b58c0c9d10bbdfbf9\",\"dweb:/ipfs/QmfMyehJ6pxHrh7yL4793J6i7dofXnS2zH3cTtC8JdQMV9\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ERC20Upgradeable.sol:ERC20Upgradeable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[4]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_11\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_70\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.le\t@.BB0_13\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_19\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_52\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.ne\t@.BB0_70\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_70\n\tadd\t55, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr2, r6, r6\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_44\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_78\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_86\n.BB0_11:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_70\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.le\t@.BB0_27\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_57\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_33\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_70\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_70\n\tadd\t18, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_19:\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_60\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_67\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_70\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.gt\t@.BB0_70\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_16[0], r3, r1\n\tjump.gt\t@.BB0_70\n\tst.1\t0, r2\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[4]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tjump\t@.BB0_56\n.BB0_27:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_42\n\tsub.s!\t@CPI0_15[0], r2, r2\n\tjump.ne\t@.BB0_70\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.gt\t@.BB0_70\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_75\n.BB0_33:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_16[0], r3, r2\n\tjump.gt\t@.BB0_70\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.gt\t@.BB0_70\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub.s\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_94\n\tadd\tstack-[2], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_93\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_28[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_29[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_42:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_70\n\tadd\t54, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.eq\t@.BB0_71\n.BB0_44:\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_45:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.gt\t@.BB0_70\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\t36, r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tadd\tr2, r1, r3\n\tsub!\tr3, r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_90\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_52:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.gt\t@.BB0_70\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n.BB0_56:\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_59\n.BB0_57:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_70\n\tadd\t53, r0, r1\n.BB0_59:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_60:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.gt\t@.BB0_70\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[3], r0, r3\n\tsub!\tr1, r3, r2\n\tjump.ge\t@.BB0_91\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_22[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_67:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_70\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_70\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.le\t@.BB0_73\n.BB0_70:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_71:\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_76\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_87\n.BB0_73:\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tcontext.caller\tr1\n.BB0_74:\n\tnear_call\tr0, @fun_transfer, @DEFAULT_UNWIND\n.BB0_75:\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_18[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_76:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.lt\t@.BB0_77\n\tadd\t@CPI0_30[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_81:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_81\n\tadd\t192, r3, r1\n\tjump\t@.BB0_87\n.BB0_78:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_83\n.BB0_77:\n\tadd\t32, r0, r1\n\tjump\t@.BB0_89\n.BB0_83:\n\tadd\t@CPI0_24[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_84:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_84\n\tadd\t192, r3, r1\n.BB0_86:\n.BB0_87:\n\tsub.s\t97, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tsub.s!\t@CPI0_25[0], r1, r2\n\tjump.le\t@.BB0_89\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_89:\n\tadd\t128, r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t64, r1\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_90:\n\tadd\tstack-[3], r0, r1\n\tjump\t@.BB0_92\n.BB0_91:\n\tsub\tr1, r3, r3\n\tadd\tstack-[2], r0, r1\n.BB0_92:\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tjump\t@.BB0_75\n.BB0_93:\n\tsub\tr1, r3, r3\n\tadd\tr4, r0, r1\n\tadd\tstack-[1], r0, r2\n\tnear_call\tr0, @fun_approve, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n.BB0_94:\n\tadd\tr4, r0, r1\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[2], r0, r3\n\tjump\t@.BB0_74\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tadd\t64, r1, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_transfer:\n.func_begin2:\n\tnop\tstack+=[5]\n\tadd\tr3, r0, stack-[5]\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.eq\t@.BB2_1\n\tand!\t@CPI2_0[0], r2, stack-[3]\n\tjump.eq\t@.BB2_4\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t51, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI2_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[1]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.lt\t@.BB2_8\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tadd\tstack-[1], r0, r3\n\tsub.s\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_6\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tadd\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI2_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI2_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI2_4[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tadd\tstack-[3], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB2_6\n\tret\n.BB2_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_11[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_12[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t37, r0, r3\n\tjump\t@.BB2_2\n.BB2_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t35, r0, r3\n\tjump\t@.BB2_2\n.BB2_8:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI2_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI2_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t38, r0, r3\n.BB2_2:\n\tst.1\tr2, r3\n\tadd\t@CPI2_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_1[0], r0, r2\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nfun_approve:\n.func_begin3:\n\tnop\tstack+=[3]\n\tand!\t@CPI3_0[0], r1, r1\n\tjump.eq\t@.BB3_1\n\tadd\tr3, r0, stack-[2]\n\tand!\t@CPI3_0[0], r2, stack-[3]\n\tjump.eq\t@.BB3_4\n\tadd\tr1, r0, stack-[1]\n\tst.1\t0, r1\n\tadd\t52, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI3_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r3\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tst.1\t0, r3\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI3_1[0], r1, r2\n\tadd.ge\t@CPI3_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI3_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r6\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB3_6\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI3_1[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI3_1[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI3_1[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI3_3[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI3_4[0], r0, r4\n\tadd\tstack-[1], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB3_6\n\tret\n.BB3_6:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_9[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t36, r0, r3\n\tjump\t@.BB3_2\n.BB3_4:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI3_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI3_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t34, r0, r3\n.BB3_2:\n\tst.1\tr2, r3\n\tadd\t@CPI3_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_1[0], r0, r2\n\tsub.s!\t@CPI3_1[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tshl.s\t64, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__farcall:\n.func_begin5:\n.tmp0:\n\tfar_call\tr1, r2, @.BB5_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n__staticcall:\n.func_begin6:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB6_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_1:\nCPI3_1:\nCPI4_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 961581904\nCPI0_3:\n\t.cell 2757214934\nCPI0_4:\n\t.cell 2757214935\nCPI0_5:\n\t.cell 2835717307\nCPI0_6:\n\t.cell 3714247998\nCPI0_7:\n\t.cell 961581905\nCPI0_8:\n\t.cell 1889567281\nCPI0_9:\n\t.cell 2514000705\nCPI0_10:\n\t.cell 404098524\nCPI0_11:\n\t.cell 404098525\nCPI0_12:\n\t.cell 599290589\nCPI0_13:\n\t.cell 826074471\nCPI0_14:\n\t.cell 117300739\nCPI0_15:\n\t.cell 157198259\nCPI0_16:\nCPI2_0:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_17:\n\t.cell 2535301202817642044428229017600\nCPI0_18:\n\t.cell 2535301200456458802993406410752\nCPI0_19:\nCPI2_2:\nCPI3_2:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_20:\n\t.cell 14690266658072097593480850647027335513285713462661904985951319567533531463680\nCPI0_21:\n\t.cell 31354931781638678506476475496475743842680577777870365728514456330491174612855\nCPI0_22:\nCPI2_7:\nCPI3_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_23:\nCPI2_8:\nCPI3_8:\n\t.cell 10458117451882892562347801444352\nCPI0_24:\n\t.cell 30148980456718914367279254941528755963179627010946392082519497346671089299886\nCPI0_25:\n\t.cell 18446744073709551487\nCPI0_26:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_27:\n\t.cell 2852213850513516153367582212096\nCPI0_28:\n\t.cell 31354931781638678538084197150757782427756587561754988975511141185730285404160\nCPI0_29:\n\t.cell 7922816251426433759354395033600\nCPI0_30:\n\t.cell 33502907836418749244169045844382937189522934634747984393157770024170991419832\nCPI2_3:\nCPI3_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI2_4:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI2_5:\n\t.cell 44065838241030143116324720188876985940908656145555552347773292252211112312832\nCPI2_6:\n\t.cell 31354931781638678607228669297131712859100820671745083778533502622993977909346\nCPI2_9:\n\t.cell 45887578820189300338443374388718498632482616163288499555830078344056365121536\nCPI2_10:\n\t.cell 31354931781638678607228669297131712859126084785867252355217498662940140921970\nCPI2_11:\n\t.cell 45433405612597180762055095701412804886438245671210399661410036396145969725440\nCPI2_12:\n\t.cell 31354931781638678607228669297131712859107492772550336241160036866987736981860\nCPI3_4:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI3_5:\n\t.cell 52219164999525148860834357634456956735281286572158918307284071279203377479680\nCPI3_6:\n\t.cell 31354931781638678487916134672869638488806705378895508030211234510262059168357\nCPI3_9:\n\t.cell 51742913093258732729005998692887265601192425265805909375210916622055285719040\nCPI3_10:\n\t.cell 31354931781638678487916134672869638484047149969764982831501014746446650500196\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "decreaseAllowance(address,uint256)": "a457c2d7",
            "increaseAllowance(address,uint256)": "39509351",
            "name()": "06fdde03",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": "/// @use-src 4:\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\", 5:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\", 6:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\", 7:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\", 9:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\"\nobject \"ERC20Upgradeable_1214\" {\n    code {\n        {\n            /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"ERC20Upgradeable_1214_deployed\")\n            codecopy(_1, dataoffset(\"ERC20Upgradeable_1214_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 5:\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\", 9:\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\"\n    object \"ERC20Upgradeable_1214_deployed\" {\n        code {\n            {\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 5:2602:2607  \"_name\" */ 0x36)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let length := _4\n                        let _5 := 1\n                        length := shr(_5, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _5)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _6 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 5:2602:2607  \"_name\" */ 0x36)\n                            /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                            let dataPos := 33502907836418749244169045844382937189522934634747984393157770024170991419832\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, _5)\n                            }\n                            ret := add(add(_1, i), _6)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0 := abi_decode_address()\n                        /// @src 5:4964:4970  \"amount\"\n                        fun_approve(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:4964:4970  \"amount\" */ value0, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ calldataload(36))\n                        let memPos := mload(_2)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(/** @src 5:3700:3712  \"_totalSupply\" */ 0x35)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, _7)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value0_1 := abi_decode_address()\n                        let value1 := abi_decode_address_4782()\n                        let value := calldataload(68)\n                        mstore(_4, and(value0_1, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let _8 := keccak256(_4, _2)\n                        mstore(_4, /** @src 9:965:975  \"msg.sender\" */ caller())\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        mstore(32, _8)\n                        let _9 := sload(keccak256(_4, _2))\n                        /// @src 5:11598:11841  \"if (currentAllowance != type(uint256).max) {...\"\n                        if /** @src 5:11602:11639  \"currentAllowance != type(uint256).max\" */ iszero(eq(_9, /** @src 5:11622:11639  \"type(uint256).max\" */ not(0)))\n                        /// @src 5:11598:11841  \"if (currentAllowance != type(uint256).max) {...\"\n                        {\n                            /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                            if /** @src 5:11663:11689  \"currentAllowance >= amount\" */ lt(_9, value)\n                            /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                            {\n                                let memPtr := mload(_2)\n                                mstore(memPtr, shl(229, 4594637))\n                                mstore(add(memPtr, _3), 32)\n                                mstore(add(memPtr, 36), 29)\n                                mstore(add(memPtr, 68), \"ERC20: insufficient allowance\")\n                                revert(memPtr, 100)\n                            }\n                            /// @src 5:11790:11815  \"currentAllowance - amount\"\n                            fun_approve(value0_1, /** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ sub(/** @src 5:11790:11815  \"currentAllowance - amount\" */ _9, value))\n                        }\n                        /// @src 5:5782:5788  \"amount\"\n                        fun_transfer(value0_1, value1, value)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, /** @src 5:3544:3546  \"18\" */ 0x12)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x39509351 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_2 := abi_decode_address()\n                        mstore(_4, /** @src 9:965:975  \"msg.sender\" */ caller())\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let _10 := keccak256(_4, _2)\n                        mstore(_4, and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(32, _10)\n                        let _11 := sload(keccak256(_4, _2))\n                        let sum := add(_11, calldataload(36))\n                        if gt(_11, sum)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(_4, 36)\n                        }\n                        /// @src 5:6379:6417  \"allowance(owner, spender) + addedValue\"\n                        fun_approve(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:6379:6417  \"allowance(owner, spender) + addedValue\" */ value0_2, sum)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, 1)\n                        return(memPos_4, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        mstore(_4, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 5:3877:3886  \"_balances\" */ 0x33)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let _12 := sload(keccak256(_4, _2))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _12)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(/** @src 5:2815:2822  \"_symbol\" */ 0x37)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let length_1 := _4\n                        let _13 := 1\n                        length_1 := shr(_13, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, _13)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        let _14 := 32\n                        if eq(outOfPlaceEncoding_1, lt(length_1, _14))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x22)\n                            revert(_4, 0x24)\n                        }\n                        mstore(memPtr_1, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_1, _14), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length_1)))), _14)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 5:2815:2822  \"_symbol\" */ 0x37)\n                            /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                            let dataPos_1 := 30148980456718914367279254941528755963179627010946392082519497346671089299886\n                            let i_1 := _4\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, _14) }\n                            {\n                                mstore(add(add(memPtr_1, i_1), _14), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _13)\n                            }\n                            ret_1 := add(add(memPtr_1, i_1), _14)\n                        }\n                        let newFreePtr_1 := add(memPtr_1, and(add(sub(ret_1, memPtr_1), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr_1), newFreePtr_1))\n                    }\n                    case 0xa457c2d7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_3 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(_4, /** @src 9:965:975  \"msg.sender\" */ caller())\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let _15 := keccak256(_4, _2)\n                        mstore(_4, and(value0_3, sub(shl(160, 1), 1)))\n                        mstore(32, _15)\n                        let _16 := sload(keccak256(_4, _2))\n                        if /** @src 5:7150:7185  \"currentAllowance >= subtractedValue\" */ lt(_16, value_1)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 37)\n                            mstore(add(memPtr_2, 68), \"ERC20: decreased allowance below\")\n                            mstore(add(memPtr_2, 100), \" zero\")\n                            revert(memPtr_2, 132)\n                        }\n                        /// @src 5:7286:7320  \"currentAllowance - subtractedValue\"\n                        fun_approve(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:7286:7320  \"currentAllowance - subtractedValue\" */ value0_3, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ sub(/** @src 5:7286:7320  \"currentAllowance - subtractedValue\" */ _16, value_1))\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_4 := abi_decode_address()\n                        /// @src 5:4252:4258  \"amount\"\n                        fun_transfer(/** @src 9:965:975  \"msg.sender\" */ caller(), /** @src 5:4252:4258  \"amount\" */ value0_4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ calldataload(36))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, 1)\n                        return(memPos_7, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value0_5 := abi_decode_address()\n                        let value1_1 := abi_decode_address_4782()\n                        let _17 := sub(shl(160, 1), 1)\n                        mstore(_4, and(value0_5, _17))\n                        mstore(32, /** @src 5:4460:4471  \"_allowances\" */ 0x34)\n                        /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                        let _18 := keccak256(_4, _2)\n                        mstore(_4, and(value1_1, _17))\n                        mstore(32, _18)\n                        let _19 := sload(keccak256(_4, _2))\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _19)\n                        return(memPos_8, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, _1)\n                let length := mload(value0)\n                mstore(add(headStart, _1), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_4782() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 969 @src 5:7814:8602  \"function _transfer(address from, address to, uint256 amount) internal virtual {...\"\n            function fun_transfer(var_from, var_to, var_amount)\n            {\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 5:7910:7928  \"from != address(0)\" */ var_from, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _1)\n                if /** @src 5:7910:7928  \"from != address(0)\" */ iszero(/** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 37)\n                    mstore(add(memPtr, 68), \"ERC20: transfer from the zero ad\")\n                    mstore(add(memPtr, 100), \"dress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 5:7988:8004  \"to != address(0)\" */ var_to, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _1)\n                if /** @src 5:7988:8004  \"to != address(0)\" */ iszero(/** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 35)\n                    mstore(add(memPtr_1, 68), \"ERC20: transfer to the zero addr\")\n                    mstore(add(memPtr_1, 100), \"ess\")\n                    revert(memPtr_1, 132)\n                }\n                /// @src 5:7926:7927  \"0\"\n                let _4 := 0x00\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                mstore(/** @src 5:7926:7927  \"0\" */ _4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _2)\n                mstore(0x20, /** @src 5:8126:8135  \"_balances\" */ 0x33)\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                let _5 := sload(keccak256(/** @src 5:7926:7927  \"0\" */ _4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x40))\n                if /** @src 5:8159:8180  \"fromBalance >= amount\" */ lt(_5, var_amount)\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                {\n                    let memPtr_2 := mload(0x40)\n                    mstore(memPtr_2, shl(229, 4594637))\n                    mstore(add(memPtr_2, 4), 0x20)\n                    mstore(add(memPtr_2, 36), 38)\n                    mstore(add(memPtr_2, 68), \"ERC20: transfer amount exceeds b\")\n                    mstore(add(memPtr_2, 100), \"alance\")\n                    revert(memPtr_2, 132)\n                }\n                mstore(/** @src 5:7926:7927  \"0\" */ _4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _2)\n                mstore(0x20, /** @src 5:8126:8135  \"_balances\" */ 0x33)\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                sstore(keccak256(/** @src 5:7926:7927  \"0\" */ _4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x40), sub(/** @src 5:8275:8295  \"fromBalance - amount\" */ _5, var_amount))\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                mstore(/** @src 5:7926:7927  \"0\" */ _4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _3)\n                let dataSlot := keccak256(/** @src 5:7926:7927  \"0\" */ _4, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 5:8472:8495  \"_balances[to] += amount\" */ dataSlot), /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ var_amount))\n                /// @src 5:8521:8547  \"Transfer(from, to, amount)\"\n                let _6 := /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ mload(0x40)\n                mstore(_6, var_amount)\n                /// @src 5:8521:8547  \"Transfer(from, to, amount)\"\n                log3(_6, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x20, /** @src 5:8521:8547  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _3)\n            }\n            /// @ast-id 1143 @src 5:10815:11155  \"function _approve(address owner, address spender, uint256 amount) internal virtual {...\"\n            function fun_approve(var_owner, var_spender, var_amount)\n            {\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := and(/** @src 5:10916:10935  \"owner != address(0)\" */ var_owner, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _1)\n                if /** @src 5:10916:10935  \"owner != address(0)\" */ iszero(/** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _2)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 36)\n                    mstore(add(memPtr, 68), \"ERC20: approve from the zero add\")\n                    mstore(add(memPtr, 100), \"ress\")\n                    revert(memPtr, 132)\n                }\n                let _3 := and(/** @src 5:10994:11015  \"spender != address(0)\" */ var_spender, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _1)\n                if /** @src 5:10994:11015  \"spender != address(0)\" */ iszero(/** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _3)\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 34)\n                    mstore(add(memPtr_1, 68), \"ERC20: approve to the zero addre\")\n                    mstore(add(memPtr_1, 100), \"ss\")\n                    revert(memPtr_1, 132)\n                }\n                mstore(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _2)\n                mstore(0x20, /** @src 5:11065:11076  \"_allowances\" */ 0x34)\n                /// @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\"\n                let _4 := keccak256(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x40)\n                mstore(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ _3)\n                mstore(0x20, _4)\n                sstore(keccak256(/** @src 5:10933:10934  \"0\" */ 0x00, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x40), var_amount)\n                /// @src 5:11116:11148  \"Approval(owner, spender, amount)\"\n                let _5 := /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ mload(0x40)\n                mstore(_5, var_amount)\n                /// @src 5:11116:11148  \"Approval(owner, spender, amount)\"\n                log3(_5, /** @src 5:1632:13493  \"contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {...\" */ 0x20, /** @src 5:11116:11148  \"Approval(owner, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _2, _3)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220151de6acc590be2779dc6863b0855362280715a5f2c7c818e1631a985ec6ea6964736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000e57236da1260d8dc59471e7595246eed6aa3828627f32ac4e665e1a5a3",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
      "IERC20Upgradeable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
      "IERC20MetadataUpgradeable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "AddressUpgradeable": {
        "abi": [],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"AddressUpgradeable.sol:AddressUpgradeable\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
          "bytecode": {
            "object": "00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000005b0323e7af20779ddfd19560fd06adbbd4a87d2ad3c14e678b4eece6cb4fa9a9"
          },
          "methodIdentifiers": {}
        },
        "irOptimized": "/// @use-src 8:\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"\nobject \"AddressUpgradeable_1647\" {\n    code {\n        {\n            /// @src 8:194:9374  \"library AddressUpgradeable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"AddressUpgradeable_1647_deployed\")\n            codecopy(_1, dataoffset(\"AddressUpgradeable_1647_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 8:\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\"\n    object \"AddressUpgradeable_1647_deployed\" {\n        code {\n            {\n                /// @src 8:194:9374  \"library AddressUpgradeable {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c7dc4fd67be96f727a5adddef108fa12f9c50d66ed51d115c3da4f2caeec523664736f6c63430008130033\"\n    }\n}\n",
        "hash": "01000007bd843e9221f3ef65d86d814b81c66751ef965ec2309798bd808eb7e2",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "ContextUpgradeable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "uint8",
                "name": "version",
                "type": "uint8"
              }
            ],
            "name": "Initialized",
            "type": "event"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "contracts/libs/TypeCasts.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "contracts/libs/TypeCasts.sol",
        "exportedSymbols": {
          "TypeCasts": [
            40
          ]
        },
        "id": 41,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "TypeCasts",
            "contractDependencies": [],
            "contractKind": "library",
            "fullyImplemented": true,
            "id": 40,
            "linearizedBaseContracts": [
              40
            ],
            "name": "TypeCasts",
            "nameLocation": "81:9:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 19,
                  "nodeType": "Block",
                  "src": "203:56:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 14,
                                    "name": "_addr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3,
                                    "src": "244:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 13,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "236:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 12,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "236:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 15,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "236:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 11,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "228:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 10,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "228:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "228:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "220:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 8,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "220:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 17,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "220:32:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 7,
                      "id": 18,
                      "nodeType": "Return",
                      "src": "213:39:0"
                    }
                  ]
                },
                "id": 20,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "addressToBytes32",
                "nameLocation": "139:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 4,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 3,
                      "mutability": "mutable",
                      "name": "_addr",
                      "nameLocation": "164:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "156:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "156:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "155:15:0"
                },
                "returnParameters": {
                  "id": 7,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "194:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "194:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "193:9:0"
                },
                "scope": 40,
                "src": "130:129:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 38,
                  "nodeType": "Block",
                  "src": "370:55:0",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 33,
                                    "name": "_buf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22,
                                    "src": "411:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 32,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "403:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 31,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "403:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "403:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "395:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 29,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "395:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "395:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "387:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "387:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "387:31:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 26,
                      "id": 37,
                      "nodeType": "Return",
                      "src": "380:38:0"
                    }
                  ]
                },
                "id": 39,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "bytes32ToAddress",
                "nameLocation": "307:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 23,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 22,
                      "mutability": "mutable",
                      "name": "_buf",
                      "nameLocation": "332:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 39,
                      "src": "324:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 21,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "324:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "323:14:0"
                },
                "returnParameters": {
                  "id": 26,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 25,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 39,
                      "src": "361:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "361:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "360:9:0"
                },
                "scope": 40,
                "src": "298:127:0",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 41,
            "src": "73:354:0",
            "usedErrors": []
          }
        ],
        "src": "46:382:0"
      }
    },
    "contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol",
        "exportedSymbols": {
          "IPortalTokenBridge": [
            171
          ]
        },
        "id": 172,
        "license": "Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 42,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".13"
            ],
            "nodeType": "PragmaDirective",
            "src": "39:24:1"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IPortalTokenBridge",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 171,
            "linearizedBaseContracts": [
              171
            ],
            "name": "IPortalTokenBridge",
            "nameLocation": "113:18:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "IPortalTokenBridge.Transfer",
                "id": 57,
                "members": [
                  {
                    "constant": false,
                    "id": 44,
                    "mutability": "mutable",
                    "name": "payloadID",
                    "nameLocation": "170:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "164:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 43,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "164:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 46,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "197:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "189:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 45,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "189:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 48,
                    "mutability": "mutable",
                    "name": "tokenAddress",
                    "nameLocation": "221:12:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "213:20:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 47,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "213:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 50,
                    "mutability": "mutable",
                    "name": "tokenChain",
                    "nameLocation": "250:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "243:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 49,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "243:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 52,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "278:2:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "270:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 51,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "270:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 54,
                    "mutability": "mutable",
                    "name": "toChain",
                    "nameLocation": "297:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "290:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 53,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "290:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 56,
                    "mutability": "mutable",
                    "name": "fee",
                    "nameLocation": "322:3:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 57,
                    "src": "314:11:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 55,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "314:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Transfer",
                "nameLocation": "145:8:1",
                "nodeType": "StructDefinition",
                "scope": 171,
                "src": "138:194:1",
                "visibility": "public"
              },
              {
                "canonicalName": "IPortalTokenBridge.TransferWithPayload",
                "id": 74,
                "members": [
                  {
                    "constant": false,
                    "id": 59,
                    "mutability": "mutable",
                    "name": "payloadID",
                    "nameLocation": "381:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "375:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 58,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "375:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 61,
                    "mutability": "mutable",
                    "name": "amount",
                    "nameLocation": "408:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "400:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 60,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "400:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 63,
                    "mutability": "mutable",
                    "name": "tokenAddress",
                    "nameLocation": "432:12:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "424:20:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 62,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "424:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 65,
                    "mutability": "mutable",
                    "name": "tokenChain",
                    "nameLocation": "461:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "454:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 64,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "454:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 67,
                    "mutability": "mutable",
                    "name": "to",
                    "nameLocation": "489:2:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "481:10:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 66,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "481:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 69,
                    "mutability": "mutable",
                    "name": "toChain",
                    "nameLocation": "508:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "501:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 68,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "501:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 71,
                    "mutability": "mutable",
                    "name": "fromAddress",
                    "nameLocation": "533:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "525:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 70,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "525:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 73,
                    "mutability": "mutable",
                    "name": "payload",
                    "nameLocation": "560:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 74,
                    "src": "554:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    },
                    "typeName": {
                      "id": 72,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "554:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "TransferWithPayload",
                "nameLocation": "345:19:1",
                "nodeType": "StructDefinition",
                "scope": 171,
                "src": "338:236:1",
                "visibility": "public"
              },
              {
                "canonicalName": "IPortalTokenBridge.AssetMeta",
                "id": 87,
                "members": [
                  {
                    "constant": false,
                    "id": 76,
                    "mutability": "mutable",
                    "name": "payloadID",
                    "nameLocation": "613:9:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "607:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 75,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "607:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 78,
                    "mutability": "mutable",
                    "name": "tokenAddress",
                    "nameLocation": "640:12:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "632:20:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 77,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "632:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 80,
                    "mutability": "mutable",
                    "name": "tokenChain",
                    "nameLocation": "669:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "662:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 79,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "662:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 82,
                    "mutability": "mutable",
                    "name": "decimals",
                    "nameLocation": "695:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "689:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 81,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "689:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 84,
                    "mutability": "mutable",
                    "name": "symbol",
                    "nameLocation": "721:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "713:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 83,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "713:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 86,
                    "mutability": "mutable",
                    "name": "name",
                    "nameLocation": "745:4:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 87,
                    "src": "737:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 85,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "737:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "AssetMeta",
                "nameLocation": "587:9:1",
                "nodeType": "StructDefinition",
                "scope": 171,
                "src": "580:176:1",
                "visibility": "public"
              },
              {
                "canonicalName": "IPortalTokenBridge.RegisterChain",
                "id": 98,
                "members": [
                  {
                    "constant": false,
                    "id": 89,
                    "mutability": "mutable",
                    "name": "module",
                    "nameLocation": "801:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 98,
                    "src": "793:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 88,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "793:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 91,
                    "mutability": "mutable",
                    "name": "action",
                    "nameLocation": "823:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 98,
                    "src": "817:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 90,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "817:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 93,
                    "mutability": "mutable",
                    "name": "chainId",
                    "nameLocation": "846:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 98,
                    "src": "839:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 92,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "839:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 95,
                    "mutability": "mutable",
                    "name": "emitterChainID",
                    "nameLocation": "870:14:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 98,
                    "src": "863:21:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 94,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "863:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 97,
                    "mutability": "mutable",
                    "name": "emitterAddress",
                    "nameLocation": "902:14:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 98,
                    "src": "894:22:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 96,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "894:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "RegisterChain",
                "nameLocation": "769:13:1",
                "nodeType": "StructDefinition",
                "scope": 171,
                "src": "762:161:1",
                "visibility": "public"
              },
              {
                "canonicalName": "IPortalTokenBridge.UpgradeContract",
                "id": 107,
                "members": [
                  {
                    "constant": false,
                    "id": 100,
                    "mutability": "mutable",
                    "name": "module",
                    "nameLocation": "970:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 107,
                    "src": "962:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 99,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "962:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 102,
                    "mutability": "mutable",
                    "name": "action",
                    "nameLocation": "992:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 107,
                    "src": "986:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 101,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "986:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 104,
                    "mutability": "mutable",
                    "name": "chainId",
                    "nameLocation": "1015:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 107,
                    "src": "1008:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 103,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "1008:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 106,
                    "mutability": "mutable",
                    "name": "newContract",
                    "nameLocation": "1040:11:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 107,
                    "src": "1032:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 105,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1032:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "UpgradeContract",
                "nameLocation": "936:15:1",
                "nodeType": "StructDefinition",
                "scope": 171,
                "src": "929:129:1",
                "visibility": "public"
              },
              {
                "canonicalName": "IPortalTokenBridge.RecoverChainId",
                "id": 116,
                "members": [
                  {
                    "constant": false,
                    "id": 109,
                    "mutability": "mutable",
                    "name": "module",
                    "nameLocation": "1104:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 116,
                    "src": "1096:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "typeName": {
                      "id": 108,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1096:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 111,
                    "mutability": "mutable",
                    "name": "action",
                    "nameLocation": "1126:6:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 116,
                    "src": "1120:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "typeName": {
                      "id": 110,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "1120:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 113,
                    "mutability": "mutable",
                    "name": "evmChainId",
                    "nameLocation": "1150:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 116,
                    "src": "1142:18:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "typeName": {
                      "id": 112,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1142:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 115,
                    "mutability": "mutable",
                    "name": "newChainId",
                    "nameLocation": "1177:10:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 116,
                    "src": "1170:17:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "typeName": {
                      "id": 114,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "1170:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "RecoverChainId",
                "nameLocation": "1071:14:1",
                "nodeType": "StructDefinition",
                "scope": 171,
                "src": "1064:130:1",
                "visibility": "public"
              },
              {
                "anonymous": false,
                "eventSelector": "2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a49",
                "id": 122,
                "name": "ContractUpgraded",
                "nameLocation": "1206:16:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 121,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 118,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "oldContract",
                      "nameLocation": "1248:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "1232:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1232:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 120,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nameLocation": "1285:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 122,
                      "src": "1269:27:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 119,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1269:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1222:80:1"
                },
                "src": "1200:103:1"
              },
              {
                "functionSelector": "c5a5ebda",
                "id": 139,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferTokensWithPayload",
                "nameLocation": "1318:25:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 135,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1361:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1353:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1384:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1376:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1376:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 128,
                      "mutability": "mutable",
                      "name": "recipientChain",
                      "nameLocation": "1407:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1400:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 127,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "1400:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 130,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "1439:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1431:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1431:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "1465:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1458:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1458:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 134,
                      "mutability": "mutable",
                      "name": "payload",
                      "nameLocation": "1493:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1480:20:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1343:163:1"
                },
                "returnParameters": {
                  "id": 138,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 137,
                      "mutability": "mutable",
                      "name": "sequence",
                      "nameLocation": "1540:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 139,
                      "src": "1533:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1533:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1532:17:1"
                },
                "scope": 171,
                "src": "1309:241:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "c3f511c1",
                "id": 146,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "completeTransferWithPayload",
                "nameLocation": "1565:27:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 142,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "encodedVm",
                      "nameLocation": "1615:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "1602:22:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1602:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1592:38:1"
                },
                "returnParameters": {
                  "id": 145,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 144,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "1649:12:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 143,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1649:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1648:14:1"
                },
                "scope": 171,
                "src": "1556:107:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "ea63738d",
                "id": 154,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "parseTransferWithPayload",
                "nameLocation": "1678:24:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 149,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 148,
                      "mutability": "mutable",
                      "name": "encoded",
                      "nameLocation": "1725:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1712:20:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1712:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1702:36:1"
                },
                "returnParameters": {
                  "id": 153,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "transfer",
                      "nameLocation": "1789:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 154,
                      "src": "1762:35:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferWithPayload_$74_memory_ptr",
                        "typeString": "struct IPortalTokenBridge.TransferWithPayload"
                      },
                      "typeName": {
                        "id": 151,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 150,
                          "name": "TransferWithPayload",
                          "nameLocations": [
                            "1762:19:1"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 74,
                          "src": "1762:19:1"
                        },
                        "referencedDeclaration": 74,
                        "src": "1762:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferWithPayload_$74_storage_ptr",
                          "typeString": "struct IPortalTokenBridge.TransferWithPayload"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1761:37:1"
                },
                "scope": 171,
                "src": "1669:130:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "1ff1e286",
                "id": 163,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "wrappedAsset",
                "nameLocation": "1814:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 159,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 156,
                      "mutability": "mutable",
                      "name": "tokenChainId",
                      "nameLocation": "1843:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "1836:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 155,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "1836:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "tokenAddress",
                      "nameLocation": "1873:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "1865:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1865:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1826:65:1"
                },
                "returnParameters": {
                  "id": 162,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 161,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "1915:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 160,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1915:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1914:9:1"
                },
                "scope": 171,
                "src": "1805:119:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "1a2be4da",
                "id": 170,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "isWrappedAsset",
                "nameLocation": "1939:14:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 166,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 165,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "1962:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1954:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 164,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1954:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1953:15:1"
                },
                "returnParameters": {
                  "id": 169,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1992:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1992:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1991:6:1"
                },
                "scope": 171,
                "src": "1930:68:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 172,
            "src": "103:1897:1",
            "usedErrors": []
          }
        ],
        "src": "39:1962:1"
      }
    },
    "contracts/mock/MockPortalBridge.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "contracts/mock/MockPortalBridge.sol",
        "exportedSymbols": {
          "IPortalTokenBridge": [
            171
          ],
          "MockPortalBridge": [
            400
          ],
          "MockToken": [
            432
          ],
          "TypeCasts": [
            40
          ]
        },
        "id": 401,
        "license": "Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 173,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".13"
            ],
            "nodeType": "PragmaDirective",
            "src": "39:24:2"
          },
          {
            "absolutePath": "contracts/middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol",
            "file": "../middleware/liquidity-layer/interfaces/portal/IPortalTokenBridge.sol",
            "id": 175,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 401,
            "sourceUnit": 172,
            "src": "65:106:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 174,
                  "name": "IPortalTokenBridge",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 171,
                  "src": "73:18:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/mock/MockToken.sol",
            "file": "./MockToken.sol",
            "id": 177,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 401,
            "sourceUnit": 433,
            "src": "172:42:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 176,
                  "name": "MockToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 432,
                  "src": "180:9:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/libs/TypeCasts.sol",
            "file": "../libs/TypeCasts.sol",
            "id": 179,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 401,
            "sourceUnit": 41,
            "src": "215:48:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 178,
                  "name": "TypeCasts",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 40,
                  "src": "223:9:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 180,
                  "name": "IPortalTokenBridge",
                  "nameLocations": [
                    "294:18:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "294:18:2"
                },
                "id": 181,
                "nodeType": "InheritanceSpecifier",
                "src": "294:18:2"
              }
            ],
            "canonicalName": "MockPortalBridge",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 400,
            "linearizedBaseContracts": [
              400,
              171
            ],
            "name": "MockPortalBridge",
            "nameLocation": "274:16:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 184,
                "mutability": "mutable",
                "name": "nextNonce",
                "nameLocation": "327:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 400,
                "src": "319:21:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 182,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "30",
                  "id": 183,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "339:1:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 187,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "356:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 400,
                "src": "346:15:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MockToken_$432",
                  "typeString": "contract MockToken"
                },
                "typeName": {
                  "id": 186,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 185,
                    "name": "MockToken",
                    "nameLocations": [
                      "346:9:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 432,
                    "src": "346:9:2"
                  },
                  "referencedDeclaration": 432,
                  "src": "346:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MockToken_$432",
                    "typeString": "contract MockToken"
                  }
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 197,
                  "nodeType": "Block",
                  "src": "398:31:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 193,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "408:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockToken_$432",
                            "typeString": "contract MockToken"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 194,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "416:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockToken_$432",
                            "typeString": "contract MockToken"
                          }
                        },
                        "src": "408:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$432",
                          "typeString": "contract MockToken"
                        }
                      },
                      "id": 196,
                      "nodeType": "ExpressionStatement",
                      "src": "408:14:2"
                    }
                  ]
                },
                "id": 198,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 191,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 190,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "390:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 198,
                      "src": "380:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockToken_$432",
                        "typeString": "contract MockToken"
                      },
                      "typeName": {
                        "id": 189,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 188,
                          "name": "MockToken",
                          "nameLocations": [
                            "380:9:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 432,
                          "src": "380:9:2"
                        },
                        "referencedDeclaration": 432,
                        "src": "380:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockToken_$432",
                          "typeString": "contract MockToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "379:18:2"
                },
                "returnParameters": {
                  "id": 192,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "398:0:2"
                },
                "scope": 400,
                "src": "368:61:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  139
                ],
                "body": {
                  "id": 244,
                  "nodeType": "Block",
                  "src": "631:167:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 215,
                          "name": "nextNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "641:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 216,
                            "name": "nextNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "653:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "665:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "653:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "641:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 220,
                      "nodeType": "ExpressionStatement",
                      "src": "641:25:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 224,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "695:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "699:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "695:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "715:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MockPortalBridge_$400",
                                  "typeString": "contract MockPortalBridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MockPortalBridge_$400",
                                  "typeString": "contract MockPortalBridge"
                                }
                              ],
                              "id": 227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "707:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 226,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "707:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "707:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 230,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "722:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 221,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "676:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$432",
                              "typeString": "contract MockToken"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "682:12:2",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 822,
                          "src": "676:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "676:53:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 232,
                      "nodeType": "ExpressionStatement",
                      "src": "676:53:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 236,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "750:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 233,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "739:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$432",
                              "typeString": "contract MockToken"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "745:4:2",
                          "memberName": "burn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 431,
                          "src": "739:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                            "typeString": "function (uint256) external"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "739:18:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 238,
                      "nodeType": "ExpressionStatement",
                      "src": "739:18:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 241,
                            "name": "nextNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "781:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "774:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 239,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "774:6:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "774:17:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "functionReturnParameters": 214,
                      "id": 243,
                      "nodeType": "Return",
                      "src": "767:24:2"
                    }
                  ]
                },
                "functionSelector": "c5a5ebda",
                "id": 245,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferTokensWithPayload",
                "nameLocation": "444:25:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 211,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "479:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "479:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "504:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "496:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "496:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "520:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "520:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 206,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "536:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 205,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "536:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 208,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "553:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 207,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "553:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 210,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "569:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 209,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "569:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "469:118:2"
                },
                "returnParameters": {
                  "id": 214,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 213,
                      "mutability": "mutable",
                      "name": "sequence",
                      "nameLocation": "621:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 245,
                      "src": "614:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 212,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "614:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "613:17:2"
                },
                "scope": 400,
                "src": "435:363:2",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  163
                ],
                "body": {
                  "id": 259,
                  "nodeType": "Block",
                  "src": "875:38:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 256,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "900:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$432",
                              "typeString": "contract MockToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockToken_$432",
                              "typeString": "contract MockToken"
                            }
                          ],
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "892:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 254,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "892:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "892:14:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 253,
                      "id": 258,
                      "nodeType": "Return",
                      "src": "885:21:2"
                    }
                  ]
                },
                "functionSelector": "1ff1e286",
                "id": 260,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "wrappedAsset",
                "nameLocation": "813:12:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 250,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 247,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "826:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 246,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "826:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 249,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "834:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 248,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "834:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "825:17:2"
                },
                "returnParameters": {
                  "id": 253,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 252,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "866:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 251,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "866:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "865:9:2"
                },
                "scope": 400,
                "src": "804:109:2",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  170
                ],
                "body": {
                  "id": 269,
                  "nodeType": "Block",
                  "src": "981:28:2",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "998:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 266,
                      "id": 268,
                      "nodeType": "Return",
                      "src": "991:11:2"
                    }
                  ]
                },
                "functionSelector": "1a2be4da",
                "id": 270,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isWrappedAsset",
                "nameLocation": "928:14:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 263,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 262,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "943:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "943:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "942:9:2"
                },
                "returnParameters": {
                  "id": 266,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 270,
                      "src": "975:4:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 264,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "975:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "974:6:2"
                },
                "scope": 400,
                "src": "919:90:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  146
                ],
                "body": {
                  "id": 322,
                  "nodeType": "Block",
                  "src": "1122:463:2",
                  "statements": [
                    {
                      "assignments": [
                        278,
                        280,
                        282
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 278,
                          "mutability": "mutable",
                          "name": "_originDomain",
                          "nameLocation": "1140:13:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 322,
                          "src": "1133:20:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "typeName": {
                            "id": 277,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1133:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 280,
                          "mutability": "mutable",
                          "name": "_nonce",
                          "nameLocation": "1163:6:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 322,
                          "src": "1155:14:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          "typeName": {
                            "id": 279,
                            "name": "uint224",
                            "nodeType": "ElementaryTypeName",
                            "src": "1155:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 282,
                          "mutability": "mutable",
                          "name": "_amount",
                          "nameLocation": "1179:7:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 322,
                          "src": "1171:15:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 281,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1171:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 294,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 285,
                            "name": "encodedVm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "1214:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1238:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 286,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1238:6:2",
                                  "typeDescriptions": {}
                                }
                              },
                              {
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1246:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint224_$",
                                  "typeString": "type(uint224)"
                                },
                                "typeName": {
                                  "id": 288,
                                  "name": "uint224",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1246:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              {
                                "id": 291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1255:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 290,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1255:7:2",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 292,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1237:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_uint224_$_$_t_type$_t_uint256_$_$",
                              "typeString": "tuple(type(uint32),type(uint224),type(uint256))"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_uint224_$_$_t_type$_t_uint256_$_$",
                              "typeString": "tuple(type(uint32),type(uint224),type(uint256))"
                            }
                          ],
                          "expression": {
                            "id": 283,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1190:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1194:6:2",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "1190:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1190:83:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint32_$_t_uint224_$_t_uint256_$",
                          "typeString": "tuple(uint32,uint224,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1132:141:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 298,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1295:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1299:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1295:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 300,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "1307:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 295,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 187,
                            "src": "1284:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockToken_$432",
                              "typeString": "contract MockToken"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1290:4:2",
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 419,
                          "src": "1284:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256) external"
                          }
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1284:31:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 302,
                      "nodeType": "ExpressionStatement",
                      "src": "1284:31:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 309,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "1489:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MockToken_$432",
                                      "typeString": "contract MockToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MockToken_$432",
                                      "typeString": "contract MockToken"
                                    }
                                  ],
                                  "id": 308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1481:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 307,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1481:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1481:14:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 305,
                                "name": "TypeCasts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "1454:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TypeCasts_$40_$",
                                  "typeString": "type(library TypeCasts)"
                                }
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1464:16:2",
                              "memberName": "addressToBytes32",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "1454:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1454:42:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 313,
                                "name": "_originDomain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 278,
                                "src": "1526:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "id": 314,
                                "name": "_nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 280,
                                "src": "1541:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 317,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "1557:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MockToken_$432",
                                      "typeString": "contract MockToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MockToken_$432",
                                      "typeString": "contract MockToken"
                                    }
                                  ],
                                  "id": 316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1549:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 315,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1549:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1549:14:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 312,
                              "name": "adapterData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "1514:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$_t_uint224_$_t_address_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (uint32,uint224,address) pure returns (bytes memory)"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1514:50:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 303,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1426:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1430:6:2",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1426:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1426:152:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 276,
                      "id": 321,
                      "nodeType": "Return",
                      "src": "1407:171:2"
                    }
                  ]
                },
                "functionSelector": "c3f511c1",
                "id": 323,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "completeTransferWithPayload",
                "nameLocation": "1024:27:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 273,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "encodedVm",
                      "nameLocation": "1074:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "1061:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1061:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1051:38:2"
                },
                "returnParameters": {
                  "id": 276,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "1108:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1108:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1107:14:2"
                },
                "scope": 400,
                "src": "1015:570:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  154
                ],
                "body": {
                  "id": 357,
                  "nodeType": "Block",
                  "src": "1721:217:2",
                  "statements": [
                    {
                      "assignments": [
                        332,
                        334
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 332,
                          "mutability": "mutable",
                          "name": "tokenAddress",
                          "nameLocation": "1740:12:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 357,
                          "src": "1732:20:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "typeName": {
                            "id": 331,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "1732:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 334,
                          "mutability": "mutable",
                          "name": "payload",
                          "nameLocation": "1767:7:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 357,
                          "src": "1754:20:2",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 333,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1754:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 344,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 337,
                            "name": "encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "1802:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "components": [
                              {
                                "id": 339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1824:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 338,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1824:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              {
                                "id": 341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1833:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 340,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1833:5:2",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "id": 342,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1823:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes_storage_ptr_$_$",
                              "typeString": "tuple(type(bytes32),type(bytes storage pointer))"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes_storage_ptr_$_$",
                              "typeString": "tuple(type(bytes32),type(bytes storage pointer))"
                            }
                          ],
                          "expression": {
                            "id": 335,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1778:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1782:6:2",
                          "memberName": "decode",
                          "nodeType": "MemberAccess",
                          "src": "1778:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1778:71:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bytes32,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1731:118:2"
                    },
                    {
                      "expression": {
                        "id": 349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 345,
                            "name": "transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "1859:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TransferWithPayload_$74_memory_ptr",
                              "typeString": "struct IPortalTokenBridge.TransferWithPayload memory"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "1868:7:2",
                          "memberName": "payload",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 73,
                          "src": "1859:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 348,
                          "name": "payload",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 334,
                          "src": "1878:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "src": "1859:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 350,
                      "nodeType": "ExpressionStatement",
                      "src": "1859:26:2"
                    },
                    {
                      "expression": {
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 351,
                            "name": "transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 329,
                            "src": "1895:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TransferWithPayload_$74_memory_ptr",
                              "typeString": "struct IPortalTokenBridge.TransferWithPayload memory"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "1904:12:2",
                          "memberName": "tokenAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63,
                          "src": "1895:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 354,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 332,
                          "src": "1919:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1895:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 356,
                      "nodeType": "ExpressionStatement",
                      "src": "1895:36:2"
                    }
                  ]
                },
                "functionSelector": "ea63738d",
                "id": 358,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "parseTransferWithPayload",
                "nameLocation": "1600:24:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 326,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 325,
                      "mutability": "mutable",
                      "name": "encoded",
                      "nameLocation": "1647:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "1634:20:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 324,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1634:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1624:36:2"
                },
                "returnParameters": {
                  "id": 330,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 329,
                      "mutability": "mutable",
                      "name": "transfer",
                      "nameLocation": "1711:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 358,
                      "src": "1684:35:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferWithPayload_$74_memory_ptr",
                        "typeString": "struct IPortalTokenBridge.TransferWithPayload"
                      },
                      "typeName": {
                        "id": 328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 327,
                          "name": "TransferWithPayload",
                          "nameLocations": [
                            "1684:19:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 74,
                          "src": "1684:19:2"
                        },
                        "referencedDeclaration": 74,
                        "src": "1684:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferWithPayload_$74_storage_ptr",
                          "typeString": "struct IPortalTokenBridge.TransferWithPayload"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1683:37:2"
                },
                "scope": 400,
                "src": "1591:347:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 379,
                  "nodeType": "Block",
                  "src": "2084:167:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 371,
                            "name": "_originDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "2141:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 372,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "2172:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 375,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 364,
                                "src": "2223:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 373,
                                "name": "TypeCasts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40,
                                "src": "2196:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_TypeCasts_$40_$",
                                  "typeString": "type(library TypeCasts)"
                                }
                              },
                              "id": 374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2206:16:2",
                              "memberName": "addressToBytes32",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20,
                              "src": "2196:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bytes32_$",
                                "typeString": "function (address) pure returns (bytes32)"
                              }
                            },
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2196:34:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 369,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2113:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2117:6:2",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2113:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2113:131:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 368,
                      "id": 378,
                      "nodeType": "Return",
                      "src": "2094:150:2"
                    }
                  ]
                },
                "functionSelector": "8c2a672b",
                "id": 380,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "adapterData",
                "nameLocation": "1953:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 365,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 360,
                      "mutability": "mutable",
                      "name": "_originDomain",
                      "nameLocation": "1981:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "1974:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 359,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1974:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "_nonce",
                      "nameLocation": "2012:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "2004:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 361,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "2004:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 364,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "2036:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "2028:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2028:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1964:84:2"
                },
                "returnParameters": {
                  "id": 368,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 367,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 380,
                      "src": "2070:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 366,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2070:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2069:14:2"
                },
                "scope": 400,
                "src": "1944:307:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 398,
                  "nodeType": "Block",
                  "src": "2400:66:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 393,
                            "name": "_originDomain",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "2428:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 394,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "2443:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          {
                            "id": 395,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "2451:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 391,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2417:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2421:6:2",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2417:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2417:42:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 390,
                      "id": 397,
                      "nodeType": "Return",
                      "src": "2410:49:2"
                    }
                  ]
                },
                "functionSelector": "9fe6f25b",
                "id": 399,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "mockPortalVaa",
                "nameLocation": "2266:13:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 387,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 382,
                      "mutability": "mutable",
                      "name": "_originDomain",
                      "nameLocation": "2296:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "2289:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 381,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 384,
                      "mutability": "mutable",
                      "name": "_nonce",
                      "nameLocation": "2327:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "2319:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 383,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "2319:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "2351:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "2343:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2343:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2279:85:2"
                },
                "returnParameters": {
                  "id": 390,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 399,
                      "src": "2386:12:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2386:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2385:14:2"
                },
                "scope": 400,
                "src": "2257:209:2",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 401,
            "src": "265:2203:2",
            "usedErrors": []
          }
        ],
        "src": "39:2430:2"
      }
    },
    "contracts/mock/MockToken.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "contracts/mock/MockToken.sol",
        "exportedSymbols": {
          "ERC20Upgradeable": [
            1214
          ],
          "MockToken": [
            432
          ]
        },
        "id": 433,
        "license": "Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 402,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".13"
            ],
            "nodeType": "PragmaDirective",
            "src": "39:24:3"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
            "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
            "id": 404,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 433,
            "sourceUnit": 1215,
            "src": "65:102:3",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 403,
                  "name": "ERC20Upgradeable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1214,
                  "src": "73:16:3",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 405,
                  "name": "ERC20Upgradeable",
                  "nameLocations": [
                    "191:16:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1214,
                  "src": "191:16:3"
                },
                "id": 406,
                "nodeType": "InheritanceSpecifier",
                "src": "191:16:3"
              }
            ],
            "canonicalName": "MockToken",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 432,
            "linearizedBaseContracts": [
              432,
              1214,
              1317,
              1292,
              1698,
              601
            ],
            "name": "MockToken",
            "nameLocation": "178:9:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 418,
                  "nodeType": "Block",
                  "src": "270:39:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 414,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 408,
                            "src": "286:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 415,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 410,
                            "src": "295:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 413,
                          "name": "_mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1026,
                          "src": "280:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "280:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 417,
                      "nodeType": "ExpressionStatement",
                      "src": "280:22:3"
                    }
                  ]
                },
                "functionSelector": "40c10f19",
                "id": 419,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "mint",
                "nameLocation": "223:4:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 411,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "236:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "228:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "228:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 410,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "253:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 419,
                      "src": "245:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "245:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "227:33:3"
                },
                "returnParameters": {
                  "id": 412,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "270:0:3"
                },
                "scope": 432,
                "src": "214:95:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 430,
                  "nodeType": "Block",
                  "src": "355:43:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 425,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "371:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "375:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "371:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 427,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 421,
                            "src": "383:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 424,
                          "name": "_burn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1098,
                          "src": "365:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,uint256)"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "365:26:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 429,
                      "nodeType": "ExpressionStatement",
                      "src": "365:26:3"
                    }
                  ]
                },
                "functionSelector": "42966c68",
                "id": 431,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "burn",
                "nameLocation": "324:4:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 422,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 421,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "337:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "329:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "329:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "328:17:3"
                },
                "returnParameters": {
                  "id": 423,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "355:0:3"
                },
                "scope": 432,
                "src": "315:83:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 433,
            "src": "169:231:3",
            "usedErrors": []
          }
        ],
        "src": "39:362:3"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
      "id": 4,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "exportedSymbols": {
          "AddressUpgradeable": [
            1647
          ],
          "Initializable": [
            601
          ]
        },
        "id": 602,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 434,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "113:23:4"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
            "file": "../../utils/AddressUpgradeable.sol",
            "id": 435,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 602,
            "sourceUnit": 1648,
            "src": "138:44:4",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Initializable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 436,
              "nodeType": "StructuredDocumentation",
              "src": "184:2209:4",
              "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
            },
            "fullyImplemented": true,
            "id": 601,
            "linearizedBaseContracts": [
              601
            ],
            "name": "Initializable",
            "nameLocation": "2412:13:4",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "documentation": {
                  "id": 437,
                  "nodeType": "StructuredDocumentation",
                  "src": "2432:109:4",
                  "text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
                },
                "id": 439,
                "mutability": "mutable",
                "name": "_initialized",
                "nameLocation": "2560:12:4",
                "nodeType": "VariableDeclaration",
                "scope": 601,
                "src": "2546:26:4",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 438,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "2546:5:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 440,
                  "nodeType": "StructuredDocumentation",
                  "src": "2579:91:4",
                  "text": " @dev Indicates that the contract is in the process of being initialized."
                },
                "id": 442,
                "mutability": "mutable",
                "name": "_initializing",
                "nameLocation": "2688:13:4",
                "nodeType": "VariableDeclaration",
                "scope": 601,
                "src": "2675:26:4",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 441,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2675:4:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 443,
                  "nodeType": "StructuredDocumentation",
                  "src": "2708:90:4",
                  "text": " @dev Triggered when the contract has been initialized or reinitialized."
                },
                "eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
                "id": 447,
                "name": "Initialized",
                "nameLocation": "2809:11:4",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 446,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 445,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "version",
                      "nameLocation": "2827:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 447,
                      "src": "2821:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 444,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2821:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2820:15:4"
                },
                "src": "2803:33:4"
              },
              {
                "body": {
                  "id": 502,
                  "nodeType": "Block",
                  "src": "3269:483:4",
                  "statements": [
                    {
                      "assignments": [
                        451
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 451,
                          "mutability": "mutable",
                          "name": "isTopLevelCall",
                          "nameLocation": "3284:14:4",
                          "nodeType": "VariableDeclaration",
                          "scope": 502,
                          "src": "3279:19:4",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 450,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "3279:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 454,
                      "initialValue": {
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3301:14:4",
                        "subExpression": {
                          "id": 452,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "3302:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3279:36:4"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 456,
                                    "name": "isTopLevelCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 451,
                                    "src": "3347:14:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 457,
                                      "name": "_initialized",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 439,
                                      "src": "3365:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 458,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3380:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3365:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3347:34:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 461,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3346:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 469,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "!",
                                    "prefix": true,
                                    "src": "3387:45:4",
                                    "subExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 466,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "3426:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Initializable_$601",
                                                "typeString": "contract Initializable"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Initializable_$601",
                                                "typeString": "contract Initializable"
                                              }
                                            ],
                                            "id": 465,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3418:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 464,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3418:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 467,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3418:13:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 462,
                                          "name": "AddressUpgradeable",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1647,
                                          "src": "3388:18:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1647_$",
                                            "typeString": "type(library AddressUpgradeable)"
                                          }
                                        },
                                        "id": 463,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3407:10:4",
                                        "memberName": "isContract",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1335,
                                        "src": "3388:29:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                          "typeString": "function (address) view returns (bool)"
                                        }
                                      },
                                      "id": 468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3388:44:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 470,
                                      "name": "_initialized",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 439,
                                      "src": "3436:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 471,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3452:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3436:17:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3387:66:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 474,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3386:68:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3346:108:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3468:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            },
                            "value": "Initializable: contract is already initialized"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            }
                          ],
                          "id": 455,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "3325:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3325:201:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 478,
                      "nodeType": "ExpressionStatement",
                      "src": "3325:201:4"
                    },
                    {
                      "expression": {
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 479,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "3536:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3551:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3536:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 482,
                      "nodeType": "ExpressionStatement",
                      "src": "3536:16:4"
                    },
                    {
                      "condition": {
                        "id": 483,
                        "name": "isTopLevelCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "3566:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 489,
                      "nodeType": "IfStatement",
                      "src": "3562:65:4",
                      "trueBody": {
                        "id": 488,
                        "nodeType": "Block",
                        "src": "3582:45:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 484,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "3596:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3612:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "3596:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 487,
                            "nodeType": "ExpressionStatement",
                            "src": "3596:20:4"
                          }
                        ]
                      }
                    },
                    {
                      "id": 490,
                      "nodeType": "PlaceholderStatement",
                      "src": "3636:1:4"
                    },
                    {
                      "condition": {
                        "id": 491,
                        "name": "isTopLevelCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "3651:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 501,
                      "nodeType": "IfStatement",
                      "src": "3647:99:4",
                      "trueBody": {
                        "id": 500,
                        "nodeType": "Block",
                        "src": "3667:79:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 492,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "3681:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "66616c7365",
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3697:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3681:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 495,
                            "nodeType": "ExpressionStatement",
                            "src": "3681:21:4"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "hexValue": "31",
                                  "id": 497,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3733:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "id": 496,
                                "name": "Initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "3721:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                  "typeString": "function (uint8)"
                                }
                              },
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3721:14:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 499,
                            "nodeType": "EmitStatement",
                            "src": "3716:19:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 448,
                  "nodeType": "StructuredDocumentation",
                  "src": "2842:399:4",
                  "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
                },
                "id": 503,
                "name": "initializer",
                "nameLocation": "3255:11:4",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 449,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3266:2:4"
                },
                "src": "3246:506:4",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 535,
                  "nodeType": "Block",
                  "src": "4863:255:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4881:14:4",
                              "subExpression": {
                                "id": 509,
                                "name": "_initializing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 442,
                                "src": "4882:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 511,
                                "name": "_initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 439,
                                "src": "4899:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 512,
                                "name": "version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 506,
                                "src": "4914:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "4899:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4881:40:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
                            "id": 515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4923:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            },
                            "value": "Initializable: contract is already initialized"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
                              "typeString": "literal_string \"Initializable: contract is already initialized\""
                            }
                          ],
                          "id": 508,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4873:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4873:99:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 517,
                      "nodeType": "ExpressionStatement",
                      "src": "4873:99:4"
                    },
                    {
                      "expression": {
                        "id": 520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 518,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "4982:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 519,
                          "name": "version",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "4997:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "4982:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 521,
                      "nodeType": "ExpressionStatement",
                      "src": "4982:22:4"
                    },
                    {
                      "expression": {
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 522,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5014:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5030:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "5014:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 525,
                      "nodeType": "ExpressionStatement",
                      "src": "5014:20:4"
                    },
                    {
                      "id": 526,
                      "nodeType": "PlaceholderStatement",
                      "src": "5044:1:4"
                    },
                    {
                      "expression": {
                        "id": 529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 527,
                          "name": "_initializing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "5055:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5071:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5055:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 530,
                      "nodeType": "ExpressionStatement",
                      "src": "5055:21:4"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 532,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 506,
                            "src": "5103:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "id": 531,
                          "name": "Initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 447,
                          "src": "5091:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8)"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5091:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 534,
                      "nodeType": "EmitStatement",
                      "src": "5086:25:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 504,
                  "nodeType": "StructuredDocumentation",
                  "src": "3758:1062:4",
                  "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
                },
                "id": 536,
                "name": "reinitializer",
                "nameLocation": "4834:13:4",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 507,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 506,
                      "mutability": "mutable",
                      "name": "version",
                      "nameLocation": "4854:7:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 536,
                      "src": "4848:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 505,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4848:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4847:15:4"
                },
                "src": "4825:293:4",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 545,
                  "nodeType": "Block",
                  "src": "5356:97:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 540,
                            "name": "_initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "5374:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
                            "id": 541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5389:45:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                              "typeString": "literal_string \"Initializable: contract is not initializing\""
                            },
                            "value": "Initializable: contract is not initializing"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
                              "typeString": "literal_string \"Initializable: contract is not initializing\""
                            }
                          ],
                          "id": 539,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5366:69:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 543,
                      "nodeType": "ExpressionStatement",
                      "src": "5366:69:4"
                    },
                    {
                      "id": 544,
                      "nodeType": "PlaceholderStatement",
                      "src": "5445:1:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 537,
                  "nodeType": "StructuredDocumentation",
                  "src": "5124:199:4",
                  "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                },
                "id": 546,
                "name": "onlyInitializing",
                "nameLocation": "5337:16:4",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 538,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5353:2:4"
                },
                "src": "5328:125:4",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 581,
                  "nodeType": "Block",
                  "src": "5988:231:4",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6006:14:4",
                            "subExpression": {
                              "id": 551,
                              "name": "_initializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "6007:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6022:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                              "typeString": "literal_string \"Initializable: contract is initializing\""
                            },
                            "value": "Initializable: contract is initializing"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
                              "typeString": "literal_string \"Initializable: contract is initializing\""
                            }
                          ],
                          "id": 550,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5998:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5998:66:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 555,
                      "nodeType": "ExpressionStatement",
                      "src": "5998:66:4"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 556,
                          "name": "_initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "6078:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6099:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 558,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6099:5:4",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "id": 557,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "6094:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6094:11:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint8",
                              "typeString": "type(uint8)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6106:3:4",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "6094:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "6078:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 580,
                      "nodeType": "IfStatement",
                      "src": "6074:139:4",
                      "trueBody": {
                        "id": 579,
                        "nodeType": "Block",
                        "src": "6111:102:4",
                        "statements": [
                          {
                            "expression": {
                              "id": 569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 563,
                                "name": "_initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 439,
                                "src": "6125:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 566,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6145:5:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      },
                                      "typeName": {
                                        "id": 565,
                                        "name": "uint8",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6145:5:4",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_uint8_$",
                                        "typeString": "type(uint8)"
                                      }
                                    ],
                                    "id": 564,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "6140:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6140:11:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_uint8",
                                    "typeString": "type(uint8)"
                                  }
                                },
                                "id": 568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6152:3:4",
                                "memberName": "max",
                                "nodeType": "MemberAccess",
                                "src": "6140:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "6125:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 570,
                            "nodeType": "ExpressionStatement",
                            "src": "6125:30:4"
                          },
                          {
                            "eventCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 574,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "6191:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        },
                                        "typeName": {
                                          "id": 573,
                                          "name": "uint8",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6191:5:4",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint8_$",
                                          "typeString": "type(uint8)"
                                        }
                                      ],
                                      "id": 572,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "6186:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6186:11:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint8",
                                      "typeString": "type(uint8)"
                                    }
                                  },
                                  "id": 576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "6198:3:4",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "6186:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 571,
                                "name": "Initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 447,
                                "src": "6174:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                                  "typeString": "function (uint8)"
                                }
                              },
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6174:28:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 578,
                            "nodeType": "EmitStatement",
                            "src": "6169:33:4"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 547,
                  "nodeType": "StructuredDocumentation",
                  "src": "5459:475:4",
                  "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                },
                "id": 582,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_disableInitializers",
                "nameLocation": "5948:20:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 548,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5968:2:4"
                },
                "returnParameters": {
                  "id": 549,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5988:0:4"
                },
                "scope": 601,
                "src": "5939:280:4",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 590,
                  "nodeType": "Block",
                  "src": "6393:36:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 588,
                        "name": "_initialized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 439,
                        "src": "6410:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 587,
                      "id": 589,
                      "nodeType": "Return",
                      "src": "6403:19:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 583,
                  "nodeType": "StructuredDocumentation",
                  "src": "6225:99:4",
                  "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                },
                "id": 591,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_getInitializedVersion",
                "nameLocation": "6338:22:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 584,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6360:2:4"
                },
                "returnParameters": {
                  "id": 587,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 586,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 591,
                      "src": "6386:5:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "6386:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6385:7:4"
                },
                "scope": 601,
                "src": "6329:100:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 599,
                  "nodeType": "Block",
                  "src": "6601:37:4",
                  "statements": [
                    {
                      "expression": {
                        "id": 597,
                        "name": "_initializing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "6618:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 596,
                      "id": 598,
                      "nodeType": "Return",
                      "src": "6611:20:4"
                    }
                  ]
                },
                "documentation": {
                  "id": 592,
                  "nodeType": "StructuredDocumentation",
                  "src": "6435:105:4",
                  "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                },
                "id": 600,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_isInitializing",
                "nameLocation": "6554:15:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 593,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6569:2:4"
                },
                "returnParameters": {
                  "id": 596,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 600,
                      "src": "6595:4:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6595:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6594:6:4"
                },
                "scope": 601,
                "src": "6545:93:4",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 602,
            "src": "2394:4246:4",
            "usedErrors": []
          }
        ],
        "src": "113:6528:4"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
      "id": 5,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "exportedSymbols": {
          "ContextUpgradeable": [
            1698
          ],
          "ERC20Upgradeable": [
            1214
          ],
          "IERC20MetadataUpgradeable": [
            1317
          ],
          "IERC20Upgradeable": [
            1292
          ],
          "Initializable": [
            601
          ]
        },
        "id": 1215,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 603,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "105:23:5"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "file": "./IERC20Upgradeable.sol",
            "id": 604,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1215,
            "sourceUnit": 1293,
            "src": "130:33:5",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
            "file": "./extensions/IERC20MetadataUpgradeable.sol",
            "id": 605,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1215,
            "sourceUnit": 1318,
            "src": "164:52:5",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
            "file": "../../utils/ContextUpgradeable.sol",
            "id": 606,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1215,
            "sourceUnit": 1699,
            "src": "217:44:5",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "file": "../../proxy/utils/Initializable.sol",
            "id": 608,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1215,
            "sourceUnit": 602,
            "src": "262:66:5",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 607,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 601,
                  "src": "270:13:5",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 610,
                  "name": "Initializable",
                  "nameLocations": [
                    "1661:13:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 601,
                  "src": "1661:13:5"
                },
                "id": 611,
                "nodeType": "InheritanceSpecifier",
                "src": "1661:13:5"
              },
              {
                "baseName": {
                  "id": 612,
                  "name": "ContextUpgradeable",
                  "nameLocations": [
                    "1676:18:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1698,
                  "src": "1676:18:5"
                },
                "id": 613,
                "nodeType": "InheritanceSpecifier",
                "src": "1676:18:5"
              },
              {
                "baseName": {
                  "id": 614,
                  "name": "IERC20Upgradeable",
                  "nameLocations": [
                    "1696:17:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "1696:17:5"
                },
                "id": 615,
                "nodeType": "InheritanceSpecifier",
                "src": "1696:17:5"
              },
              {
                "baseName": {
                  "id": 616,
                  "name": "IERC20MetadataUpgradeable",
                  "nameLocations": [
                    "1715:25:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1317,
                  "src": "1715:25:5"
                },
                "id": 617,
                "nodeType": "InheritanceSpecifier",
                "src": "1715:25:5"
              }
            ],
            "canonicalName": "ERC20Upgradeable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 609,
              "nodeType": "StructuredDocumentation",
              "src": "330:1301:5",
              "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
            },
            "fullyImplemented": true,
            "id": 1214,
            "linearizedBaseContracts": [
              1214,
              1317,
              1292,
              1698,
              601
            ],
            "name": "ERC20Upgradeable",
            "nameLocation": "1641:16:5",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 621,
                "mutability": "mutable",
                "name": "_balances",
                "nameLocation": "1783:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 1214,
                "src": "1747:45:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 620,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1755:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1747:27:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 619,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 627,
                "mutability": "mutable",
                "name": "_allowances",
                "nameLocation": "1855:11:5",
                "nodeType": "VariableDeclaration",
                "scope": 1214,
                "src": "1799:67:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 626,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1807:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1799:47:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 625,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 623,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1826:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1818:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 624,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1837:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 629,
                "mutability": "mutable",
                "name": "_totalSupply",
                "nameLocation": "1889:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 1214,
                "src": "1873:28:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 628,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1873:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 631,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "1923:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 1214,
                "src": "1908:20:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 630,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1908:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 633,
                "mutability": "mutable",
                "name": "_symbol",
                "nameLocation": "1949:7:5",
                "nodeType": "VariableDeclaration",
                "scope": 1214,
                "src": "1934:22:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 632,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1934:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 648,
                  "nodeType": "Block",
                  "src": "2231:55:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 644,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 636,
                            "src": "2264:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 645,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "2271:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 643,
                          "name": "__ERC20_init_unchained",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "2241:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory,string memory)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2241:38:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 647,
                      "nodeType": "ExpressionStatement",
                      "src": "2241:38:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 634,
                  "nodeType": "StructuredDocumentation",
                  "src": "1963:171:5",
                  "text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
                },
                "id": 649,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 641,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 640,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "2214:16:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 546,
                      "src": "2214:16:5"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2214:16:5"
                  }
                ],
                "name": "__ERC20_init",
                "nameLocation": "2148:12:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 639,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 636,
                      "mutability": "mutable",
                      "name": "name_",
                      "nameLocation": "2175:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "2161:19:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 635,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2161:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 638,
                      "mutability": "mutable",
                      "name": "symbol_",
                      "nameLocation": "2196:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 649,
                      "src": "2182:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 637,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2182:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2160:44:5"
                },
                "returnParameters": {
                  "id": 642,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2231:0:5"
                },
                "scope": 1214,
                "src": "2139:147:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 666,
                  "nodeType": "Block",
                  "src": "2394:57:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 658,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "2404:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 659,
                          "name": "name_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 651,
                          "src": "2412:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2404:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 661,
                      "nodeType": "ExpressionStatement",
                      "src": "2404:13:5"
                    },
                    {
                      "expression": {
                        "id": 664,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 662,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "2427:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 663,
                          "name": "symbol_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 653,
                          "src": "2437:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2427:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 665,
                      "nodeType": "ExpressionStatement",
                      "src": "2427:17:5"
                    }
                  ]
                },
                "id": 667,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 656,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 655,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "2377:16:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 546,
                      "src": "2377:16:5"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2377:16:5"
                  }
                ],
                "name": "__ERC20_init_unchained",
                "nameLocation": "2301:22:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 654,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 651,
                      "mutability": "mutable",
                      "name": "name_",
                      "nameLocation": "2338:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2324:19:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 650,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2324:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 653,
                      "mutability": "mutable",
                      "name": "symbol_",
                      "nameLocation": "2359:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 667,
                      "src": "2345:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 652,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2345:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2323:44:5"
                },
                "returnParameters": {
                  "id": 657,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2394:0:5"
                },
                "scope": 1214,
                "src": "2292:159:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  1304
                ],
                "body": {
                  "id": 676,
                  "nodeType": "Block",
                  "src": "2585:29:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 674,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "2602:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 673,
                      "id": 675,
                      "nodeType": "Return",
                      "src": "2595:12:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 668,
                  "nodeType": "StructuredDocumentation",
                  "src": "2457:54:5",
                  "text": " @dev Returns the name of the token."
                },
                "functionSelector": "06fdde03",
                "id": 677,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "2525:4:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 670,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "2552:8:5"
                },
                "parameters": {
                  "id": 669,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2529:2:5"
                },
                "returnParameters": {
                  "id": 673,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 672,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 677,
                      "src": "2570:13:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 671,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2570:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2569:15:5"
                },
                "scope": 1214,
                "src": "2516:98:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1310
                ],
                "body": {
                  "id": 686,
                  "nodeType": "Block",
                  "src": "2798:31:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 684,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "2815:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 683,
                      "id": 685,
                      "nodeType": "Return",
                      "src": "2808:14:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 678,
                  "nodeType": "StructuredDocumentation",
                  "src": "2620:102:5",
                  "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                },
                "functionSelector": "95d89b41",
                "id": 687,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "2736:6:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 680,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "2765:8:5"
                },
                "parameters": {
                  "id": 679,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2742:2:5"
                },
                "returnParameters": {
                  "id": 683,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 682,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 687,
                      "src": "2783:13:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2783:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2782:15:5"
                },
                "scope": 1214,
                "src": "2727:102:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1316
                ],
                "body": {
                  "id": 696,
                  "nodeType": "Block",
                  "src": "3527:26:5",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "3138",
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3544:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "functionReturnParameters": 693,
                      "id": 695,
                      "nodeType": "Return",
                      "src": "3537:9:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 688,
                  "nodeType": "StructuredDocumentation",
                  "src": "2835:622:5",
                  "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                },
                "functionSelector": "313ce567",
                "id": 697,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nameLocation": "3471:8:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 690,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3502:8:5"
                },
                "parameters": {
                  "id": 689,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3479:2:5"
                },
                "returnParameters": {
                  "id": 693,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 692,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 697,
                      "src": "3520:5:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 691,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3520:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3519:7:5"
                },
                "scope": 1214,
                "src": "3462:91:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1241
                ],
                "body": {
                  "id": 706,
                  "nodeType": "Block",
                  "src": "3683:36:5",
                  "statements": [
                    {
                      "expression": {
                        "id": 704,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 629,
                        "src": "3700:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 703,
                      "id": 705,
                      "nodeType": "Return",
                      "src": "3693:19:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 698,
                  "nodeType": "StructuredDocumentation",
                  "src": "3559:49:5",
                  "text": " @dev See {IERC20-totalSupply}."
                },
                "functionSelector": "18160ddd",
                "id": 707,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "3622:11:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 700,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3656:8:5"
                },
                "parameters": {
                  "id": 699,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3633:2:5"
                },
                "returnParameters": {
                  "id": 703,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 702,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 707,
                      "src": "3674:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3673:9:5"
                },
                "scope": 1214,
                "src": "3613:106:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1249
                ],
                "body": {
                  "id": 720,
                  "nodeType": "Block",
                  "src": "3860:42:5",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 716,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "3877:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 718,
                        "indexExpression": {
                          "id": 717,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 710,
                          "src": "3887:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3877:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 715,
                      "id": 719,
                      "nodeType": "Return",
                      "src": "3870:25:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 708,
                  "nodeType": "StructuredDocumentation",
                  "src": "3725:47:5",
                  "text": " @dev See {IERC20-balanceOf}."
                },
                "functionSelector": "70a08231",
                "id": 721,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "3786:9:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 712,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3833:8:5"
                },
                "parameters": {
                  "id": 711,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 710,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "3804:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "3796:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 709,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3796:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3795:17:5"
                },
                "returnParameters": {
                  "id": 715,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 714,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 721,
                      "src": "3851:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 713,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3851:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3850:9:5"
                },
                "scope": 1214,
                "src": "3777:125:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1259
                ],
                "body": {
                  "id": 745,
                  "nodeType": "Block",
                  "src": "4183:104:5",
                  "statements": [
                    {
                      "assignments": [
                        733
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 733,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "4201:5:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 745,
                          "src": "4193:13:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 732,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4193:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 736,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 734,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "4209:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4209:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4193:28:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 738,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "4241:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 739,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 724,
                            "src": "4248:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 740,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 726,
                            "src": "4252:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 737,
                          "name": "_transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "4231:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4231:28:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 742,
                      "nodeType": "ExpressionStatement",
                      "src": "4231:28:5"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4276:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 731,
                      "id": 744,
                      "nodeType": "Return",
                      "src": "4269:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 722,
                  "nodeType": "StructuredDocumentation",
                  "src": "3908:185:5",
                  "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
                },
                "functionSelector": "a9059cbb",
                "id": 746,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "4107:8:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 728,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4159:8:5"
                },
                "parameters": {
                  "id": 727,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 724,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4124:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "4116:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 723,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4116:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 726,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4136:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "4128:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4128:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4115:28:5"
                },
                "returnParameters": {
                  "id": 731,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 730,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 746,
                      "src": "4177:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4177:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4176:6:5"
                },
                "scope": 1214,
                "src": "4098:189:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1269
                ],
                "body": {
                  "id": 763,
                  "nodeType": "Block",
                  "src": "4443:51:5",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 757,
                            "name": "_allowances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 627,
                            "src": "4460:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 759,
                          "indexExpression": {
                            "id": 758,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "4472:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4460:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 761,
                        "indexExpression": {
                          "id": 760,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "4479:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4460:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 756,
                      "id": 762,
                      "nodeType": "Return",
                      "src": "4453:34:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 747,
                  "nodeType": "StructuredDocumentation",
                  "src": "4293:47:5",
                  "text": " @dev See {IERC20-allowance}."
                },
                "functionSelector": "dd62ed3e",
                "id": 764,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "4354:9:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 753,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4416:8:5"
                },
                "parameters": {
                  "id": 752,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 749,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4372:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "4364:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 748,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4364:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 751,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "4387:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "4379:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 750,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4379:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4363:32:5"
                },
                "returnParameters": {
                  "id": 756,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 755,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "4434:7:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4434:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4433:9:5"
                },
                "scope": 1214,
                "src": "4345:149:5",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1279
                ],
                "body": {
                  "id": 788,
                  "nodeType": "Block",
                  "src": "4891:108:5",
                  "statements": [
                    {
                      "assignments": [
                        776
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 776,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "4909:5:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 788,
                          "src": "4901:13:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 775,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4901:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 779,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 777,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "4917:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4917:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4901:28:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 781,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "4948:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 782,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4955:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 783,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "4964:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 780,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "4939:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4939:32:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 785,
                      "nodeType": "ExpressionStatement",
                      "src": "4939:32:5"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4988:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 774,
                      "id": 787,
                      "nodeType": "Return",
                      "src": "4981:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 765,
                  "nodeType": "StructuredDocumentation",
                  "src": "4500:297:5",
                  "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                },
                "functionSelector": "095ea7b3",
                "id": 789,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "4811:7:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 771,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "4867:8:5"
                },
                "parameters": {
                  "id": 770,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "4827:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "4819:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 766,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4819:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4844:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "4836:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4836:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4818:33:5"
                },
                "returnParameters": {
                  "id": 774,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 789,
                      "src": "4885:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4885:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4884:6:5"
                },
                "scope": 1214,
                "src": "4802:197:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1291
                ],
                "body": {
                  "id": 821,
                  "nodeType": "Block",
                  "src": "5664:153:5",
                  "statements": [
                    {
                      "assignments": [
                        803
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 803,
                          "mutability": "mutable",
                          "name": "spender",
                          "nameLocation": "5682:7:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 821,
                          "src": "5674:15:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 802,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5674:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 806,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 804,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "5692:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5692:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5674:30:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 808,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "5730:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 809,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 803,
                            "src": "5736:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 810,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "5745:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 807,
                          "name": "_spendAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1186,
                          "src": "5714:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5714:38:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 812,
                      "nodeType": "ExpressionStatement",
                      "src": "5714:38:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 814,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 792,
                            "src": "5772:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 815,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "5778:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 816,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "5782:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 813,
                          "name": "_transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "5762:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5762:27:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 818,
                      "nodeType": "ExpressionStatement",
                      "src": "5762:27:5"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5806:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 801,
                      "id": 820,
                      "nodeType": "Return",
                      "src": "5799:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 790,
                  "nodeType": "StructuredDocumentation",
                  "src": "5005:551:5",
                  "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
                },
                "functionSelector": "23b872dd",
                "id": 822,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "5570:12:5",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 798,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "5640:8:5"
                },
                "parameters": {
                  "id": 797,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 792,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "5591:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "5583:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 791,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5583:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 794,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "5605:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "5597:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5597:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 796,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "5617:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "5609:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 795,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5609:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5582:42:5"
                },
                "returnParameters": {
                  "id": 801,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 822,
                      "src": "5658:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5658:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5657:6:5"
                },
                "scope": 1214,
                "src": "5561:256:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 850,
                  "nodeType": "Block",
                  "src": "6306:140:5",
                  "statements": [
                    {
                      "assignments": [
                        833
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 833,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "6324:5:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 850,
                          "src": "6316:13:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 832,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6316:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 836,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 834,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "6332:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6332:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6316:28:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 838,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 833,
                            "src": "6363:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 839,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "6370:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 841,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 833,
                                  "src": "6389:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 842,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 825,
                                  "src": "6396:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 840,
                                "name": "allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 764,
                                "src": "6379:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view returns (uint256)"
                                }
                              },
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6379:25:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 844,
                              "name": "addedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 827,
                              "src": "6407:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6379:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 837,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1143,
                          "src": "6354:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6354:64:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 847,
                      "nodeType": "ExpressionStatement",
                      "src": "6354:64:5"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6435:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 831,
                      "id": 849,
                      "nodeType": "Return",
                      "src": "6428:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 823,
                  "nodeType": "StructuredDocumentation",
                  "src": "5823:384:5",
                  "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
                },
                "functionSelector": "39509351",
                "id": 851,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "increaseAllowance",
                "nameLocation": "6221:17:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 828,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 825,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "6247:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "6239:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 824,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6239:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 827,
                      "mutability": "mutable",
                      "name": "addedValue",
                      "nameLocation": "6264:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "6256:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6256:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6238:37:5"
                },
                "returnParameters": {
                  "id": 831,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 830,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 851,
                      "src": "6300:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 829,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6300:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6299:6:5"
                },
                "scope": 1214,
                "src": "6212:234:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 891,
                  "nodeType": "Block",
                  "src": "7032:328:5",
                  "statements": [
                    {
                      "assignments": [
                        862
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 862,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "7050:5:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 891,
                          "src": "7042:13:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7042:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 865,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 863,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1675,
                          "src": "7058:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7058:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7042:28:5"
                    },
                    {
                      "assignments": [
                        867
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 867,
                          "mutability": "mutable",
                          "name": "currentAllowance",
                          "nameLocation": "7088:16:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 891,
                          "src": "7080:24:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 866,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7080:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 872,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 869,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "7117:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 870,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 854,
                            "src": "7124:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 868,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "7107:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view returns (uint256)"
                          }
                        },
                        "id": 871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7107:25:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7080:52:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 874,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 867,
                              "src": "7150:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 875,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 856,
                              "src": "7170:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7150:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7187:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "id": 873,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7142:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7142:85:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 879,
                      "nodeType": "ExpressionStatement",
                      "src": "7142:85:5"
                    },
                    {
                      "id": 888,
                      "nodeType": "UncheckedBlock",
                      "src": "7237:95:5",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 881,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 862,
                                "src": "7270:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 882,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 854,
                                "src": "7277:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 883,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 867,
                                  "src": "7286:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 884,
                                  "name": "subtractedValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 856,
                                  "src": "7305:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7286:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 880,
                              "name": "_approve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1143,
                              "src": "7261:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256)"
                              }
                            },
                            "id": 886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7261:60:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 887,
                          "nodeType": "ExpressionStatement",
                          "src": "7261:60:5"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7349:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 860,
                      "id": 890,
                      "nodeType": "Return",
                      "src": "7342:11:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 852,
                  "nodeType": "StructuredDocumentation",
                  "src": "6452:476:5",
                  "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
                },
                "functionSelector": "a457c2d7",
                "id": 892,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "decreaseAllowance",
                "nameLocation": "6942:17:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 857,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "6968:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "6960:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 853,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6960:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 856,
                      "mutability": "mutable",
                      "name": "subtractedValue",
                      "nameLocation": "6985:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "6977:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 855,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6977:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6959:42:5"
                },
                "returnParameters": {
                  "id": 860,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 859,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 892,
                      "src": "7026:4:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 858,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7026:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7025:6:5"
                },
                "scope": 1214,
                "src": "6933:427:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 968,
                  "nodeType": "Block",
                  "src": "7892:710:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 903,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 895,
                              "src": "7910:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7926:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7918:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 904,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7918:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7918:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7910:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7930:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                              "typeString": "literal_string \"ERC20: transfer from the zero address\""
                            },
                            "value": "ERC20: transfer from the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                              "typeString": "literal_string \"ERC20: transfer from the zero address\""
                            }
                          ],
                          "id": 902,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7902:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7902:68:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 911,
                      "nodeType": "ExpressionStatement",
                      "src": "7902:68:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 913,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "7988:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 916,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8002:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7994:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 914,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7994:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7994:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7988:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8006:37:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                              "typeString": "literal_string \"ERC20: transfer to the zero address\""
                            },
                            "value": "ERC20: transfer to the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                              "typeString": "literal_string \"ERC20: transfer to the zero address\""
                            }
                          ],
                          "id": 912,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7980:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7980:64:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 921,
                      "nodeType": "ExpressionStatement",
                      "src": "7980:64:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 923,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "8076:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 924,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "8082:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 925,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "8086:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 922,
                          "name": "_beforeTokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "8055:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8055:38:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 927,
                      "nodeType": "ExpressionStatement",
                      "src": "8055:38:5"
                    },
                    {
                      "assignments": [
                        929
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 929,
                          "mutability": "mutable",
                          "name": "fromBalance",
                          "nameLocation": "8112:11:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 968,
                          "src": "8104:19:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 928,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8104:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 933,
                      "initialValue": {
                        "baseExpression": {
                          "id": 930,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "8126:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 932,
                        "indexExpression": {
                          "id": 931,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 895,
                          "src": "8136:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8126:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8104:37:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 935,
                              "name": "fromBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 929,
                              "src": "8159:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 936,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "8174:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8159:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                            "id": 938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8182:40:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                            },
                            "value": "ERC20: transfer amount exceeds balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                            }
                          ],
                          "id": 934,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8151:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8151:72:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 940,
                      "nodeType": "ExpressionStatement",
                      "src": "8151:72:5"
                    },
                    {
                      "id": 955,
                      "nodeType": "UncheckedBlock",
                      "src": "8233:273:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 941,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "8257:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 943,
                              "indexExpression": {
                                "id": 942,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 895,
                                "src": "8267:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "8257:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 944,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 929,
                                "src": "8275:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 945,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 899,
                                "src": "8289:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8275:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8257:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 948,
                          "nodeType": "ExpressionStatement",
                          "src": "8257:38:5"
                        },
                        {
                          "expression": {
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 949,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "8472:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 951,
                              "indexExpression": {
                                "id": 950,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "8482:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "8472:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 952,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 899,
                              "src": "8489:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8472:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 954,
                          "nodeType": "ExpressionStatement",
                          "src": "8472:23:5"
                        }
                      ]
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 957,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "8530:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 958,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "8536:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 959,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "8540:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 956,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1226,
                          "src": "8521:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8521:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 961,
                      "nodeType": "EmitStatement",
                      "src": "8516:31:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 963,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 895,
                            "src": "8578:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 964,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "8584:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 965,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 899,
                            "src": "8588:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 962,
                          "name": "_afterTokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "8558:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8558:37:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 967,
                      "nodeType": "ExpressionStatement",
                      "src": "8558:37:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 893,
                  "nodeType": "StructuredDocumentation",
                  "src": "7366:443:5",
                  "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
                },
                "id": 969,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transfer",
                "nameLocation": "7823:9:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 900,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 895,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "7841:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 969,
                      "src": "7833:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 894,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7833:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 897,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "7855:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 969,
                      "src": "7847:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 896,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7847:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 899,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "7867:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 969,
                      "src": "7859:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 898,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7859:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7832:42:5"
                },
                "returnParameters": {
                  "id": 901,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7892:0:5"
                },
                "scope": 1214,
                "src": "7814:788:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1025,
                  "nodeType": "Block",
                  "src": "8943:470:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 978,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 972,
                              "src": "8961:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 981,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8980:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8972:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 979,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8972:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8972:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8961:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                            "id": 984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8984:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                              "typeString": "literal_string \"ERC20: mint to the zero address\""
                            },
                            "value": "ERC20: mint to the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                              "typeString": "literal_string \"ERC20: mint to the zero address\""
                            }
                          ],
                          "id": 977,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "8953:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8953:65:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 986,
                      "nodeType": "ExpressionStatement",
                      "src": "8953:65:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9058:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9050:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 988,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9050:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9050:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 992,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9062:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 993,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "9071:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 987,
                          "name": "_beforeTokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "9029:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9029:49:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 995,
                      "nodeType": "ExpressionStatement",
                      "src": "9029:49:5"
                    },
                    {
                      "expression": {
                        "id": 998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 996,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 629,
                          "src": "9089:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 997,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 974,
                          "src": "9105:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9089:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 999,
                      "nodeType": "ExpressionStatement",
                      "src": "9089:22:5"
                    },
                    {
                      "id": 1006,
                      "nodeType": "UncheckedBlock",
                      "src": "9121:175:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1000,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "9257:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1002,
                              "indexExpression": {
                                "id": 1001,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "9267:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "9257:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "id": 1003,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 974,
                              "src": "9279:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9257:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1005,
                          "nodeType": "ExpressionStatement",
                          "src": "9257:28:5"
                        }
                      ]
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1010,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9327:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9319:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9319:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9319:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1012,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9331:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1013,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "9340:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1007,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1226,
                          "src": "9310:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9310:37:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1015,
                      "nodeType": "EmitStatement",
                      "src": "9305:42:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1019,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9386:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9378:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1017,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9378:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9378:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1021,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 972,
                            "src": "9390:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1022,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 974,
                            "src": "9399:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1016,
                          "name": "_afterTokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "9358:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9358:48:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1024,
                      "nodeType": "ExpressionStatement",
                      "src": "9358:48:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 970,
                  "nodeType": "StructuredDocumentation",
                  "src": "8608:265:5",
                  "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
                },
                "id": 1026,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_mint",
                "nameLocation": "8887:5:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 975,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 972,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "8901:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "8893:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 971,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8893:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 974,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "8918:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "8910:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 973,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8910:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8892:33:5"
                },
                "returnParameters": {
                  "id": 976,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8943:0:5"
                },
                "scope": 1214,
                "src": "8878:535:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1097,
                  "nodeType": "Block",
                  "src": "9798:594:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1035,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1029,
                              "src": "9816:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9835:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1037,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9827:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1036,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9827:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9827:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9816:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                            "id": 1041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9839:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                              "typeString": "literal_string \"ERC20: burn from the zero address\""
                            },
                            "value": "ERC20: burn from the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                              "typeString": "literal_string \"ERC20: burn from the zero address\""
                            }
                          ],
                          "id": 1034,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "9808:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9808:67:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1043,
                      "nodeType": "ExpressionStatement",
                      "src": "9808:67:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1045,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "9907:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9924:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9916:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1046,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9916:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9916:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1050,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "9928:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1044,
                          "name": "_beforeTokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "9886:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9886:49:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1052,
                      "nodeType": "ExpressionStatement",
                      "src": "9886:49:5"
                    },
                    {
                      "assignments": [
                        1054
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1054,
                          "mutability": "mutable",
                          "name": "accountBalance",
                          "nameLocation": "9954:14:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 1097,
                          "src": "9946:22:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1053,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9946:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1058,
                      "initialValue": {
                        "baseExpression": {
                          "id": 1055,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "9971:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1057,
                        "indexExpression": {
                          "id": 1056,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1029,
                          "src": "9981:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9971:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9946:43:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1060,
                              "name": "accountBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1054,
                              "src": "10007:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1061,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1031,
                              "src": "10025:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10007:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                            "id": 1063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10033:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                              "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                            },
                            "value": "ERC20: burn amount exceeds balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                              "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                            }
                          ],
                          "id": 1059,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "9999:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9999:71:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1065,
                      "nodeType": "ExpressionStatement",
                      "src": "9999:71:5"
                    },
                    {
                      "id": 1078,
                      "nodeType": "UncheckedBlock",
                      "src": "10080:194:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 1072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1066,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "10104:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1068,
                              "indexExpression": {
                                "id": 1067,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1029,
                                "src": "10114:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "10104:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1069,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1054,
                                "src": "10125:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1070,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1031,
                                "src": "10142:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10125:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10104:44:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1073,
                          "nodeType": "ExpressionStatement",
                          "src": "10104:44:5"
                        },
                        {
                          "expression": {
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1074,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 629,
                              "src": "10241:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "-=",
                            "rightHandSide": {
                              "id": 1075,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1031,
                              "src": "10257:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10241:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1077,
                          "nodeType": "ExpressionStatement",
                          "src": "10241:22:5"
                        }
                      ]
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1080,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "10298:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10315:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10307:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1081,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10307:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10307:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1085,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "10319:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1079,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1226,
                          "src": "10289:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10289:37:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1087,
                      "nodeType": "EmitStatement",
                      "src": "10284:42:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1089,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "10357:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1092,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10374:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10366:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1090,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10366:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10366:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1094,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1031,
                            "src": "10378:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1088,
                          "name": "_afterTokenTransfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1208,
                          "src": "10337:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10337:48:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1096,
                      "nodeType": "ExpressionStatement",
                      "src": "10337:48:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 1027,
                  "nodeType": "StructuredDocumentation",
                  "src": "9419:309:5",
                  "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
                },
                "id": 1098,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_burn",
                "nameLocation": "9742:5:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1032,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1029,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "9756:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "9748:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9748:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1031,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "9773:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1098,
                      "src": "9765:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1030,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9765:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9747:33:5"
                },
                "returnParameters": {
                  "id": 1033,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9798:0:5"
                },
                "scope": 1214,
                "src": "9733:659:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1142,
                  "nodeType": "Block",
                  "src": "10898:257:5",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1109,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1101,
                              "src": "10916:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1112,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10933:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10925:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1110,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10925:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10925:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10916:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10937:38:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                              "typeString": "literal_string \"ERC20: approve from the zero address\""
                            },
                            "value": "ERC20: approve from the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                              "typeString": "literal_string \"ERC20: approve from the zero address\""
                            }
                          ],
                          "id": 1108,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "10908:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10908:68:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1117,
                      "nodeType": "ExpressionStatement",
                      "src": "10908:68:5"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1119,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1103,
                              "src": "10994:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11013:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11005:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1120,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11005:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11005:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10994:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                            "id": 1125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11017:36:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                              "typeString": "literal_string \"ERC20: approve to the zero address\""
                            },
                            "value": "ERC20: approve to the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                              "typeString": "literal_string \"ERC20: approve to the zero address\""
                            }
                          ],
                          "id": 1118,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "10986:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10986:68:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1127,
                      "nodeType": "ExpressionStatement",
                      "src": "10986:68:5"
                    },
                    {
                      "expression": {
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1128,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "11065:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1131,
                            "indexExpression": {
                              "id": 1129,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1101,
                              "src": "11077:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11065:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1132,
                          "indexExpression": {
                            "id": 1130,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "11084:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "11065:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1133,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "11095:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11065:36:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1135,
                      "nodeType": "ExpressionStatement",
                      "src": "11065:36:5"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1137,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1101,
                            "src": "11125:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1138,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "11132:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1139,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "11141:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1136,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1235,
                          "src": "11116:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 1140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11116:32:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1141,
                      "nodeType": "EmitStatement",
                      "src": "11111:37:5"
                    }
                  ]
                },
                "documentation": {
                  "id": 1099,
                  "nodeType": "StructuredDocumentation",
                  "src": "10398:412:5",
                  "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
                },
                "id": 1143,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_approve",
                "nameLocation": "10824:8:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1106,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1101,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10841:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "10833:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1100,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10833:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1103,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "10856:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "10848:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1102,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10848:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1105,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "10873:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1143,
                      "src": "10865:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1104,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10865:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "10832:48:5"
                },
                "returnParameters": {
                  "id": 1107,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "10898:0:5"
                },
                "scope": 1214,
                "src": "10815:340:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1185,
                  "nodeType": "Block",
                  "src": "11526:321:5",
                  "statements": [
                    {
                      "assignments": [
                        1154
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1154,
                          "mutability": "mutable",
                          "name": "currentAllowance",
                          "nameLocation": "11544:16:5",
                          "nodeType": "VariableDeclaration",
                          "scope": 1185,
                          "src": "11536:24:5",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 1153,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11536:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1159,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1156,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1146,
                            "src": "11573:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1157,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1148,
                            "src": "11580:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1155,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 764,
                          "src": "11563:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view returns (uint256)"
                          }
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11563:25:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "11536:52:5"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1160,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1154,
                          "src": "11602:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11627:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1162,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11627:7:5",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 1161,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "11622:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11622:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 1165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11636:3:5",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "11622:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11602:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1184,
                      "nodeType": "IfStatement",
                      "src": "11598:243:5",
                      "trueBody": {
                        "id": 1183,
                        "nodeType": "Block",
                        "src": "11641:200:5",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1168,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "11663:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 1169,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1150,
                                    "src": "11683:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11663:26:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11691:31:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                    "typeString": "literal_string \"ERC20: insufficient allowance\""
                                  },
                                  "value": "ERC20: insufficient allowance"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                    "typeString": "literal_string \"ERC20: insufficient allowance\""
                                  }
                                ],
                                "id": 1167,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "11655:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11655:68:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1173,
                            "nodeType": "ExpressionStatement",
                            "src": "11655:68:5"
                          },
                          {
                            "id": 1182,
                            "nodeType": "UncheckedBlock",
                            "src": "11737:94:5",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 1175,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1146,
                                      "src": "11774:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 1176,
                                      "name": "spender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1148,
                                      "src": "11781:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1179,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1177,
                                        "name": "currentAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1154,
                                        "src": "11790:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1178,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1150,
                                        "src": "11809:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11790:25:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1174,
                                    "name": "_approve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1143,
                                    "src": "11765:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,address,uint256)"
                                    }
                                  },
                                  "id": 1180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11765:51:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 1181,
                                "nodeType": "ExpressionStatement",
                                "src": "11765:51:5"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 1144,
                  "nodeType": "StructuredDocumentation",
                  "src": "11161:270:5",
                  "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
                },
                "id": 1186,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_spendAllowance",
                "nameLocation": "11445:15:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1151,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1146,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "11469:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "11461:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1145,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11461:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1148,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "11484:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "11476:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1147,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11476:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1150,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "11501:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1186,
                      "src": "11493:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11493:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "11460:48:5"
                },
                "returnParameters": {
                  "id": 1152,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "11526:0:5"
                },
                "scope": 1214,
                "src": "11436:411:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1196,
                  "nodeType": "Block",
                  "src": "12520:2:5",
                  "statements": []
                },
                "documentation": {
                  "id": 1187,
                  "nodeType": "StructuredDocumentation",
                  "src": "11853:573:5",
                  "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
                },
                "id": 1197,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_beforeTokenTransfer",
                "nameLocation": "12440:20:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1194,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1189,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "12469:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1197,
                      "src": "12461:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1188,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12461:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1191,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "12483:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1197,
                      "src": "12475:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1190,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12475:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1193,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "12495:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1197,
                      "src": "12487:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12487:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "12460:42:5"
                },
                "returnParameters": {
                  "id": 1195,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "12520:0:5"
                },
                "scope": 1214,
                "src": "12431:91:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1207,
                  "nodeType": "Block",
                  "src": "13198:2:5",
                  "statements": []
                },
                "documentation": {
                  "id": 1198,
                  "nodeType": "StructuredDocumentation",
                  "src": "12528:577:5",
                  "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
                },
                "id": 1208,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_afterTokenTransfer",
                "nameLocation": "13119:19:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1205,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1200,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "13147:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "13139:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1199,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13139:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1202,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "13161:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "13153:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1201,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13153:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1204,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "13173:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1208,
                      "src": "13165:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13165:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "13138:42:5"
                },
                "returnParameters": {
                  "id": 1206,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "13198:0:5"
                },
                "scope": 1214,
                "src": "13110:90:5",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 1209,
                  "nodeType": "StructuredDocumentation",
                  "src": "13206:254:5",
                  "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
                },
                "id": 1213,
                "mutability": "mutable",
                "name": "__gap",
                "nameLocation": "13485:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 1214,
                "src": "13465:25:5",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$45_storage",
                  "typeString": "uint256[45]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13465:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1212,
                  "length": {
                    "hexValue": "3435",
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13473:2:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_45_by_1",
                      "typeString": "int_const 45"
                    },
                    "value": "45"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "13465:11:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
                    "typeString": "uint256[45]"
                  }
                },
                "visibility": "private"
              }
            ],
            "scope": 1215,
            "src": "1632:11861:5",
            "usedErrors": []
          }
        ],
        "src": "105:13389:5"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
      "id": 6,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "exportedSymbols": {
          "IERC20Upgradeable": [
            1292
          ]
        },
        "id": 1293,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1216,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "106:23:6"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC20Upgradeable",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 1217,
              "nodeType": "StructuredDocumentation",
              "src": "131:70:6",
              "text": " @dev Interface of the ERC20 standard as defined in the EIP."
            },
            "fullyImplemented": false,
            "id": 1292,
            "linearizedBaseContracts": [
              1292
            ],
            "name": "IERC20Upgradeable",
            "nameLocation": "212:17:6",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": {
                  "id": 1218,
                  "nodeType": "StructuredDocumentation",
                  "src": "236:158:6",
                  "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                },
                "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                "id": 1226,
                "name": "Transfer",
                "nameLocation": "405:8:6",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1225,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1220,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "430:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1226,
                      "src": "414:20:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1219,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "414:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1222,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "452:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1226,
                      "src": "436:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "436:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1224,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "464:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1226,
                      "src": "456:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1223,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "456:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "413:57:6"
                },
                "src": "399:72:6"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 1227,
                  "nodeType": "StructuredDocumentation",
                  "src": "477:148:6",
                  "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                },
                "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                "id": 1235,
                "name": "Approval",
                "nameLocation": "636:8:6",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1234,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1229,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "661:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1235,
                      "src": "645:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "645:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1231,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "684:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1235,
                      "src": "668:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "668:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1233,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "701:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1235,
                      "src": "693:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "693:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "644:63:6"
                },
                "src": "630:78:6"
              },
              {
                "documentation": {
                  "id": 1236,
                  "nodeType": "StructuredDocumentation",
                  "src": "714:66:6",
                  "text": " @dev Returns the amount of tokens in existence."
                },
                "functionSelector": "18160ddd",
                "id": 1241,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "794:11:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1237,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "805:2:6"
                },
                "returnParameters": {
                  "id": 1240,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1239,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1241,
                      "src": "831:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1238,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "831:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "830:9:6"
                },
                "scope": 1292,
                "src": "785:55:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1242,
                  "nodeType": "StructuredDocumentation",
                  "src": "846:72:6",
                  "text": " @dev Returns the amount of tokens owned by `account`."
                },
                "functionSelector": "70a08231",
                "id": 1249,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "932:9:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1245,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1244,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "950:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "942:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1243,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "942:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "941:17:6"
                },
                "returnParameters": {
                  "id": 1248,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "982:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "982:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "981:9:6"
                },
                "scope": 1292,
                "src": "923:68:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1250,
                  "nodeType": "StructuredDocumentation",
                  "src": "997:202:6",
                  "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                },
                "functionSelector": "a9059cbb",
                "id": 1259,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "1213:8:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1255,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1252,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1230:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1259,
                      "src": "1222:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1251,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1222:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1254,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1242:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1259,
                      "src": "1234:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1253,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1234:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1221:28:6"
                },
                "returnParameters": {
                  "id": 1258,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1257,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1259,
                      "src": "1268:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1256,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1267:6:6"
                },
                "scope": 1292,
                "src": "1204:70:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1260,
                  "nodeType": "StructuredDocumentation",
                  "src": "1280:264:6",
                  "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                },
                "functionSelector": "dd62ed3e",
                "id": 1269,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "1558:9:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1265,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1262,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1576:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "1568:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1568:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1591:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "1583:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1583:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1567:32:6"
                },
                "returnParameters": {
                  "id": 1268,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1267,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1269,
                      "src": "1623:7:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1266,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1623:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1622:9:6"
                },
                "scope": 1292,
                "src": "1549:83:6",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1270,
                  "nodeType": "StructuredDocumentation",
                  "src": "1638:642:6",
                  "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                },
                "functionSelector": "095ea7b3",
                "id": 1279,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "2294:7:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1275,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1272,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "2310:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1279,
                      "src": "2302:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1271,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2302:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1274,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2327:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1279,
                      "src": "2319:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1273,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2319:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2301:33:6"
                },
                "returnParameters": {
                  "id": 1278,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1277,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1279,
                      "src": "2353:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1276,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2353:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2352:6:6"
                },
                "scope": 1292,
                "src": "2285:74:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1280,
                  "nodeType": "StructuredDocumentation",
                  "src": "2365:287:6",
                  "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                },
                "functionSelector": "23b872dd",
                "id": 1291,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "2666:12:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1287,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "2687:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2679:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1281,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2679:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1284,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "2701:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2693:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2693:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2713:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2705:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2705:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2678:42:6"
                },
                "returnParameters": {
                  "id": 1290,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1289,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1291,
                      "src": "2739:4:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1288,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2739:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2738:6:6"
                },
                "scope": 1292,
                "src": "2657:88:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1293,
            "src": "202:2545:6",
            "usedErrors": []
          }
        ],
        "src": "106:2642:6"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
      "id": 7,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
        "exportedSymbols": {
          "IERC20MetadataUpgradeable": [
            1317
          ],
          "IERC20Upgradeable": [
            1292
          ]
        },
        "id": 1318,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1294,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "110:23:7"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
            "file": "../IERC20Upgradeable.sol",
            "id": 1295,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1318,
            "sourceUnit": 1293,
            "src": "135:34:7",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1297,
                  "name": "IERC20Upgradeable",
                  "nameLocations": [
                    "327:17:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1292,
                  "src": "327:17:7"
                },
                "id": 1298,
                "nodeType": "InheritanceSpecifier",
                "src": "327:17:7"
              }
            ],
            "canonicalName": "IERC20MetadataUpgradeable",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 1296,
              "nodeType": "StructuredDocumentation",
              "src": "171:116:7",
              "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
            },
            "fullyImplemented": false,
            "id": 1317,
            "linearizedBaseContracts": [
              1317,
              1292
            ],
            "name": "IERC20MetadataUpgradeable",
            "nameLocation": "298:25:7",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 1299,
                  "nodeType": "StructuredDocumentation",
                  "src": "351:54:7",
                  "text": " @dev Returns the name of the token."
                },
                "functionSelector": "06fdde03",
                "id": 1304,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "419:4:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1300,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "423:2:7"
                },
                "returnParameters": {
                  "id": 1303,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1302,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1304,
                      "src": "449:13:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1301,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "449:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "448:15:7"
                },
                "scope": 1317,
                "src": "410:54:7",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1305,
                  "nodeType": "StructuredDocumentation",
                  "src": "470:56:7",
                  "text": " @dev Returns the symbol of the token."
                },
                "functionSelector": "95d89b41",
                "id": 1310,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "540:6:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1306,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "546:2:7"
                },
                "returnParameters": {
                  "id": 1309,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1308,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1310,
                      "src": "572:13:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1307,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "572:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "571:15:7"
                },
                "scope": 1317,
                "src": "531:56:7",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 1311,
                  "nodeType": "StructuredDocumentation",
                  "src": "593:65:7",
                  "text": " @dev Returns the decimals places of the token."
                },
                "functionSelector": "313ce567",
                "id": 1316,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nameLocation": "672:8:7",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1312,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "680:2:7"
                },
                "returnParameters": {
                  "id": 1315,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1314,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1316,
                      "src": "706:5:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1313,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "706:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "705:7:7"
                },
                "scope": 1317,
                "src": "663:50:7",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1318,
            "src": "288:427:7",
            "usedErrors": []
          }
        ],
        "src": "110:606:7"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
      "id": 8,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
        "exportedSymbols": {
          "AddressUpgradeable": [
            1647
          ]
        },
        "id": 1648,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1319,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".1"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:8"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "AddressUpgradeable",
            "contractDependencies": [],
            "contractKind": "library",
            "documentation": {
              "id": 1320,
              "nodeType": "StructuredDocumentation",
              "src": "126:67:8",
              "text": " @dev Collection of functions related to the address type"
            },
            "fullyImplemented": true,
            "id": 1647,
            "linearizedBaseContracts": [
              1647
            ],
            "name": "AddressUpgradeable",
            "nameLocation": "202:18:8",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1334,
                  "nodeType": "Block",
                  "src": "1489:254:8",
                  "statements": [
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 1328,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1323,
                              "src": "1713:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1721:4:8",
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "1713:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1726:6:8",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1713:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1735:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1713:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 1327,
                      "id": 1333,
                      "nodeType": "Return",
                      "src": "1706:30:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1321,
                  "nodeType": "StructuredDocumentation",
                  "src": "227:1191:8",
                  "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
                },
                "id": 1335,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "isContract",
                "nameLocation": "1432:10:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1324,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1323,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "1451:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1335,
                      "src": "1443:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1322,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1443:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1442:17:8"
                },
                "returnParameters": {
                  "id": 1327,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1326,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1335,
                      "src": "1483:4:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1325,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1483:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1482:6:8"
                },
                "scope": 1647,
                "src": "1423:320:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1368,
                  "nodeType": "Block",
                  "src": "2729:241:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1346,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "2755:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$1647",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$1647",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  ],
                                  "id": 1345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2747:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1344,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2747:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2747:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2761:7:8",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "2747:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1349,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1340,
                              "src": "2772:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2747:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                            "id": 1351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2780:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            },
                            "value": "Address: insufficient balance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                              "typeString": "literal_string \"Address: insufficient balance\""
                            }
                          ],
                          "id": 1343,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2739:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2739:73:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1353,
                      "nodeType": "ExpressionStatement",
                      "src": "2739:73:8"
                    },
                    {
                      "assignments": [
                        1355,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1355,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "2829:7:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1368,
                          "src": "2824:12:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1354,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "2824:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 1362,
                      "initialValue": {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 1360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2872:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "id": 1356,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "2842:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2852:4:8",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "2842:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 1358,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1340,
                              "src": "2864:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "2842:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2842:33:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2823:52:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1364,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1355,
                            "src": "2893:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                            "id": 1365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2902:60:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            },
                            "value": "Address: unable to send value, recipient may have reverted"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                              "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                            }
                          ],
                          "id": 1363,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2885:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2885:78:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1367,
                      "nodeType": "ExpressionStatement",
                      "src": "2885:78:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1336,
                  "nodeType": "StructuredDocumentation",
                  "src": "1749:904:8",
                  "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                },
                "id": 1369,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "sendValue",
                "nameLocation": "2667:9:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1341,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1338,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "2693:9:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1369,
                      "src": "2677:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2677:15:8",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1340,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "2712:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1369,
                      "src": "2704:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1339,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2704:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2676:43:8"
                },
                "returnParameters": {
                  "id": 1342,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2729:0:8"
                },
                "scope": 1647,
                "src": "2658:312:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1386,
                  "nodeType": "Block",
                  "src": "3801:96:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1380,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "3840:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1381,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1374,
                            "src": "3848:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 1382,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3854:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                            "id": 1383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3857:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            },
                            "value": "Address: low-level call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                              "typeString": "literal_string \"Address: low-level call failed\""
                            }
                          ],
                          "id": 1379,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1427,
                            1471
                          ],
                          "referencedDeclaration": 1471,
                          "src": "3818:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3818:72:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1378,
                      "id": 1385,
                      "nodeType": "Return",
                      "src": "3811:79:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1370,
                  "nodeType": "StructuredDocumentation",
                  "src": "2976:731:8",
                  "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
                },
                "id": 1387,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "3721:12:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1375,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1372,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "3742:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1387,
                      "src": "3734:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1371,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3734:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1374,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "3763:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1387,
                      "src": "3750:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1373,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3750:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3733:35:8"
                },
                "returnParameters": {
                  "id": 1378,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1377,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1387,
                      "src": "3787:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1376,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3787:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3786:14:8"
                },
                "scope": 1647,
                "src": "3712:185:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1406,
                  "nodeType": "Block",
                  "src": "4266:76:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1400,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1390,
                            "src": "4305:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1401,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1392,
                            "src": "4313:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4319:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "id": 1403,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1394,
                            "src": "4322:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1399,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1427,
                            1471
                          ],
                          "referencedDeclaration": 1471,
                          "src": "4283:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4283:52:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1398,
                      "id": 1405,
                      "nodeType": "Return",
                      "src": "4276:59:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1388,
                  "nodeType": "StructuredDocumentation",
                  "src": "3903:211:8",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 1407,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCall",
                "nameLocation": "4128:12:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1395,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1390,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4158:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1407,
                      "src": "4150:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1389,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4150:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1392,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4187:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1407,
                      "src": "4174:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1391,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4174:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1394,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "4215:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1407,
                      "src": "4201:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1393,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4201:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4140:93:8"
                },
                "returnParameters": {
                  "id": 1398,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1397,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1407,
                      "src": "4252:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1396,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4252:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4251:14:8"
                },
                "scope": 1647,
                "src": "4119:223:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1426,
                  "nodeType": "Block",
                  "src": "4817:111:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1420,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1410,
                            "src": "4856:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1421,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1412,
                            "src": "4864:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1422,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "4870:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                            "id": 1423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4877:43:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            },
                            "value": "Address: low-level call with value failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                              "typeString": "literal_string \"Address: low-level call with value failed\""
                            }
                          ],
                          "id": 1419,
                          "name": "functionCallWithValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1427,
                            1471
                          ],
                          "referencedDeclaration": 1471,
                          "src": "4834:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4834:87:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1418,
                      "id": 1425,
                      "nodeType": "Return",
                      "src": "4827:94:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1408,
                  "nodeType": "StructuredDocumentation",
                  "src": "4348:351:8",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
                },
                "id": 1427,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "4713:21:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1415,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1410,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4743:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "4735:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1409,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4735:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1412,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "4764:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "4751:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1411,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4751:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1414,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "4778:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "4770:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1413,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4770:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4734:50:8"
                },
                "returnParameters": {
                  "id": 1418,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1417,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1427,
                      "src": "4803:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1416,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4803:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4802:14:8"
                },
                "scope": 1647,
                "src": "4704:224:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1470,
                  "nodeType": "Block",
                  "src": "5355:267:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1444,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5381:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$1647",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AddressUpgradeable_$1647",
                                      "typeString": "library AddressUpgradeable"
                                    }
                                  ],
                                  "id": 1443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5373:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1442,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5373:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5373:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5387:7:8",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "5373:21:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 1447,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1434,
                              "src": "5398:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5373:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5405:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            },
                            "value": "Address: insufficient balance for call"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                              "typeString": "literal_string \"Address: insufficient balance for call\""
                            }
                          ],
                          "id": 1441,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5365:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5365:81:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1451,
                      "nodeType": "ExpressionStatement",
                      "src": "5365:81:8"
                    },
                    {
                      "assignments": [
                        1453,
                        1455
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1453,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "5462:7:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1470,
                          "src": "5457:12:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1452,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "5457:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1455,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "5484:10:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1470,
                          "src": "5471:23:8",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1454,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5471:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1462,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1460,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1432,
                            "src": "5524:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1456,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1430,
                              "src": "5498:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5505:4:8",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "5498:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "value"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "id": 1458,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1434,
                              "src": "5517:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "src": "5498:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 1461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5498:31:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5456:73:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1464,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "5573:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1465,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1453,
                            "src": "5581:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1466,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "5590:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1467,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "5602:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1463,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "5546:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5546:69:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1440,
                      "id": 1469,
                      "nodeType": "Return",
                      "src": "5539:76:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1428,
                  "nodeType": "StructuredDocumentation",
                  "src": "4934:237:8",
                  "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
                },
                "id": 1471,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionCallWithValue",
                "nameLocation": "5185:21:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1437,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1430,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5224:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "5216:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1429,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5216:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1432,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5253:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "5240:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1431,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5240:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1434,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "5275:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "5267:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1433,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5267:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1436,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "5304:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "5290:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1435,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5290:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5206:116:8"
                },
                "returnParameters": {
                  "id": 1440,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1439,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1471,
                      "src": "5341:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1438,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5340:14:8"
                },
                "scope": 1647,
                "src": "5176:446:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1487,
                  "nodeType": "Block",
                  "src": "5899:97:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1482,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1474,
                            "src": "5935:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1483,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "5943:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                            "id": 1484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5949:39:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            },
                            "value": "Address: low-level static call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                              "typeString": "literal_string \"Address: low-level static call failed\""
                            }
                          ],
                          "id": 1481,
                          "name": "functionStaticCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1488,
                            1517
                          ],
                          "referencedDeclaration": 1517,
                          "src": "5916:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5916:73:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1480,
                      "id": 1486,
                      "nodeType": "Return",
                      "src": "5909:80:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1472,
                  "nodeType": "StructuredDocumentation",
                  "src": "5628:166:8",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 1488,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "5808:18:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1477,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1474,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "5835:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1488,
                      "src": "5827:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1473,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5827:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1476,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "5856:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1488,
                      "src": "5843:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1475,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5843:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5826:35:8"
                },
                "returnParameters": {
                  "id": 1480,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1479,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1488,
                      "src": "5885:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1478,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5885:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5884:14:8"
                },
                "scope": 1647,
                "src": "5799:197:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1516,
                  "nodeType": "Block",
                  "src": "6338:168:8",
                  "statements": [
                    {
                      "assignments": [
                        1501,
                        1503
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1501,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "6354:7:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1516,
                          "src": "6349:12:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1500,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "6349:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1503,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "6376:10:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1516,
                          "src": "6363:23:8",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1502,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6363:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1508,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1506,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "6408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1504,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1491,
                            "src": "6390:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6397:10:8",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "6390:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6390:23:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6348:65:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1510,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1491,
                            "src": "6457:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1511,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1501,
                            "src": "6465:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1512,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1503,
                            "src": "6474:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1513,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1495,
                            "src": "6486:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1509,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "6430:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6430:69:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1499,
                      "id": 1515,
                      "nodeType": "Return",
                      "src": "6423:76:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1489,
                  "nodeType": "StructuredDocumentation",
                  "src": "6002:173:8",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
                },
                "id": 1517,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionStaticCall",
                "nameLocation": "6189:18:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1496,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1491,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6225:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1517,
                      "src": "6217:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1490,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6217:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6254:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1517,
                      "src": "6241:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6241:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1495,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "6282:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1517,
                      "src": "6268:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1494,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6268:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6207:93:8"
                },
                "returnParameters": {
                  "id": 1499,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1517,
                      "src": "6324:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6324:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6323:14:8"
                },
                "scope": 1647,
                "src": "6180:326:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1533,
                  "nodeType": "Block",
                  "src": "6782:101:8",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1528,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1520,
                            "src": "6820:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1529,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1522,
                            "src": "6828:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                            "id": 1530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6834:41:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            },
                            "value": "Address: low-level delegate call failed"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                              "typeString": "literal_string \"Address: low-level delegate call failed\""
                            }
                          ],
                          "id": 1527,
                          "name": "functionDelegateCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            1534,
                            1563
                          ],
                          "referencedDeclaration": 1563,
                          "src": "6799:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                          }
                        },
                        "id": 1531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6799:77:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1526,
                      "id": 1532,
                      "nodeType": "Return",
                      "src": "6792:84:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1518,
                  "nodeType": "StructuredDocumentation",
                  "src": "6512:168:8",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 1534,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "6694:20:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1523,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1520,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "6723:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1534,
                      "src": "6715:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1519,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6715:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1522,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "6744:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1534,
                      "src": "6731:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1521,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6714:35:8"
                },
                "returnParameters": {
                  "id": 1526,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1525,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1534,
                      "src": "6768:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1524,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6768:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6767:14:8"
                },
                "scope": 1647,
                "src": "6685:198:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1562,
                  "nodeType": "Block",
                  "src": "7224:170:8",
                  "statements": [
                    {
                      "assignments": [
                        1547,
                        1549
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1547,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "7240:7:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1562,
                          "src": "7235:12:8",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 1546,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "7235:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 1549,
                          "mutability": "mutable",
                          "name": "returndata",
                          "nameLocation": "7262:10:8",
                          "nodeType": "VariableDeclaration",
                          "scope": 1562,
                          "src": "7249:23:8",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 1548,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7249:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1554,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 1552,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1539,
                            "src": "7296:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1550,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "7276:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7283:12:8",
                          "memberName": "delegatecall",
                          "nodeType": "MemberAccess",
                          "src": "7276:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) returns (bool,bytes memory)"
                          }
                        },
                        "id": 1553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7276:25:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7234:67:8"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1556,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "7345:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1557,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1547,
                            "src": "7353:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "id": 1558,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1549,
                            "src": "7362:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 1559,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1541,
                            "src": "7374:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1555,
                          "name": "verifyCallResultFromTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1602,
                          "src": "7318:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7318:69:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "functionReturnParameters": 1545,
                      "id": 1561,
                      "nodeType": "Return",
                      "src": "7311:76:8"
                    }
                  ]
                },
                "documentation": {
                  "id": 1535,
                  "nodeType": "StructuredDocumentation",
                  "src": "6889:175:8",
                  "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
                },
                "id": 1563,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "functionDelegateCall",
                "nameLocation": "7078:20:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1542,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1537,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7116:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "7108:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1536,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7108:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1539,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "7145:4:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "7132:17:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1538,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7132:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1541,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7173:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "7159:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1540,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7159:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7098:93:8"
                },
                "returnParameters": {
                  "id": 1545,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1544,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1563,
                      "src": "7210:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1543,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7210:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7209:14:8"
                },
                "scope": 1647,
                "src": "7069:325:8",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1601,
                  "nodeType": "Block",
                  "src": "7876:434:8",
                  "statements": [
                    {
                      "condition": {
                        "id": 1577,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1568,
                        "src": "7890:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1599,
                        "nodeType": "Block",
                        "src": "8246:58:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1595,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1570,
                                  "src": "8268:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 1596,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1572,
                                  "src": "8280:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1594,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1646,
                                "src": "8260:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 1597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8260:33:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1598,
                            "nodeType": "ExpressionStatement",
                            "src": "8260:33:8"
                          }
                        ]
                      },
                      "id": 1600,
                      "nodeType": "IfStatement",
                      "src": "7886:418:8",
                      "trueBody": {
                        "id": 1593,
                        "nodeType": "Block",
                        "src": "7899:341:8",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1578,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1570,
                                  "src": "7917:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 1579,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7928:6:8",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7917:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7938:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7917:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 1590,
                            "nodeType": "IfStatement",
                            "src": "7913:286:8",
                            "trueBody": {
                              "id": 1589,
                              "nodeType": "Block",
                              "src": "7941:258:8",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 1584,
                                            "name": "target",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1566,
                                            "src": "8143:6:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1583,
                                          "name": "isContract",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1335,
                                          "src": "8132:10:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                            "typeString": "function (address) view returns (bool)"
                                          }
                                        },
                                        "id": 1585,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8132:18:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      {
                                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                                        "id": 1586,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8152:31:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        },
                                        "value": "Address: call to non-contract"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                                          "typeString": "literal_string \"Address: call to non-contract\""
                                        }
                                      ],
                                      "id": 1582,
                                      "name": "require",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -18,
                                        -18
                                      ],
                                      "referencedDeclaration": -18,
                                      "src": "8124:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (bool,string memory) pure"
                                      }
                                    },
                                    "id": 1587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8124:60:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1588,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8124:60:8"
                                }
                              ]
                            }
                          },
                          {
                            "expression": {
                              "id": 1591,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "8219:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1576,
                            "id": 1592,
                            "nodeType": "Return",
                            "src": "8212:17:8"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 1564,
                  "nodeType": "StructuredDocumentation",
                  "src": "7400:277:8",
                  "text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
                },
                "id": 1602,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResultFromTarget",
                "nameLocation": "7691:26:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1573,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1566,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "7735:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1602,
                      "src": "7727:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1565,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7727:7:8",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1568,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "7756:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1602,
                      "src": "7751:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1567,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7751:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1570,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "7786:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1602,
                      "src": "7773:23:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1569,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7773:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1572,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "7820:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1602,
                      "src": "7806:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1571,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7806:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7717:121:8"
                },
                "returnParameters": {
                  "id": 1576,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1575,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1602,
                      "src": "7862:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1574,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7862:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7861:14:8"
                },
                "scope": 1647,
                "src": "7682:628:8",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1625,
                  "nodeType": "Block",
                  "src": "8691:135:8",
                  "statements": [
                    {
                      "condition": {
                        "id": 1614,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1605,
                        "src": "8705:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1623,
                        "nodeType": "Block",
                        "src": "8762:58:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1619,
                                  "name": "returndata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1607,
                                  "src": "8784:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "id": 1620,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1609,
                                  "src": "8796:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1618,
                                "name": "_revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1646,
                                "src": "8776:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory,string memory) pure"
                                }
                              },
                              "id": 1621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8776:33:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1622,
                            "nodeType": "ExpressionStatement",
                            "src": "8776:33:8"
                          }
                        ]
                      },
                      "id": 1624,
                      "nodeType": "IfStatement",
                      "src": "8701:119:8",
                      "trueBody": {
                        "id": 1617,
                        "nodeType": "Block",
                        "src": "8714:42:8",
                        "statements": [
                          {
                            "expression": {
                              "id": 1615,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
                              "src": "8735:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "functionReturnParameters": 1613,
                            "id": 1616,
                            "nodeType": "Return",
                            "src": "8728:17:8"
                          }
                        ]
                      }
                    }
                  ]
                },
                "documentation": {
                  "id": 1603,
                  "nodeType": "StructuredDocumentation",
                  "src": "8316:210:8",
                  "text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
                },
                "id": 1626,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "verifyCallResult",
                "nameLocation": "8540:16:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1610,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1605,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8571:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8566:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1604,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8566:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1607,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8601:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8588:23:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1606,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8588:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1609,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8635:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8621:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1608,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8621:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8556:97:8"
                },
                "returnParameters": {
                  "id": 1613,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1612,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1626,
                      "src": "8677:12:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8677:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8676:14:8"
                },
                "scope": 1647,
                "src": "8531:295:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1645,
                  "nodeType": "Block",
                  "src": "8915:457:8",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1633,
                            "name": "returndata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1628,
                            "src": "8991:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9002:6:8",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8991:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9011:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8991:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 1643,
                        "nodeType": "Block",
                        "src": "9321:45:8",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1640,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1630,
                                  "src": "9342:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1639,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "9335:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 1641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9335:20:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1642,
                            "nodeType": "ExpressionStatement",
                            "src": "9335:20:8"
                          }
                        ]
                      },
                      "id": 1644,
                      "nodeType": "IfStatement",
                      "src": "8987:379:8",
                      "trueBody": {
                        "id": 1638,
                        "nodeType": "Block",
                        "src": "9014:301:8",
                        "statements": [
                          {
                            "AST": {
                              "nodeType": "YulBlock",
                              "src": "9172:133:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9190:40:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "9219:10:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9213:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9213:17:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "returndata_size",
                                      "nodeType": "YulTypedName",
                                      "src": "9194:15:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9258:2:8",
                                            "type": "",
                                            "value": "32"
                                          },
                                          {
                                            "name": "returndata",
                                            "nodeType": "YulIdentifier",
                                            "src": "9262:10:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9254:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9254:19:8"
                                      },
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulIdentifier",
                                        "src": "9275:15:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "9247:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9247:44:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9247:44:8"
                                }
                              ]
                            },
                            "documentation": "@solidity memory-safe-assembly",
                            "evmVersion": "paris",
                            "externalReferences": [
                              {
                                "declaration": 1628,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9219:10:8",
                                "valueSize": 1
                              },
                              {
                                "declaration": 1628,
                                "isOffset": false,
                                "isSlot": false,
                                "src": "9262:10:8",
                                "valueSize": 1
                              }
                            ],
                            "id": 1637,
                            "nodeType": "InlineAssembly",
                            "src": "9163:142:8"
                          }
                        ]
                      }
                    }
                  ]
                },
                "id": 1646,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_revert",
                "nameLocation": "8841:7:8",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1631,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1628,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "8862:10:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1646,
                      "src": "8849:23:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1627,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "8849:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1630,
                      "mutability": "mutable",
                      "name": "errorMessage",
                      "nameLocation": "8888:12:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1646,
                      "src": "8874:26:8",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1629,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8874:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8848:53:8"
                },
                "returnParameters": {
                  "id": 1632,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8915:0:8"
                },
                "scope": 1647,
                "src": "8832:540:8",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 1648,
            "src": "194:9180:8",
            "usedErrors": []
          }
        ],
        "src": "101:9274:8"
      }
    },
    "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
      "id": 9,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "exportedSymbols": {
          "ContextUpgradeable": [
            1698
          ],
          "Initializable": [
            601
          ]
        },
        "id": 1699,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1649,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:9"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
            "file": "../proxy/utils/Initializable.sol",
            "id": 1651,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1699,
            "sourceUnit": 602,
            "src": "125:63:9",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1650,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 601,
                  "src": "133:13:9",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1653,
                  "name": "Initializable",
                  "nameLocations": [
                    "727:13:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 601,
                  "src": "727:13:9"
                },
                "id": 1654,
                "nodeType": "InheritanceSpecifier",
                "src": "727:13:9"
              }
            ],
            "canonicalName": "ContextUpgradeable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1652,
              "nodeType": "StructuredDocumentation",
              "src": "190:496:9",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 1698,
            "linearizedBaseContracts": [
              1698,
              601
            ],
            "name": "ContextUpgradeable",
            "nameLocation": "705:18:9",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1659,
                  "nodeType": "Block",
                  "src": "799:7:9",
                  "statements": []
                },
                "id": 1660,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1657,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1656,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "782:16:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 546,
                      "src": "782:16:9"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "782:16:9"
                  }
                ],
                "name": "__Context_init",
                "nameLocation": "756:14:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1655,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "770:2:9"
                },
                "returnParameters": {
                  "id": 1658,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "799:0:9"
                },
                "scope": 1698,
                "src": "747:59:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1665,
                  "nodeType": "Block",
                  "src": "874:7:9",
                  "statements": []
                },
                "id": 1666,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1663,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1662,
                      "name": "onlyInitializing",
                      "nameLocations": [
                        "857:16:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 546,
                      "src": "857:16:9"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "857:16:9"
                  }
                ],
                "name": "__Context_init_unchained",
                "nameLocation": "821:24:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1661,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "845:2:9"
                },
                "returnParameters": {
                  "id": 1664,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "874:0:9"
                },
                "scope": 1698,
                "src": "812:69:9",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1674,
                  "nodeType": "Block",
                  "src": "948:34:9",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 1671,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "965:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "969:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "965:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1670,
                      "id": 1673,
                      "nodeType": "Return",
                      "src": "958:17:9"
                    }
                  ]
                },
                "id": 1675,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "895:10:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1667,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "905:2:9"
                },
                "returnParameters": {
                  "id": 1670,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1669,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1675,
                      "src": "939:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1668,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "938:9:9"
                },
                "scope": 1698,
                "src": "886:96:9",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1683,
                  "nodeType": "Block",
                  "src": "1055:32:9",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 1680,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1072:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1076:4:9",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "1072:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 1679,
                      "id": 1682,
                      "nodeType": "Return",
                      "src": "1065:15:9"
                    }
                  ]
                },
                "id": 1684,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "997:8:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1676,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1005:2:9"
                },
                "returnParameters": {
                  "id": 1679,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1678,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1684,
                      "src": "1039:14:9",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1677,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1039:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1038:16:9"
                },
                "scope": 1698,
                "src": "988:99:9",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1691,
                  "nodeType": "Block",
                  "src": "1165:25:9",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1182:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 1688,
                      "id": 1690,
                      "nodeType": "Return",
                      "src": "1175:8:9"
                    }
                  ]
                },
                "id": 1692,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "1102:20:9",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1685,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1122:2:9"
                },
                "returnParameters": {
                  "id": 1688,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1687,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1692,
                      "src": "1156:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1156:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1155:9:9"
                },
                "scope": 1698,
                "src": "1093:97:9",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 1693,
                  "nodeType": "StructuredDocumentation",
                  "src": "1196:254:9",
                  "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
                },
                "id": 1697,
                "mutability": "mutable",
                "name": "__gap",
                "nameLocation": "1475:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 1698,
                "src": "1455:25:9",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$50_storage",
                  "typeString": "uint256[50]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1455:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1696,
                  "length": {
                    "hexValue": "3530",
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1463:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50_by_1",
                      "typeString": "int_const 50"
                    },
                    "value": "50"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "1455:11:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                    "typeString": "uint256[50]"
                  }
                },
                "visibility": "private"
              }
            ],
            "scope": 1699,
            "src": "687:796:9",
            "usedErrors": []
          }
        ],
        "src": "101:1383:9"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
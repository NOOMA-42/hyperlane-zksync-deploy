{
  "contracts": {
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "IBeacon": {
        "abi": [
          {
            "inputs": [],
            "name": "implementation",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "implementation()": "5c60da1b"
          }
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
        "exportedSymbols": {
          "IBeacon": [
            9
          ]
        },
        "id": 10,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "93:23:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IBeacon",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 2,
              "nodeType": "StructuredDocumentation",
              "src": "118:79:0",
              "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
            },
            "fullyImplemented": false,
            "id": 9,
            "linearizedBaseContracts": [
              9
            ],
            "name": "IBeacon",
            "nameLocation": "208:7:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 3,
                  "nodeType": "StructuredDocumentation",
                  "src": "222:162:0",
                  "text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
                },
                "functionSelector": "5c60da1b",
                "id": 8,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "implementation",
                "nameLocation": "398:14:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 4,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "412:2:0"
                },
                "returnParameters": {
                  "id": 7,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 8,
                      "src": "438:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "438:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "437:9:0"
                },
                "scope": 9,
                "src": "389:58:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 10,
            "src": "198:251:0",
            "usedErrors": []
          }
        ],
        "src": "93:357:0"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
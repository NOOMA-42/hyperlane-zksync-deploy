{
  "contracts": {
    "contracts/interfaces/IInterchainSecurityModule.sol": {
      "IInterchainSecurityModule": {
        "abi": [
          {
            "inputs": [],
            "name": "moduleType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "verify",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"moduleType()\":{\"details\":\"Relayers infer how to fetch and format metadata.\"},\"verify(bytes,bytes)\":{\"params\":{\"_message\":\"Hyperlane encoded interchain message\",\"_metadata\":\"Off-chain metadata provided by a relayer, specific to the security model encoded by the module (e.g. validator signatures)\"},\"returns\":{\"_0\":\"True if the message was verified\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"moduleType()\":{\"notice\":\"Returns an enum that represents the type of security model encoded by this ISM.\"},\"verify(bytes,bytes)\":{\"notice\":\"Defines a security model responsible for verifying interchain messages based on the provided metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":\"IInterchainSecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "moduleType()": "6465e69f",
            "verify(bytes,bytes)": "f7e83aee"
          }
        },
        "irOptimized": ""
      },
      "ISpecifiesInterchainSecurityModule": {
        "abi": [
          {
            "inputs": [],
            "name": "interchainSecurityModule",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"interchainSecurityModule\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":\"ISpecifiesInterchainSecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "interchainSecurityModule()": "de523cf3"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/isms/PausableIsm.sol": {
      "PausableIsm": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Paused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Unpaused",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "moduleType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "pause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "unpause",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "name": "verify",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"verify(bytes,bytes)\":{\"details\":\"Reverts when paused, otherwise returns `true`.\",\"params\":{\"_message\":\"Hyperlane encoded interchain message\",\"_metadata\":\"Off-chain metadata provided by a relayer, specific to the security model encoded by the module (e.g. validator signatures)\"},\"returns\":{\"_0\":\"True if the message was verified\"}}},\"stateVariables\":{\"moduleType\":{\"details\":\"Relayers infer how to fetch and format metadata.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"moduleType()\":{\"notice\":\"Returns an enum that represents the type of security model encoded by this ISM.\"},\"verify(bytes,bytes)\":{\"notice\":\"Defines a security model responsible for verifying interchain messages based on the provided metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/isms/PausableIsm.sol\":\"PausableIsm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"contracts/isms/PausableIsm.sol\":{\"keccak256\":\"0x0a0a7535423a8500d41cd8f04dd03b0d12bc36553c689158a93f6affb6c674c6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d2fcb578fb7108317ebfc8e6c19b47dfe07088f598738e2d9e9bfa159b6feedf\",\"dweb:/ipfs/QmXGoxev7kmTV7SjiKMBoX1w4vFeew2KujAQrNkAvRFPtg\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"PausableIsm.sol:PausableIsm\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2]\n\tadd\tr2, r0, r3\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, r2\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r2, r3\n\tjump.lt\t@.BB0_2\n\tld\tr1, r3\n\tshr.s\t224, r3, r3\n\tsub.s!\t@CPI0_7[0], r3, r4\n\tjump.gt\t@.BB0_12\n\tsub.s!\t@CPI0_13[0], r3, r1\n\tjump.gt\t@.BB0_10\n\tsub.s!\t@CPI0_16[0], r3, r1\n\tjump.eq\t@.BB0_17\n\tsub.s!\t@CPI0_17[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand!\t@CPI0_26[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\tr4, r0, stack-[2]\n\tand\t@CPI0_2[0], r4, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tcontext.caller\tr6\n\tadd\t@CPI0_3[0], r0, r4\n\tadd\tr6, r0, stack-[1]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r1\n\tand\t@CPI0_4[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tand\t@CPI0_5[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_6[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_12:\n\tsub.s!\t@CPI0_8[0], r3, r4\n\tjump.gt\t@.BB0_15\n\tsub.s!\t@CPI0_11[0], r3, r1\n\tjump.eq\t@.BB0_35\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tsub.s!\t@CPI0_14[0], r3, r1\n\tjump.eq\t@.BB0_28\n\tsub.s!\t@CPI0_15[0], r3, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_19\n\tand\t@CPI0_20[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_3[0], r0, r4\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_34\n.BB0_15:\n\tsub.s!\t@CPI0_9[0], r3, r4\n\tjump.eq\t@.BB0_42\n\tsub.s!\t@CPI0_10[0], r3, r3\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr3\n\tsub.s!\t68, r2, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_18[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r3, r4\n\tsub!\tr4, r2, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r3, r4\n\tptr.add\tr1, r4, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_18[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r4, r3\n\tadd\t36, r3, r3\n\tsub!\tr3, r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_18[0], r1, r3\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tnear_call\tr0, @abi_decode_bytes_calldata, @DEFAULT_UNWIND\n\tnear_call\tr0, @fun_requireNotPaused, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_19[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_17:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r3\n\tcontext.caller\tr2\n\tsub!\tr3, r2, r3\n\tjump.ne\t@.BB0_19\n\tand!\t@CPI0_26[0], r1, r3\n\tjump.ne\t@.BB0_23\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t20, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_35:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_2[0], r2, r3\n\tcontext.caller\tr1\n\tsub!\tr3, r1, r3\n\tjump.ne\t@.BB0_19\n\tand!\t@CPI0_26[0], r2, r3\n\tjump.ne\t@.BB0_38\n\tand\t@CPI0_5[0], r2, r2\n\tor\t@CPI0_29[0], r2, r2\n\tsstore\tr0, r2\n\tst.1\t128, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_31[0], r0, r4\n\tjump\t@.BB0_24\n.BB0_28:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t6, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_25[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_42:\n\tcontext.get_context_u128\tr3\n\tsub.s!\t36, r2, r2\n\tjump.lt\t@.BB0_2\n\tsub!\tr3, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r6\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_19\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_48\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_24[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_19:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_23:\n\tand\t@CPI0_5[0], r1, r1\n\tsstore\tr0, r1\n\tst.1\t128, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_30[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_33[0], r0, r4\n.BB0_24:\n\tjump\t@.BB0_34\n.BB0_38:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t16, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_27[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_28[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tand\t@CPI0_20[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_1[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_3[0], r0, r4\n.BB0_34:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_decode_bytes_calldata:\n.func_begin1:\n\tadd\t31, r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr3, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r3, r3\n\tsub!\tr3, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI1_0[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI1_1[0], r3, r4\n\tjump.gt\t@.BB1_1\n\tadd\tr1, r3, r1\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_requireNotPaused:\n.func_begin2:\n\tsload\tr0, r1\n\tand!\t@CPI2_0[0], r1, r1\n\tjump.ne\t@.BB2_1\n\tret\n.BB2_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI2_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t16, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI2_3[0], r0, r2\n\tsub.s!\t@CPI2_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI2_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_3:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_4:\n\t.cell -374144419156711147060143317175368453031918731001856\nCPI0_5:\n\t.cell -372682917519380244141939632342652170012262798458881\nCPI0_6:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_7:\n\t.cell 2220280664\nCPI0_8:\n\t.cell 4076725130\nCPI0_9:\n\t.cell 4076725131\nCPI0_10:\n\t.cell 4159191790\nCPI0_11:\n\t.cell 2220280665\nCPI0_12:\n\t.cell 2376452955\nCPI0_13:\n\t.cell 1684399774\nCPI0_14:\n\t.cell 1684399775\nCPI0_15:\n\t.cell 1901074598\nCPI0_16:\n\t.cell 1061922874\nCPI0_17:\n\t.cell 1553423035\nCPI0_18:\nCPI1_1:\n\t.cell 18446744073709551615\nCPI0_19:\n\t.cell 2535301200456458802993406410752\nCPI0_20:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_21:\nCPI2_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_22:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_23:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_24:\n\t.cell 10458117454244075803782624051200\nCPI0_25:\n\t.cell 2535301202817642044428229017600\nCPI0_26:\nCPI2_0:\n\t.cell 372682917519380244141939632342652170012262798458880\nCPI0_27:\nCPI2_1:\n\t.cell 36357222666917036906347953728281423178299644588805297587650243726591593021440\nCPI0_28:\n\t.cell 7922816253787617000789217640448\nCPI0_29:\n\t.cell 1461501637330902918203684832716283019655932542976\nCPI0_30:\n\t.cell 904625697166532776746648320380374280103671757735618109375904419490050342912\nCPI0_31:\n\t.cell 44735773386423822371878160022978782686546674658776136549874639796174445716056\nCPI0_32:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_33:\n\t.cell 42393604518183400894871284368897910331008433330724914529002052670013337269162\nCPI0_34:\n\t.cell 36357222666917036906347953000446048792258106436816920891471815860108073631744\nCPI1_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI2_4:\n\t.cell 7922816251426433759354395033600\n",
          "bytecode": {
            "object": "00010000000000020002000000000002000000000302001900000000000103550000008002000039000000400020043f0000000002010019000000600220027000000053022001970000000103300190000000210000c13d000000040320008c000001110000413d000000000301043b000000e0033002700000005a0430009c000000400000213d000000600130009c0000004e0000213d000000630130009c000000900000613d000000640130009c000001110000c13d0000000001000416000000000101004b000001110000c13d000000000100041a0000006d011001980000000001000019000000010100c039000000800010043f0000006c01000041000001480001042e0000000001000416000000000101004b000001110000c13d000000000400041a00000053010000410000000002000414000000530320009c0000000002018019000000c00120021000000054011001c7000200000004001d00000055054001970000800d02000039000000030300003900000000060004110000005604000041000100000006001d014701420000040f0000000101200190000001110000613d0000000201000029000000570110019700000001020000290000005802200197000000000112019f000000000010041b0000002001000039000001000010044300000120000004430000005901000041000001480001042e0000005b0430009c000000670000213d0000005e0130009c000000a40000613d0000005f0130009c000001110000c13d0000000001000416000000000101004b000001110000c13d000000000100041a0000005501100197000000800010043f0000006c01000041000001480001042e000000610130009c000000bc0000613d000000620130009c000001110000c13d0000000001000416000000000101004b000001110000c13d000000000100041a00000055021001970000000005000411000000000252004b000000e00000c13d0000006701100197000000000010041b00000053010000410000000002000414000000530320009c0000000002018019000000c00120021000000054011001c70000800d020000390000000303000039000000560400004100000000060000190000010c0000013d0000005c0430009c000000c30000613d0000005d0330009c000001110000c13d0000000003000416000000440420008c000001110000413d000000000303004b000001110000c13d0000000403100370000000000303043b000000650430009c000001110000213d0000002304300039000000000424004b000001110000813d0000000404300039000000000441034f000000000404043b000000650540009c000001110000213d00000000034300190000002403300039000000000323004b000001110000213d0000002401100370000000000101043b000000650310009c000001110000213d0000000401100039014701130000040f0147012c0000040f0000000101000039000000400200043d00000000001204350000005301000041000000530320009c0000000002018019000000400120021000000066011001c7000001480001042e0000000001000416000000000101004b000001110000c13d000000000100041a00000055031001970000000002000411000000000323004b000000e00000c13d0000006d03100198000000e90000c13d0000006801000041000000800010043f0000002001000039000000840010043f0000001401000039000000a40010043f0000007501000041000000c40010043f0000006f0100004100000149000104300000000001000416000000000101004b000001110000c13d000000000200041a00000055032001970000000001000411000000000313004b000000e00000c13d0000006d03200198000000f60000c13d000000580220019700000070022001c7000000000020041b000000800010043f00000053010000410000000002000414000000530320009c0000000002018019000000c00120021000000071011001c70000800d0200003900000001030000390000007204000041000000f50000013d0000000001000416000000000101004b000001110000c13d0000000601000039000000800010043f0000006c01000041000001480001042e0000000003000416000000240220008c000001110000413d000000000203004b000001110000c13d0000000401100370000000000101043b0000005506100197000000550110009c000001110000213d000000000100041a00000055021001970000000005000411000000000252004b000000e00000c13d000000000206004b000001000000c13d0000006801000041000000800010043f0000002001000039000000840010043f0000002601000039000000a40010043f0000006901000041000000c40010043f0000006a01000041000000e40010043f0000006b0100004100000149000104300000006801000041000000800010043f0000002001000039000000840010043f000000a40010043f0000007301000041000000c40010043f0000006f0100004100000149000104300000005801100197000000000010041b000000800020043f00000053010000410000000002000414000000530320009c0000000002018019000000c00120021000000071011001c70000800d02000039000000010300003900000074040000410000010c0000013d0000006801000041000000800010043f0000002001000039000000840010043f0000001001000039000000a40010043f0000006e01000041000000c40010043f0000006f0100004100000149000104300000006701100197000000000161019f000000000010041b00000053010000410000000002000414000000530320009c0000000002018019000000c00120021000000054011001c70000800d0200003900000003030000390000005604000041014701420000040f0000000101200190000001110000613d0000000001000019000001480001042e000000000100001900000149000104300000001f031000390000007604000041000000000523004b0000000005000019000000000504401900000076062001970000007603300197000000000763004b000000000400a019000000000363013f000000760330009c000000000405c019000000000304004b0000012a0000613d0000000003100367000000000303043b000000650430009c0000012a0000213d00000000013100190000002001100039000000000121004b0000012a0000213d000000000001042d00000000010000190000014900010430000000000100041a0000006d01100198000001300000c13d000000000001042d000000400100043d00000044021000390000006e030000410000000000320435000000240210003900000010030000390000000000320435000000680200004100000000002104350000000402100039000000200300003900000000003204350000005302000041000000530310009c0000000001028019000000400110021000000077011001c7000001490001043000000145002104210000000102000039000000000001042d0000000002000019000000000001042d0000014700000432000001480001042e00000149000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0200000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ffffffffffffffffffffff000000000000000000000000000000000000000000ffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff0000000200000000000000000000000000000040000001000000000000000000000000000000000000000000000000000000000000000000000000008456cb5800000000000000000000000000000000000000000000000000000000f2fde38a00000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000f7e83aee000000000000000000000000000000000000000000000000000000008456cb59000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000006465e69e000000000000000000000000000000000000000000000000000000006465e69f00000000000000000000000000000000000000000000000000000000715018a6000000000000000000000000000000000000000000000000000000003f4ba83a000000000000000000000000000000000000000000000000000000005c975abb000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000020000000000000000000000000ffffffffffffffffffffffff000000000000000000000000000000000000000008c379a0000000000000000000000000000000000000000000000000000000004f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008400000080000000000000000000000000000000000000000000000000000000200000008000000000000000000000000000000000000000ff00000000000000000000000000000000000000005061757361626c653a207061757365640000000000000000000000000000000000000000000000000000000000000000000000640000008000000000000000000000000000000000000000010000000000000000000000000000000000000000020000000000000000000000000000000000002000000080000000000000000062e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2584f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa5061757361626c653a206e6f742070617573656400000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000f50da5dce9d7c15c5ef79a1a47e103de7864b8ae0f01f56dcc671c9893bdefc3"
          },
          "methodIdentifiers": {
            "moduleType()": "6465e69f",
            "owner()": "8da5cb5b",
            "pause()": "8456cb59",
            "paused()": "5c975abb",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b",
            "unpause()": "3f4ba83a",
            "verify(bytes,bytes)": "f7e83aee"
          }
        },
        "irOptimized": "/// @use-src 0:\"contracts/interfaces/IInterchainSecurityModule.sol\", 1:\"contracts/isms/PausableIsm.sol\", 2:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 3:\"node_modules/@openzeppelin/contracts/security/Pausable.sol\", 4:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\nobject \"PausableIsm_90\" {\n    code {\n        {\n            /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := sload(/** @src 2:2518:2524  \"_owner\" */ 0x00)\n            /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 2:2518:2524  \"_owner\" */ 0x00, 0x00, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 4:734:744  \"msg.sender\" */ caller())\n            /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n            sstore(/** @src 2:2518:2524  \"_owner\" */ 0x00, /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ or(and(_2, not(sub(shl(168, 1), 1))), and(/** @src 4:734:744  \"msg.sender\" */ caller(), /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ not(shl(160, 255)))))\n            let _3 := datasize(\"PausableIsm_90_deployed\")\n            codecopy(_1, dataoffset(\"PausableIsm_90_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 1:\"contracts/isms/PausableIsm.sol\", 2:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 3:\"node_modules/@openzeppelin/contracts/security/Pausable.sol\", 4:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\n    object \"PausableIsm_90_deployed\" {\n        code {\n            {\n                /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        let _4 := sload(_3)\n                        if iszero(and(shr(160, _4), 0xff))\n                        {\n                            let memPtr := mload(_1)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _2), 32)\n                            mstore(add(memPtr, 36), 20)\n                            mstore(add(memPtr, 68), \"Pausable: not paused\")\n                            revert(memPtr, 100)\n                        }\n                        sstore(_3, and(_4, not(shl(160, 255))))\n                        /// @src 3:2521:2543  \"Unpaused(_msgSender())\"\n                        let _5 := /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ mload(_1)\n                        mstore(_5, /** @src 4:734:744  \"msg.sender\" */ caller())\n                        /// @src 3:2521:2543  \"Unpaused(_msgSender())\"\n                        log1(_5, /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ 32, /** @src 3:2521:2543  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value := and(shr(160, sload(_3)), 0xff)\n                        let memPos := mload(_1)\n                        mstore(memPos, iszero(iszero(value)))\n                        return(memPos, 32)\n                    }\n                    case 0x6465e69f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, /** @src 1:518:528  \"Types.NULL\" */ 6)\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        let _6 := sload(_3)\n                        sstore(_3, and(_6, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ _3, _3, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ and(_6, sub(shl(160, 1), 1)), _3)\n                        return(_3, _3)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:1204:1276  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        sstore(_3, or(and(sload(_3), not(shl(160, 255))), shl(160, 1)))\n                        /// @src 3:2274:2294  \"Paused(_msgSender())\"\n                        let _7 := /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ mload(_1)\n                        mstore(_7, /** @src 4:734:744  \"msg.sender\" */ caller())\n                        /// @src 3:2274:2294  \"Paused(_msgSender())\"\n                        log1(_7, /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ 32, /** @src 3:2274:2294  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_1 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, value_1)\n                        return(memPos_2, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_2 := calldataload(_2)\n                        let _8 := sub(shl(160, 1), 1)\n                        let _9 := and(value_2, _8)\n                        if iszero(eq(value_2, _9)) { revert(_3, _3) }\n                        /// @src 2:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        if /** @src 2:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ _9)\n                        {\n                            let memPtr_1 := mload(_1)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), 32)\n                            mstore(add(memPtr_1, 36), 38)\n                            mstore(add(memPtr_1, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_1, 100), \"ddress\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _10 := sload(_3)\n                        sstore(_3, or(and(_10, shl(160, 0xffffffffffffffffffffffff)), _9))\n                        /// @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ _3, _3, /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ and(_10, _8), /** @src 2:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _9)\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xf7e83aee {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _11 := 0xffffffffffffffff\n                        if gt(offset, _11) { revert(_3, _3) }\n                        let value0, value1 := abi_decode_bytes_calldata(add(_2, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _11) { revert(_3, _3) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(_2, offset_1), calldatasize())\n                        /// @src 3:1204:1276  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, /** @src 1:786:790  \"true\" */ 0x01)\n                        /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            /// @ast-id 145 @src 2:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                let value := and(sload(/** @src 2:1273:1279  \"_owner\" */ 0x00), /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 2:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ value, /** @src 4:734:744  \"msg.sender\" */ caller()))\n                /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @ast-id 267 @src 3:1767:1873  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\"\n                if iszero(/** @src 3:1836:1845  \"!paused()\" */ iszero(/** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ and(shr(160, sload(/** @src 3:1685:1692  \"_paused\" */ 0x00)), /** @src 1:393:937  \"contract PausableIsm is IInterchainSecurityModule, Ownable, Pausable {...\" */ 0xff)))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 16)\n                    mstore(add(memPtr, 68), \"Pausable: paused\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122090f981cacd60813b9622fce32fe41871539d1ccf65ccadb26b214d5aedbc134764736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000795b09e7f80c6fe9e9c8b78587fa5e2a41e5e135b92194cb7e65683d8a",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "Ownable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
      "Pausable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Paused",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": false,
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "Unpaused",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "paused",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "paused()": "5c975abb"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "Context": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "contracts/interfaces/IInterchainSecurityModule.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            27
          ],
          "ISpecifiesInterchainSecurityModule": [
            34
          ]
        },
        "id": 35,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IInterchainSecurityModule",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 27,
            "linearizedBaseContracts": [
              27
            ],
            "name": "IInterchainSecurityModule",
            "nameLocation": "83:25:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "IInterchainSecurityModule.Types",
                "id": 10,
                "members": [
                  {
                    "id": 2,
                    "name": "UNUSED",
                    "nameLocation": "136:6:0",
                    "nodeType": "EnumValue",
                    "src": "136:6:0"
                  },
                  {
                    "id": 3,
                    "name": "ROUTING",
                    "nameLocation": "152:7:0",
                    "nodeType": "EnumValue",
                    "src": "152:7:0"
                  },
                  {
                    "id": 4,
                    "name": "AGGREGATION",
                    "nameLocation": "169:11:0",
                    "nodeType": "EnumValue",
                    "src": "169:11:0"
                  },
                  {
                    "id": 5,
                    "name": "LEGACY_MULTISIG",
                    "nameLocation": "190:15:0",
                    "nodeType": "EnumValue",
                    "src": "190:15:0"
                  },
                  {
                    "id": 6,
                    "name": "MERKLE_ROOT_MULTISIG",
                    "nameLocation": "215:20:0",
                    "nodeType": "EnumValue",
                    "src": "215:20:0"
                  },
                  {
                    "id": 7,
                    "name": "MESSAGE_ID_MULTISIG",
                    "nameLocation": "245:19:0",
                    "nodeType": "EnumValue",
                    "src": "245:19:0"
                  },
                  {
                    "id": 8,
                    "name": "NULL",
                    "nameLocation": "274:4:0",
                    "nodeType": "EnumValue",
                    "src": "274:4:0"
                  },
                  {
                    "id": 9,
                    "name": "CCIP_READ",
                    "nameLocation": "330:9:0",
                    "nodeType": "EnumValue",
                    "src": "330:9:0"
                  }
                ],
                "name": "Types",
                "nameLocation": "120:5:0",
                "nodeType": "EnumDefinition",
                "src": "115:230:0"
              },
              {
                "documentation": {
                  "id": 11,
                  "nodeType": "StructuredDocumentation",
                  "src": "351:174:0",
                  "text": " @notice Returns an enum that represents the type of security model\n encoded by this ISM.\n @dev Relayers infer how to fetch and format metadata."
                },
                "functionSelector": "6465e69f",
                "id": 16,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "moduleType",
                "nameLocation": "539:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 12,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "549:2:0"
                },
                "returnParameters": {
                  "id": 15,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 14,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 16,
                      "src": "575:5:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "575:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "574:7:0"
                },
                "scope": 27,
                "src": "530:52:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 17,
                  "nodeType": "StructuredDocumentation",
                  "src": "588:398:0",
                  "text": " @notice Defines a security model responsible for verifying interchain\n messages based on the provided metadata.\n @param _metadata Off-chain metadata provided by a relayer, specific to\n the security model encoded by the module (e.g. validator signatures)\n @param _message Hyperlane encoded interchain message\n @return True if the message was verified"
                },
                "functionSelector": "f7e83aee",
                "id": 26,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "verify",
                "nameLocation": "1000:6:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 22,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 19,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "1031:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "1016:24:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1016:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "1065:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "1050:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1050:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1006:73:0"
                },
                "returnParameters": {
                  "id": 25,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 24,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "1098:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1098:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1097:6:0"
                },
                "scope": 27,
                "src": "991:113:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 35,
            "src": "73:1033:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "ISpecifiesInterchainSecurityModule",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 34,
            "linearizedBaseContracts": [
              34
            ],
            "name": "ISpecifiesInterchainSecurityModule",
            "nameLocation": "1118:34:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "de523cf3",
                "id": 33,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "interchainSecurityModule",
                "nameLocation": "1168:24:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 28,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1192:2:0"
                },
                "returnParameters": {
                  "id": 32,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 33,
                      "src": "1242:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                        "typeString": "contract IInterchainSecurityModule"
                      },
                      "typeName": {
                        "id": 30,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29,
                          "name": "IInterchainSecurityModule",
                          "nameLocations": [
                            "1242:25:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "1242:25:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "1242:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1241:27:0"
                },
                "scope": 34,
                "src": "1159:110:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 35,
            "src": "1108:163:0",
            "usedErrors": []
          }
        ],
        "src": "46:1226:0"
      }
    },
    "contracts/isms/PausableIsm.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "contracts/isms/PausableIsm.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            27
          ],
          "Ownable": [
            203
          ],
          "Pausable": [
            311
          ],
          "PausableIsm": [
            90
          ]
        },
        "id": 91,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 36,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:1"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/security/Pausable.sol",
            "file": "@openzeppelin/contracts/security/Pausable.sol",
            "id": 38,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 91,
            "sourceUnit": 312,
            "src": "118:71:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 37,
                  "name": "Pausable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 311,
                  "src": "126:8:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
            "file": "@openzeppelin/contracts/access/Ownable.sol",
            "id": 40,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 91,
            "sourceUnit": 204,
            "src": "190:67:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 39,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 203,
                  "src": "198:7:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
            "file": "../interfaces/IInterchainSecurityModule.sol",
            "id": 42,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 91,
            "sourceUnit": 35,
            "src": "305:86:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 41,
                  "name": "IInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "313:25:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 43,
                  "name": "IInterchainSecurityModule",
                  "nameLocations": [
                    "417:25:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 27,
                  "src": "417:25:1"
                },
                "id": 44,
                "nodeType": "InheritanceSpecifier",
                "src": "417:25:1"
              },
              {
                "baseName": {
                  "id": 45,
                  "name": "Ownable",
                  "nameLocations": [
                    "444:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 203,
                  "src": "444:7:1"
                },
                "id": 46,
                "nodeType": "InheritanceSpecifier",
                "src": "444:7:1"
              },
              {
                "baseName": {
                  "id": 47,
                  "name": "Pausable",
                  "nameLocations": [
                    "453:8:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 311,
                  "src": "453:8:1"
                },
                "id": 48,
                "nodeType": "InheritanceSpecifier",
                "src": "453:8:1"
              }
            ],
            "canonicalName": "PausableIsm",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 90,
            "linearizedBaseContracts": [
              90,
              311,
              203,
              341,
              27
            ],
            "name": "PausableIsm",
            "nameLocation": "402:11:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "baseFunctions": [
                  16
                ],
                "constant": true,
                "functionSelector": "6465e69f",
                "id": 56,
                "mutability": "constant",
                "name": "moduleType",
                "nameLocation": "499:10:1",
                "nodeType": "VariableDeclaration",
                "overrides": {
                  "id": 50,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "490:8:1"
                },
                "scope": 90,
                "src": "468:61:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 49,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "468:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "value": {
                  "arguments": [
                    {
                      "expression": {
                        "id": 53,
                        "name": "Types",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "518:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Types_$10_$",
                          "typeString": "type(enum IInterchainSecurityModule.Types)"
                        }
                      },
                      "id": 54,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "524:4:1",
                      "memberName": "NULL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8,
                      "src": "518:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Types_$10",
                        "typeString": "enum IInterchainSecurityModule.Types"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_enum$_Types_$10",
                        "typeString": "enum IInterchainSecurityModule.Types"
                      }
                    ],
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "512:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint8_$",
                      "typeString": "type(uint8)"
                    },
                    "typeName": {
                      "id": 51,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "512:5:1",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 55,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "512:17:1",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  26
                ],
                "body": {
                  "id": 70,
                  "nodeType": "Block",
                  "src": "769:28:1",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "786:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 67,
                      "id": 69,
                      "nodeType": "Return",
                      "src": "779:11:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 57,
                  "nodeType": "StructuredDocumentation",
                  "src": "536:115:1",
                  "text": " @inheritdoc IInterchainSecurityModule\n @dev Reverts when paused, otherwise returns `true`."
                },
                "functionSelector": "f7e83aee",
                "id": 71,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 64,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 63,
                      "name": "whenNotPaused",
                      "nameLocations": [
                        "740:13:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 238,
                      "src": "740:13:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "740:13:1"
                  }
                ],
                "name": "verify",
                "nameLocation": "665:6:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 62,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "681:14:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "681:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "705:14:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 60,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "705:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "671:54:1"
                },
                "returnParameters": {
                  "id": 67,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 66,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "763:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "763:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "762:6:1"
                },
                "scope": 90,
                "src": "656:141:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 79,
                  "nodeType": "Block",
                  "src": "839:25:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 76,
                          "name": "_pause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 294,
                          "src": "849:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "849:8:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 78,
                      "nodeType": "ExpressionStatement",
                      "src": "849:8:1"
                    }
                  ]
                },
                "functionSelector": "8456cb59",
                "id": 80,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 74,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 73,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "829:9:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 122,
                      "src": "829:9:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "829:9:1"
                  }
                ],
                "name": "pause",
                "nameLocation": "812:5:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 72,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "817:2:1"
                },
                "returnParameters": {
                  "id": 75,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "839:0:1"
                },
                "scope": 90,
                "src": "803:61:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 88,
                  "nodeType": "Block",
                  "src": "908:27:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85,
                          "name": "_unpause",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "918:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "918:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 87,
                      "nodeType": "ExpressionStatement",
                      "src": "918:10:1"
                    }
                  ]
                },
                "functionSelector": "3f4ba83a",
                "id": 89,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 83,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 82,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "898:9:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 122,
                      "src": "898:9:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "898:9:1"
                  }
                ],
                "name": "unpause",
                "nameLocation": "879:7:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 81,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "886:2:1"
                },
                "returnParameters": {
                  "id": 84,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "908:0:1"
                },
                "scope": 90,
                "src": "870:65:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 91,
            "src": "393:544:1",
            "usedErrors": []
          }
        ],
        "src": "46:892:1"
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "exportedSymbols": {
          "Context": [
            341
          ],
          "Ownable": [
            203
          ]
        },
        "id": 204,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 92,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "102:23:2"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 93,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 204,
            "sourceUnit": 342,
            "src": "127:30:2",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 95,
                  "name": "Context",
                  "nameLocations": [
                    "683:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 341,
                  "src": "683:7:2"
                },
                "id": 96,
                "nodeType": "InheritanceSpecifier",
                "src": "683:7:2"
              }
            ],
            "canonicalName": "Ownable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 94,
              "nodeType": "StructuredDocumentation",
              "src": "159:494:2",
              "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
            },
            "fullyImplemented": true,
            "id": 203,
            "linearizedBaseContracts": [
              203,
              341
            ],
            "name": "Ownable",
            "nameLocation": "672:7:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 98,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "713:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 203,
                "src": "697:22:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 97,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "697:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 104,
                "name": "OwnershipTransferred",
                "nameLocation": "732:20:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 103,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 100,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "769:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "753:29:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 99,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 102,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "800:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 104,
                      "src": "784:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "784:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "752:57:2"
                },
                "src": "726:84:2"
              },
              {
                "body": {
                  "id": 113,
                  "nodeType": "Block",
                  "src": "926:49:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 109,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "955:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "955:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 108,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "936:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "936:32:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 112,
                      "nodeType": "ExpressionStatement",
                      "src": "936:32:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 105,
                  "nodeType": "StructuredDocumentation",
                  "src": "816:91:2",
                  "text": " @dev Initializes the contract setting the deployer as the initial owner."
                },
                "id": 114,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 106,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "923:2:2"
                },
                "returnParameters": {
                  "id": 107,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "926:0:2"
                },
                "scope": 203,
                "src": "912:63:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 121,
                  "nodeType": "Block",
                  "src": "1084:41:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 117,
                          "name": "_checkOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145,
                          "src": "1094:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1094:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 119,
                      "nodeType": "ExpressionStatement",
                      "src": "1094:13:2"
                    },
                    {
                      "id": 120,
                      "nodeType": "PlaceholderStatement",
                      "src": "1117:1:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 115,
                  "nodeType": "StructuredDocumentation",
                  "src": "981:77:2",
                  "text": " @dev Throws if called by any account other than the owner."
                },
                "id": 122,
                "name": "onlyOwner",
                "nameLocation": "1072:9:2",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 116,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1081:2:2"
                },
                "src": "1063:62:2",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 130,
                  "nodeType": "Block",
                  "src": "1256:30:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 128,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1273:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 127,
                      "id": 129,
                      "nodeType": "Return",
                      "src": "1266:13:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 123,
                  "nodeType": "StructuredDocumentation",
                  "src": "1131:65:2",
                  "text": " @dev Returns the address of the current owner."
                },
                "functionSelector": "8da5cb5b",
                "id": 131,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1210:5:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 124,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1215:2:2"
                },
                "returnParameters": {
                  "id": 127,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "1247:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1246:9:2"
                },
                "scope": 203,
                "src": "1201:85:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 144,
                  "nodeType": "Block",
                  "src": "1404:85:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 136,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "1422:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1422:7:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 138,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 323,
                                "src": "1433:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1433:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1422:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1447:34:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 135,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1414:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1414:68:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 143,
                      "nodeType": "ExpressionStatement",
                      "src": "1414:68:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 132,
                  "nodeType": "StructuredDocumentation",
                  "src": "1292:62:2",
                  "text": " @dev Throws if the sender is not the owner."
                },
                "id": 145,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_checkOwner",
                "nameLocation": "1368:11:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 133,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1379:2:2"
                },
                "returnParameters": {
                  "id": 134,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1404:0:2"
                },
                "scope": 203,
                "src": "1359:130:2",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 158,
                  "nodeType": "Block",
                  "src": "1878:47:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1915:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1907:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 152,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1907:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1907:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 151,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "1888:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:30:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 157,
                      "nodeType": "ExpressionStatement",
                      "src": "1888:30:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 146,
                  "nodeType": "StructuredDocumentation",
                  "src": "1495:324:2",
                  "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                },
                "functionSelector": "715018a6",
                "id": 159,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 149,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 148,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1868:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 122,
                      "src": "1868:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1868:9:2"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "1833:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 147,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1850:2:2"
                },
                "returnParameters": {
                  "id": 150,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1878:0:2"
                },
                "scope": 203,
                "src": "1824:101:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 181,
                  "nodeType": "Block",
                  "src": "2144:128:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 168,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 162,
                              "src": "2162:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2182:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2174:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 169,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2174:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2174:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2162:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:40:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            },
                            "value": "Ownable: new owner is the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            }
                          ],
                          "id": 167,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2154:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2154:73:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 176,
                      "nodeType": "ExpressionStatement",
                      "src": "2154:73:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 178,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 162,
                            "src": "2256:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "2237:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2237:28:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 180,
                      "nodeType": "ExpressionStatement",
                      "src": "2237:28:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 160,
                  "nodeType": "StructuredDocumentation",
                  "src": "1931:138:2",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                },
                "functionSelector": "f2fde38b",
                "id": 182,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 165,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 164,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2134:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 122,
                      "src": "2134:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2134:9:2"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "2083:17:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 163,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2109:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2101:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2101:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2100:18:2"
                },
                "returnParameters": {
                  "id": 166,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2144:0:2"
                },
                "scope": 203,
                "src": "2074:198:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 201,
                  "nodeType": "Block",
                  "src": "2489:124:2",
                  "statements": [
                    {
                      "assignments": [
                        189
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 189,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "2507:8:2",
                          "nodeType": "VariableDeclaration",
                          "scope": 201,
                          "src": "2499:16:2",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2499:7:2",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 191,
                      "initialValue": {
                        "id": 190,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2518:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2499:25:2"
                    },
                    {
                      "expression": {
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 192,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2534:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 193,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2543:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2534:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 195,
                      "nodeType": "ExpressionStatement",
                      "src": "2534:17:2"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 197,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "2587:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 198,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "2597:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 196,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "2566:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2566:40:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 200,
                      "nodeType": "EmitStatement",
                      "src": "2561:45:2"
                    }
                  ]
                },
                "documentation": {
                  "id": 183,
                  "nodeType": "StructuredDocumentation",
                  "src": "2278:143:2",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                },
                "id": 202,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "2435:18:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 186,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 185,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2462:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 202,
                      "src": "2454:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 184,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2454:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2453:18:2"
                },
                "returnParameters": {
                  "id": 187,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2489:0:2"
                },
                "scope": 203,
                "src": "2426:187:2",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 204,
            "src": "654:1961:2",
            "usedErrors": []
          }
        ],
        "src": "102:2514:2"
      }
    },
    "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/security/Pausable.sol",
        "exportedSymbols": {
          "Context": [
            341
          ],
          "Pausable": [
            311
          ]
        },
        "id": 312,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 205,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "105:23:3"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 206,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 312,
            "sourceUnit": 342,
            "src": "130:30:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 208,
                  "name": "Context",
                  "nameLocations": [
                    "632:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 341,
                  "src": "632:7:3"
                },
                "id": 209,
                "nodeType": "InheritanceSpecifier",
                "src": "632:7:3"
              }
            ],
            "canonicalName": "Pausable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 207,
              "nodeType": "StructuredDocumentation",
              "src": "162:439:3",
              "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
            },
            "fullyImplemented": true,
            "id": 311,
            "linearizedBaseContracts": [
              311,
              341
            ],
            "name": "Pausable",
            "nameLocation": "620:8:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": {
                  "id": 210,
                  "nodeType": "StructuredDocumentation",
                  "src": "646:73:3",
                  "text": " @dev Emitted when the pause is triggered by `account`."
                },
                "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                "id": 214,
                "name": "Paused",
                "nameLocation": "730:6:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 213,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 212,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "745:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 214,
                      "src": "737:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "737:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "736:17:3"
                },
                "src": "724:30:3"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 215,
                  "nodeType": "StructuredDocumentation",
                  "src": "760:70:3",
                  "text": " @dev Emitted when the pause is lifted by `account`."
                },
                "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                "id": 219,
                "name": "Unpaused",
                "nameLocation": "841:8:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 218,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 217,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "858:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 219,
                      "src": "850:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "849:17:3"
                },
                "src": "835:32:3"
              },
              {
                "constant": false,
                "id": 221,
                "mutability": "mutable",
                "name": "_paused",
                "nameLocation": "886:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 311,
                "src": "873:20:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 220,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "873:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 229,
                  "nodeType": "Block",
                  "src": "986:32:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 225,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "996:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1006:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "996:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 228,
                      "nodeType": "ExpressionStatement",
                      "src": "996:15:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 222,
                  "nodeType": "StructuredDocumentation",
                  "src": "900:67:3",
                  "text": " @dev Initializes the contract in unpaused state."
                },
                "id": 230,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 223,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "983:2:3"
                },
                "returnParameters": {
                  "id": 224,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "986:0:3"
                },
                "scope": 311,
                "src": "972:46:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 237,
                  "nodeType": "Block",
                  "src": "1229:47:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 233,
                          "name": "_requireNotPaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "1239:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1239:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 235,
                      "nodeType": "ExpressionStatement",
                      "src": "1239:19:3"
                    },
                    {
                      "id": 236,
                      "nodeType": "PlaceholderStatement",
                      "src": "1268:1:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 231,
                  "nodeType": "StructuredDocumentation",
                  "src": "1024:175:3",
                  "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                },
                "id": 238,
                "name": "whenNotPaused",
                "nameLocation": "1213:13:3",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 232,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1226:2:3"
                },
                "src": "1204:72:3",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 245,
                  "nodeType": "Block",
                  "src": "1476:44:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 241,
                          "name": "_requirePaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 278,
                          "src": "1486:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1486:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 243,
                      "nodeType": "ExpressionStatement",
                      "src": "1486:16:3"
                    },
                    {
                      "id": 244,
                      "nodeType": "PlaceholderStatement",
                      "src": "1512:1:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 239,
                  "nodeType": "StructuredDocumentation",
                  "src": "1282:167:3",
                  "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                },
                "id": 246,
                "name": "whenPaused",
                "nameLocation": "1463:10:3",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 240,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1473:2:3"
                },
                "src": "1454:66:3",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 254,
                  "nodeType": "Block",
                  "src": "1668:31:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 252,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "1685:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "functionReturnParameters": 251,
                      "id": 253,
                      "nodeType": "Return",
                      "src": "1678:14:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 247,
                  "nodeType": "StructuredDocumentation",
                  "src": "1526:84:3",
                  "text": " @dev Returns true if the contract is paused, and false otherwise."
                },
                "functionSelector": "5c975abb",
                "id": 255,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "paused",
                "nameLocation": "1624:6:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 248,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1630:2:3"
                },
                "returnParameters": {
                  "id": 251,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 250,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "1662:4:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 249,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1662:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1661:6:3"
                },
                "scope": 311,
                "src": "1615:84:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 266,
                  "nodeType": "Block",
                  "src": "1818:55:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "1836:9:3",
                            "subExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 260,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 255,
                                "src": "1837:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1837:8:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1847:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                              "typeString": "literal_string \"Pausable: paused\""
                            },
                            "value": "Pausable: paused"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                              "typeString": "literal_string \"Pausable: paused\""
                            }
                          ],
                          "id": 259,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1828:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1828:38:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 265,
                      "nodeType": "ExpressionStatement",
                      "src": "1828:38:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 256,
                  "nodeType": "StructuredDocumentation",
                  "src": "1705:57:3",
                  "text": " @dev Throws if the contract is paused."
                },
                "id": 267,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_requireNotPaused",
                "nameLocation": "1776:17:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 257,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1793:2:3"
                },
                "returnParameters": {
                  "id": 258,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1818:0:3"
                },
                "scope": 311,
                "src": "1767:106:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 277,
                  "nodeType": "Block",
                  "src": "1993:58:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 272,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "2011:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2011:8:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5061757361626c653a206e6f7420706175736564",
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2021:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                              "typeString": "literal_string \"Pausable: not paused\""
                            },
                            "value": "Pausable: not paused"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                              "typeString": "literal_string \"Pausable: not paused\""
                            }
                          ],
                          "id": 271,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2003:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2003:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 276,
                      "nodeType": "ExpressionStatement",
                      "src": "2003:41:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 268,
                  "nodeType": "StructuredDocumentation",
                  "src": "1879:61:3",
                  "text": " @dev Throws if the contract is not paused."
                },
                "id": 278,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_requirePaused",
                "nameLocation": "1954:14:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 269,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1968:2:3"
                },
                "returnParameters": {
                  "id": 270,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1993:0:3"
                },
                "scope": 311,
                "src": "1945:106:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 293,
                  "nodeType": "Block",
                  "src": "2235:66:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 284,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2245:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2255:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2245:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 287,
                      "nodeType": "ExpressionStatement",
                      "src": "2245:14:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 289,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "2281:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2281:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 288,
                          "name": "Paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "2274:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2274:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 292,
                      "nodeType": "EmitStatement",
                      "src": "2269:25:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 279,
                  "nodeType": "StructuredDocumentation",
                  "src": "2057:124:3",
                  "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                },
                "id": 294,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 282,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 281,
                      "name": "whenNotPaused",
                      "nameLocations": [
                        "2221:13:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 238,
                      "src": "2221:13:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2221:13:3"
                  }
                ],
                "name": "_pause",
                "nameLocation": "2195:6:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 280,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2201:2:3"
                },
                "returnParameters": {
                  "id": 283,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2235:0:3"
                },
                "scope": 311,
                "src": "2186:115:3",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 309,
                  "nodeType": "Block",
                  "src": "2481:69:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 300,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2491:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2501:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2491:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 303,
                      "nodeType": "ExpressionStatement",
                      "src": "2491:15:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 305,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 323,
                              "src": "2530:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2530:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 304,
                          "name": "Unpaused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 219,
                          "src": "2521:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2521:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 308,
                      "nodeType": "EmitStatement",
                      "src": "2516:27:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 295,
                  "nodeType": "StructuredDocumentation",
                  "src": "2307:121:3",
                  "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                },
                "id": 310,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 298,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 297,
                      "name": "whenPaused",
                      "nameLocations": [
                        "2470:10:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 246,
                      "src": "2470:10:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2470:10:3"
                  }
                ],
                "name": "_unpause",
                "nameLocation": "2442:8:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 296,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2450:2:3"
                },
                "returnParameters": {
                  "id": 299,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2481:0:3"
                },
                "scope": 311,
                "src": "2433:117:3",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 312,
            "src": "602:1950:3",
            "usedErrors": []
          }
        ],
        "src": "105:2448:3"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "id": 4,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "exportedSymbols": {
          "Context": [
            341
          ]
        },
        "id": 342,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 313,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:4"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Context",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 314,
              "nodeType": "StructuredDocumentation",
              "src": "126:496:4",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 341,
            "linearizedBaseContracts": [
              341
            ],
            "name": "Context",
            "nameLocation": "641:7:4",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 322,
                  "nodeType": "Block",
                  "src": "717:34:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "734:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "738:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "734:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 318,
                      "id": 321,
                      "nodeType": "Return",
                      "src": "727:17:4"
                    }
                  ]
                },
                "id": 323,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "664:10:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 315,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "674:2:4"
                },
                "returnParameters": {
                  "id": 318,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "708:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "707:9:4"
                },
                "scope": 341,
                "src": "655:96:4",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 331,
                  "nodeType": "Block",
                  "src": "824:32:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "841:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "845:4:4",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "841:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 327,
                      "id": 330,
                      "nodeType": "Return",
                      "src": "834:15:4"
                    }
                  ]
                },
                "id": 332,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "766:8:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 324,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "774:2:4"
                },
                "returnParameters": {
                  "id": 327,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 326,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 332,
                      "src": "808:14:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 325,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "807:16:4"
                },
                "scope": 341,
                "src": "757:99:4",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 339,
                  "nodeType": "Block",
                  "src": "934:25:4",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 336,
                      "id": 338,
                      "nodeType": "Return",
                      "src": "944:8:4"
                    }
                  ]
                },
                "id": 340,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "871:20:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 333,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "891:2:4"
                },
                "returnParameters": {
                  "id": 336,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 335,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "925:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "925:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "924:9:4"
                },
                "scope": 341,
                "src": "862:97:4",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 342,
            "src": "623:338:4",
            "usedErrors": []
          }
        ],
        "src": "101:861:4"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
{
  "contracts": {
    "contracts/interfaces/IInterchainSecurityModule.sol": {
      "IInterchainSecurityModule": {
        "abi": [
          {
            "inputs": [],
            "name": "moduleType",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes",
                "name": "_metadata",
                "type": "bytes"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "verify",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"moduleType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"moduleType()\":{\"details\":\"Relayers infer how to fetch and format metadata.\"},\"verify(bytes,bytes)\":{\"params\":{\"_message\":\"Hyperlane encoded interchain message\",\"_metadata\":\"Off-chain metadata provided by a relayer, specific to the security model encoded by the module (e.g. validator signatures)\"},\"returns\":{\"_0\":\"True if the message was verified\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"moduleType()\":{\"notice\":\"Returns an enum that represents the type of security model encoded by this ISM.\"},\"verify(bytes,bytes)\":{\"notice\":\"Defines a security model responsible for verifying interchain messages based on the provided metadata.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":\"IInterchainSecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "moduleType()": "6465e69f",
            "verify(bytes,bytes)": "f7e83aee"
          }
        },
        "irOptimized": ""
      },
      "ISpecifiesInterchainSecurityModule": {
        "abi": [
          {
            "inputs": [],
            "name": "interchainSecurityModule",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"interchainSecurityModule\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":\"ISpecifiesInterchainSecurityModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "interchainSecurityModule()": "de523cf3"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/interfaces/IMessageRecipient.sol": {
      "IMessageRecipient": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_origin",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_sender",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              }
            ],
            "name": "handle",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMessageRecipient.sol\":\"IMessageRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "handle(uint32,bytes32,bytes)": "56d5d475"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/test/TestRecipient.sol": {
      "TestRecipient": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "caller",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "name": "ReceivedCall",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "origin",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "sender",
                "type": "bytes32"
              },
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "name": "ReceivedMessage",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "name": "fooBar",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_origin",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_sender",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              }
            ],
            "name": "handle",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "interchainSecurityModule",
            "outputs": [
              {
                "internalType": "contract IInterchainSecurityModule",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastCallMessage",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastCaller",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastData",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastSender",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "_ism",
                "type": "address"
              }
            ],
            "name": "setInterchainSecurityModule",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ReceivedCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ReceivedMessage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"fooBar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"handle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interchainSecurityModule\",\"outputs\":[{\"internalType\":\"contract IInterchainSecurityModule\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCaller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSender\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ism\",\"type\":\"address\"}],\"name\":\"setInterchainSecurityModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestRecipient.sol\":\"TestRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"contracts/interfaces/IMessageRecipient.sol\":{\"keccak256\":\"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119\",\"dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6\"]},\"contracts/test/TestRecipient.sol\":{\"keccak256\":\"0x68dcf1b2c3c9e19370e525136e461e2a0af37d11d7466245504b42a3cf07a6ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1d12b44b52f5760f7c21470966996ae9a5aa0744d5c096bc1c870cc84a0fe248\",\"dweb:/ipfs/QmSxKybnyvsYLZnFz5xVNrzFJa1wSQMjQeg1sfNo2nhymD\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TestRecipient.sol:TestRecipient\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_12\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_103\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.le\t@.BB0_15\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.gt\t@.BB0_38\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.eq\t@.BB0_81\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.eq\t@.BB0_53\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_103\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.ne\t@.BB0_80\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_93\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_98\n\tjump\t@.BB0_92\n.BB0_12:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tsload\tr0, r2\n\tand\t@CPI0_1[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_103\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_5[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.le\t@.BB0_47\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.eq\t@.BB0_55\n\tsub.s!\t@CPI0_16[0], r2, r4\n\tjump.eq\t@.BB0_57\n\tsub.s!\t@CPI0_17[0], r2, r2\n\tjump.ne\t@.BB0_103\n\tsub.s!\t100, r3, r2\n\tjump.lt\t@.BB0_103\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_0[0], r2, r5\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_103\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r6\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_103\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_103\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r7\n\tld\tr7, r9\n\tsub.s!\t@CPI0_24[0], r9, r7\n\tjump.gt\t@.BB0_103\n\tadd\t36, r2, r7\n\tadd\tr9, r7, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_103\n\tadd\tr7, r0, stack-[5]\n\tadd\t32, r0, r2\n\tst.1\t128, r2\n\tcontext.get_context_u128\tr7\n\tand\t31, r9, r2\n\tadd\t32, r4, stack-[1]\n\tptr.add.s\tstack-[1], r1, r1\n\tst.1\t160, r9\n\tshr.s!\t5, r9, r3\n\tjump.eq\t@.BB0_28\n\tadd\tr0, r0, r4\n.BB0_27:\n\tshl.s\t5, r4, r10\n\tptr.add\tr1, r10, r8\n\tld\tr8, r8\n\tadd\t192, r10, r10\n\tst.1\tr10, r8\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r8\n\tjump.lt\t@.BB0_27\n.BB0_28:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_30\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t192, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_30:\n\tadd\t192, r9, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\t31, r9, r3\n\tsub.s\t32, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tand\tr3, r1, r1\n\tadd\t@CPI0_32[0], r0, r3\n\tsub.s!\t@CPI0_32[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_33[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t4, r0, r3\n\tadd\t@CPI0_34[0], r0, r4\n\tadd\tr9, r0, stack-[6]\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[6], r0, r6\n\tand!\t1, r2, r1\n\tadd\tstack-[5], r0, r7\n\tjump.eq\t@.BB0_103\n\tadd\t2, r0, r1\n\tsstore\tr1, r3\n\tadd\t3, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_80\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_35\n\tadd\tstack-[2], r0, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_35[0], r3, r4\n\tadd\t@CPI0_35[0], r0, r3\n\tsub.s!\t32, r6, r5\n\tadd.ge\tr4, r0, r3\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_35[0], r2, r2\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_35\n.BB0_34:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_34\n.BB0_35:\n\tsub.s!\t31, r6, r2\n\tjump.le\t@.BB0_107\n\tand!\tstack-[3], r6, r3\n\tjump.ne\t@.BB0_115\n\tadd\t@CPI0_35[0], r0, r2\n\tadd\tr0, r0, r4\n\tjump\t@.BB0_117\n.BB0_38:\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_85\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_10[0], r2, r2\n\tjump.ne\t@.BB0_103\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_103\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_103\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_3[0], r1, r6\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_103\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_89\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_102\n\tadd\t@CPI0_20[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_21[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_47:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_78\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_103\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_103\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_103\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_3[0], r2, r1\n\tjump.gt\t@.BB0_103\n\tadd\tr2, r0, stack-[6]\n\tnear_call\tr0, @fun_checkOwner, @DEFAULT_UNWIND\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\tstack-[6], r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_53:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tsload\tr0, r1\n\tjump\t@.BB0_88\n.BB0_55:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tadd\t4, r0, r1\n\tjump\t@.BB0_87\n.BB0_57:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_59:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r4\n\tjump.lt\t@.BB0_103\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_103\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.gt\t@.BB0_103\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_103\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r7\n\tsub.s!\t@CPI0_24[0], r7, r5\n\tjump.gt\t@.BB0_103\n\tadd\t36, r2, r8\n\tadd\tr7, r8, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_103\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tst.1\t128, r2\n\tadd\t64, r0, r2\n\tst.1\t160, r2\n\tcontext.caller\tr5\n\tand\t31, r7, r2\n\tadd\t32, r4, stack-[1]\n\tptr.add.s\tstack-[1], r1, r1\n\tst.1\t192, r7\n\tshr.s!\t5, r7, r3\n\tjump.eq\t@.BB0_68\n\tadd\tr0, r0, r4\n.BB0_67:\n\tshl.s\t5, r4, r9\n\tptr.add\tr1, r9, r6\n\tld\tr6, r6\n\tadd\t224, r9, r9\n\tst.1\tr9, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_67\n.BB0_68:\n\tadd\tr8, r0, stack-[5]\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_70\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t224, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_70:\n\tadd\t224, r7, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\t31, r7, r3\n\tsub.s\t32, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tand\tr3, r1, r1\n\tadd\t@CPI0_25[0], r0, r3\n\tsub.s!\t@CPI0_25[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_26[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_27[0], r0, r4\n\tadd\tr7, r0, stack-[6]\n\tadd\tr5, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r7\n\tand!\t1, r2, r1\n\tadd\tstack-[5], r0, r8\n\tjump.eq\t@.BB0_103\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\tstack-[4], r2, r2\n\tsstore\tr1, r2\n\tadd\t5, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_80\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_75\n\tadd\tstack-[2], r0, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_28[0], r3, r4\n\tadd\t@CPI0_28[0], r0, r3\n\tsub.s!\t32, r7, r5\n\tadd.ge\tr4, r0, r3\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_28[0], r2, r2\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_75\n.BB0_74:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_74\n.BB0_75:\n\tsub.s!\t31, r7, r2\n\tjump.le\t@.BB0_104\n\tand!\tstack-[3], r7, r3\n\tjump.ne\t@.BB0_110\n\tadd\t@CPI0_28[0], r0, r2\n\tadd\tr0, r0, r4\n\tjump\t@.BB0_112\n.BB0_78:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tadd\t3, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.eq\t@.BB0_90\n.BB0_80:\n\tadd\t@CPI0_36[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_37[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_81:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_89\n\tand\t@CPI0_1[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tadd\tr0, r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_103\n.BB0_84:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_85:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_103\n\tadd\t1, r0, r1\n.BB0_87:\n\tsload\tr1, r1\n.BB0_88:\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_89:\n\tadd\t@CPI0_20[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_31[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_90:\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_94\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_95\n.BB0_92:\n\tadd\t160, r0, r1\n\tjump\t@.BB0_101\n.BB0_93:\n.BB0_94:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_101\n.BB0_95:\n\tadd\t@CPI0_35[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_96:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_96\n\tjump\t@.BB0_100\n.BB0_98:\n\tadd\t@CPI0_28[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_99:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_99\n.BB0_100:\n\tadd\t192, r3, r1\n.BB0_101:\n\tsub.s\t128, r1, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tand\t@CPI0_1[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_84\n.BB0_103:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_104:\n\tsub!\tr7, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_106\n\tadd\tstack-[1], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n.BB0_106:\n\tshl.s\t3, r7, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r7, r2\n\tjump\t@.BB0_120\n.BB0_107:\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_109\n\tadd\tstack-[1], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n.BB0_109:\n\tshl.s\t3, r6, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r6, r2\n\tjump\t@.BB0_120\n.BB0_110:\n\tadd\t@CPI0_28[0], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tr0, r0, r4\n.BB0_111:\n\tadd\tr4, r8, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsstore\tr2, r6\n\tadd\t1, r2, r2\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_111\n.BB0_112:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_114\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r5\n\tshr\tr5, r3, r3\n\txor\tr3, r5, r3\n\tadd\tr4, r8, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tand\tr4, r3, r3\n\tsstore\tr2, r3\n.BB0_114:\n\tadd\t1, r0, r2\n\tshl.s\t1, r7, r3\n\tjump\t@.BB0_120\n.BB0_115:\n\tadd\t@CPI0_35[0], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tr0, r0, r4\n.BB0_116:\n\tadd\tr4, r7, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsstore\tr2, r6\n\tadd\t1, r2, r2\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_116\n.BB0_117:\n\tadd\tstack-[6], r0, r6\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB0_119\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r5\n\tshr\tr5, r3, r3\n\txor\tr3, r5, r3\n\tadd\tr4, r7, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tand\tr4, r3, r3\n\tsstore\tr2, r3\n.BB0_119:\n\tadd\t1, r0, r2\n\tshl.s\t1, r6, r3\n.BB0_120:\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfinalize_allocation:\n.func_begin1:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tjump.gt\t@.BB1_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_2\n\tst.1\t64, r1\n\tret\n.BB1_2:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_bytes:\n.func_begin2:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r2\n.BB2_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\nfun_checkOwner:\n.func_begin3:\n\tsload\tr0, r1\n\tand\t@CPI3_0[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB3_1\n\tret\n.BB3_1:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI3_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI3_2[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r1, r2\n\tst.1\tr2, r3\n\tadd\t@CPI3_3[0], r0, r2\n\tsub.s!\t@CPI3_3[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI3_4[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI3_3:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_2:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_3:\nCPI3_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_5:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_6:\n\t.cell 1901074597\nCPI0_7:\n\t.cell 3729931506\nCPI0_8:\n\t.cell 3729931507\nCPI0_9:\n\t.cell 4034666311\nCPI0_10:\n\t.cell 4076725131\nCPI0_11:\n\t.cell 1901074598\nCPI0_12:\n\t.cell 2376452955\nCPI0_13:\n\t.cell 2761437150\nCPI0_14:\n\t.cell 554914345\nCPI0_15:\n\t.cell 554914346\nCPI0_16:\n\t.cell 628092040\nCPI0_17:\n\t.cell 1456854133\nCPI0_18:\n\t.cell 7239148\nCPI0_19:\n\t.cell 242404358\nCPI0_20:\nCPI3_2:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_21:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_22:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_23:\n\t.cell 10458117454244075803782624051200\nCPI0_24:\nCPI1_0:\n\t.cell 18446744073709551615\nCPI0_25:\n\t.cell 4294967199\nCPI0_26:\n\t.cell 904625697166532776746648320380374280103671762806220510288822025476863164416\nCPI0_27:\n\t.cell -47110834148546111573571167851317335392396609841570001832343179943194446413306\nCPI0_28:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_29:\n\t.cell 2535301202817642044428229017600\nCPI0_30:\nCPI3_1:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_31:\n\t.cell 7922816253787617000789217640448\nCPI0_32:\n\t.cell 4294967231\nCPI0_33:\n\t.cell 904625697166532776746648320380374280103671760270919309832363222483456753664\nCPI0_34:\n\t.cell -8657171177384363397987037563877075683677377703751583224314416900559015043755\nCPI0_35:\n\t.cell -27889059366240281169193357100633332908378892778709981755071813198463099602853\nCPI0_36:\nCPI1_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_37:\nCPI1_2:\n\t.cell 2852213850513516153367582212096\nCPI3_4:\n\t.cell 7922816251426433759354395033600\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "fooBar(uint256,string)": "f07c1f47",
            "handle(uint32,bytes32,bytes)": "56d5d475",
            "interchainSecurityModule()": "de523cf3",
            "lastCallMessage()": "a4982fde",
            "lastCaller()": "2113522a",
            "lastData()": "006e75ec",
            "lastSender()": "256fec88",
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "setInterchainSecurityModule(address)": "0e72cc06",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"contracts/interfaces/IInterchainSecurityModule.sol\", 1:\"contracts/interfaces/IMessageRecipient.sol\", 2:\"contracts/test/TestRecipient.sol\", 3:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 4:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\nobject \"TestRecipient_159\" {\n    code {\n        {\n            /// @src 2:336:1493  \"contract TestRecipient is...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := sload(/** @src 3:2518:2524  \"_owner\" */ 0x00)\n            /// @src 2:336:1493  \"contract TestRecipient is...\"\n            sstore(/** @src 3:2518:2524  \"_owner\" */ 0x00, /** @src 2:336:1493  \"contract TestRecipient is...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 4:734:744  \"msg.sender\" */ caller()))\n            /// @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 3:2518:2524  \"_owner\" */ 0x00, 0x00, /** @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:336:1493  \"contract TestRecipient is...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 4:734:744  \"msg.sender\" */ caller())\n            /// @src 2:336:1493  \"contract TestRecipient is...\"\n            let _3 := datasize(\"TestRecipient_159_deployed\")\n            codecopy(_1, dataoffset(\"TestRecipient_159_deployed\"), _3)\n            return(_1, _3)\n        }\n    }\n    /// @use-src 2:\"contracts/test/TestRecipient.sol\", 3:\"node_modules/@openzeppelin/contracts/access/Ownable.sol\", 4:\"node_modules/@openzeppelin/contracts/utils/Context.sol\"\n    object \"TestRecipient_159_deployed\" {\n        code {\n            {\n                /// @src 2:336:1493  \"contract TestRecipient is...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x006e75ec {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        let slotValue := sload(/** @src 2:537:558  \"bytes public lastData\" */ 3)\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(_1, length)\n                        let _5 := 0x20\n                        let _6 := 1\n                        switch and(slotValue, _6)\n                        case 0 {\n                            mstore(add(_1, _5), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _5)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 2:537:558  \"bytes public lastData\" */ 3)\n                            /// @src 2:336:1493  \"contract TestRecipient is...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _5) }\n                            {\n                                mstore(add(add(_1, i), _5), sload(dataPos))\n                                dataPos := add(dataPos, _6)\n                            }\n                            ret := add(add(_1, i), _5)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        mstore(memPos, _5)\n                        return(memPos, sub(abi_encode_bytes(_1, add(memPos, _5)), memPos))\n                    }\n                    case 0x0e72cc06 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value := calldataload(_3)\n                        let _7 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _7)) { revert(_4, _4) }\n                        /// @src 3:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        sstore(/** @src 2:1426:1484  \"interchainSecurityModule = IInterchainSecurityModule(_ism)\" */ 0x01, /** @src 2:336:1493  \"contract TestRecipient is...\" */ or(and(sload(/** @src 2:1426:1484  \"interchainSecurityModule = IInterchainSecurityModule(_ism)\" */ 0x01), /** @src 2:336:1493  \"contract TestRecipient is...\" */ shl(160, 0xffffffffffffffffffffffff)), _7))\n                        return(_4, _4)\n                    }\n                    case 0x2113522a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_1 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value_1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x256fec88 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _8 := sload(/** @src 2:506:531  \"bytes32 public lastSender\" */ 2)\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _8)\n                        return(memPos_2, 32)\n                    }\n                    case 0x56d5d475 {\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                        let value_2 := calldataload(_3)\n                        let _9 := and(value_2, 0xffffffff)\n                        if iszero(eq(value_2, _9)) { revert(_4, _4) }\n                        let value_3 := calldataload(36)\n                        let offset := calldataload(68)\n                        let _10 := 0xffffffffffffffff\n                        if gt(offset, _10) { revert(_4, _4) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(_3, offset), calldatasize())\n                        /// @src 2:1015:1074  \"ReceivedMessage(_origin, _sender, msg.value, string(_data))\"\n                        let _11 := /** @src 2:336:1493  \"contract TestRecipient is...\" */ mload(_2)\n                        let _12 := 32\n                        mstore(_11, _12)\n                        /// @src 2:1015:1074  \"ReceivedMessage(_origin, _sender, msg.value, string(_data))\"\n                        log4(_11, sub(/** @src 2:336:1493  \"contract TestRecipient is...\" */ abi_encode_string_calldata(value2, value3, add(_11, _12)), /** @src 2:1015:1074  \"ReceivedMessage(_origin, _sender, msg.value, string(_data))\" */ _11), 0xecdc36fa3681f5d9c559dcbc399417db6f0ac0d81a78529685a1150265971d55, _9, value_3, /** @src 2:1049:1058  \"msg.value\" */ callvalue())\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        sstore(/** @src 2:1084:1104  \"lastSender = _sender\" */ 0x02, /** @src 2:336:1493  \"contract TestRecipient is...\" */ value_3)\n                        if gt(value3, _10)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        let _13 := extract_byte_array_length(sload(/** @src 2:1114:1130  \"lastData = _data\" */ 0x03))\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        if gt(_13, 31)\n                        {\n                            let _14 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let deleteStart := add(_14, shr(5, add(value3, 31)))\n                            if lt(value3, _12) { deleteStart := _14 }\n                            clear_storage_range_bytes1(deleteStart, add(_14, shr(5, add(_13, 31))))\n                        }\n                        let srcOffset := _4\n                        switch gt(value3, 31)\n                        case 1 {\n                            let loopEnd := and(value3, not(31))\n                            let dstPtr := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i_1 := _4\n                            for { } lt(i_1, loopEnd) { i_1 := add(i_1, _12) }\n                            {\n                                sstore(dstPtr, calldataload(add(value2, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, _12)\n                            }\n                            if lt(loopEnd, value3)\n                            {\n                                sstore(dstPtr, and(calldataload(add(value2, srcOffset)), not(shr(and(shl(/** @src 2:1114:1130  \"lastData = _data\" */ 0x03, /** @src 2:336:1493  \"contract TestRecipient is...\" */ value3), 248), not(0)))))\n                            }\n                            sstore(/** @src 2:1114:1130  \"lastData = _data\" */ 0x03, /** @src 2:336:1493  \"contract TestRecipient is...\" */ add(shl(1, value3), 1))\n                        }\n                        default {\n                            let value_4 := _4\n                            if value3\n                            {\n                                value_4 := calldataload(add(value2, srcOffset))\n                            }\n                            sstore(/** @src 2:1114:1130  \"lastData = _data\" */ 0x03, /** @src 2:336:1493  \"contract TestRecipient is...\" */ extract_used_part_and_set_length_of_short_byte_array(value_4, value3))\n                        }\n                        return(_4, _4)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 3:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        let _15 := sload(_4)\n                        sstore(_4, and(_15, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 2:336:1493  \"contract TestRecipient is...\" */ _4, _4, /** @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:336:1493  \"contract TestRecipient is...\" */ and(_15, sub(shl(160, 1), 1)), _4)\n                        return(_4, _4)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_5 := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, value_5)\n                        return(memPos_3, 32)\n                    }\n                    case 0xa4982fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(/** @src 2:596:625  \"string public lastCallMessage\" */ 5)\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr, length_1)\n                        let _16 := 0x20\n                        let _17 := 1\n                        switch and(slotValue_1, _17)\n                        case 0 {\n                            mstore(add(memPtr, _16), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr, shl(/** @src 2:596:625  \"string public lastCallMessage\" */ 5, /** @src 2:336:1493  \"contract TestRecipient is...\" */ iszero(iszero(length_1)))), _16)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 2:596:625  \"string public lastCallMessage\" */ 5)\n                            /// @src 2:336:1493  \"contract TestRecipient is...\"\n                            let dataPos_1 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let i_2 := _4\n                            for { } lt(i_2, length_1) { i_2 := add(i_2, _16) }\n                            {\n                                mstore(add(add(memPtr, i_2), _16), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _17)\n                            }\n                            ret_1 := add(add(memPtr, i_2), _16)\n                        }\n                        finalize_allocation(memPtr, sub(ret_1, memPtr))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _16)\n                        return(memPos_4, sub(abi_encode_bytes(memPtr, add(memPos_4, _16)), memPos_4))\n                    }\n                    case 0xde523cf3 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_6 := and(sload(/** @src 2:443:500  \"IInterchainSecurityModule public interchainSecurityModule\" */ 1), /** @src 2:336:1493  \"contract TestRecipient is...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, value_6)\n                        return(memPos_5, 32)\n                    }\n                    case 0xf07c1f47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let offset_1 := calldataload(36)\n                        let _18 := 0xffffffffffffffff\n                        if gt(offset_1, _18) { revert(_4, _4) }\n                        let value1, value2_1 := abi_decode_bytes_calldata(add(_3, offset_1), calldatasize())\n                        /// @src 2:1224:1265  \"ReceivedCall(msg.sender, amount, message)\"\n                        let _19 := /** @src 2:336:1493  \"contract TestRecipient is...\" */ mload(_2)\n                        mstore(_19, calldataload(_3))\n                        let _20 := 32\n                        mstore(add(_19, _20), _2)\n                        /// @src 2:1224:1265  \"ReceivedCall(msg.sender, amount, message)\"\n                        log2(_19, sub(/** @src 2:336:1493  \"contract TestRecipient is...\" */ abi_encode_string_calldata(value1, value2_1, add(_19, _2)), /** @src 2:1224:1265  \"ReceivedCall(msg.sender, amount, message)\" */ _19), 0x97d8367a1f39eb9e97f262fafbb05925c0bcfe120aaad7b9737cae34f749c206, /** @src 2:1237:1247  \"msg.sender\" */ caller())\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        sstore(_3, or(and(sload(_3), shl(160, 0xffffffffffffffffffffffff)), /** @src 2:1237:1247  \"msg.sender\" */ caller()))\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        if gt(value2_1, _18)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        let _21 := extract_byte_array_length(sload(/** @src 2:1308:1333  \"lastCallMessage = message\" */ 0x05))\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        if gt(_21, 31)\n                        {\n                            let _22 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let deleteStart_1 := add(_22, shr(/** @src 2:1308:1333  \"lastCallMessage = message\" */ 0x05, /** @src 2:336:1493  \"contract TestRecipient is...\" */ add(value2_1, 31)))\n                            if lt(value2_1, _20) { deleteStart_1 := _22 }\n                            clear_storage_range_bytes1(deleteStart_1, add(_22, shr(/** @src 2:1308:1333  \"lastCallMessage = message\" */ 0x05, /** @src 2:336:1493  \"contract TestRecipient is...\" */ add(_21, 31))))\n                        }\n                        let srcOffset_1 := _4\n                        switch gt(value2_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(value2_1, not(31))\n                            let dstPtr_1 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let i_3 := _4\n                            for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _20) }\n                            {\n                                sstore(dstPtr_1, calldataload(add(value1, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, _20)\n                            }\n                            if lt(loopEnd_1, value2_1)\n                            {\n                                sstore(dstPtr_1, and(calldataload(add(value1, srcOffset_1)), not(shr(and(shl(3, value2_1), 248), not(0)))))\n                            }\n                            sstore(/** @src 2:1308:1333  \"lastCallMessage = message\" */ 0x05, /** @src 2:336:1493  \"contract TestRecipient is...\" */ add(shl(1, value2_1), 1))\n                        }\n                        default {\n                            let value_7 := _4\n                            if value2_1\n                            {\n                                value_7 := calldataload(add(value1, srcOffset_1))\n                            }\n                            sstore(/** @src 2:1308:1333  \"lastCallMessage = message\" */ 0x05, /** @src 2:336:1493  \"contract TestRecipient is...\" */ extract_used_part_and_set_length_of_short_byte_array(value_7, value2_1))\n                        }\n                        return(_4, _4)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let value_8 := calldataload(_3)\n                        let _23 := sub(shl(160, 1), 1)\n                        let _24 := and(value_8, _23)\n                        if iszero(eq(value_8, _24)) { revert(_4, _4) }\n                        /// @src 3:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        if /** @src 3:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 2:336:1493  \"contract TestRecipient is...\" */ _24)\n                        {\n                            let memPtr_1 := mload(_2)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _3), 32)\n                            mstore(add(memPtr_1, 36), 38)\n                            mstore(add(memPtr_1, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_1, 100), \"ddress\")\n                            revert(memPtr_1, 132)\n                        }\n                        let _25 := sload(_4)\n                        sstore(_4, or(and(_25, shl(160, 0xffffffffffffffffffffffff)), _24))\n                        /// @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 2:336:1493  \"contract TestRecipient is...\" */ _4, _4, /** @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:336:1493  \"contract TestRecipient is...\" */ and(_25, _23), /** @src 3:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _24)\n                        /// @src 2:336:1493  \"contract TestRecipient is...\"\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_encode_string_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 2:336:1493  \"contract TestRecipient is...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                { sstore(start, 0) }\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            /// @ast-id 214 @src 3:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 2:336:1493  \"contract TestRecipient is...\"\n                let value := and(sload(/** @src 3:1273:1279  \"_owner\" */ 0x00), /** @src 2:336:1493  \"contract TestRecipient is...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 3:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 2:336:1493  \"contract TestRecipient is...\" */ value, /** @src 4:734:744  \"msg.sender\" */ caller()))\n                /// @src 2:336:1493  \"contract TestRecipient is...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c7c0042e5a24207ed41bf333a05a06b9a3873317c6b704015f4c209b8b9d3dd864736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000d7118856d7f68981f4f8d870c6dfde8526c5d4222c20d789482e3b8fb5",
        "factoryDependencies": {}
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "Ownable": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "previousOwner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "owner()": "8da5cb5b",
            "renounceOwnership()": "715018a6",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "Context": {
        "abi": [],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {}
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "contracts/interfaces/IInterchainSecurityModule.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            27
          ],
          "ISpecifiesInterchainSecurityModule": [
            34
          ]
        },
        "id": 35,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IInterchainSecurityModule",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 27,
            "linearizedBaseContracts": [
              27
            ],
            "name": "IInterchainSecurityModule",
            "nameLocation": "83:25:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "canonicalName": "IInterchainSecurityModule.Types",
                "id": 10,
                "members": [
                  {
                    "id": 2,
                    "name": "UNUSED",
                    "nameLocation": "136:6:0",
                    "nodeType": "EnumValue",
                    "src": "136:6:0"
                  },
                  {
                    "id": 3,
                    "name": "ROUTING",
                    "nameLocation": "152:7:0",
                    "nodeType": "EnumValue",
                    "src": "152:7:0"
                  },
                  {
                    "id": 4,
                    "name": "AGGREGATION",
                    "nameLocation": "169:11:0",
                    "nodeType": "EnumValue",
                    "src": "169:11:0"
                  },
                  {
                    "id": 5,
                    "name": "LEGACY_MULTISIG",
                    "nameLocation": "190:15:0",
                    "nodeType": "EnumValue",
                    "src": "190:15:0"
                  },
                  {
                    "id": 6,
                    "name": "MERKLE_ROOT_MULTISIG",
                    "nameLocation": "215:20:0",
                    "nodeType": "EnumValue",
                    "src": "215:20:0"
                  },
                  {
                    "id": 7,
                    "name": "MESSAGE_ID_MULTISIG",
                    "nameLocation": "245:19:0",
                    "nodeType": "EnumValue",
                    "src": "245:19:0"
                  },
                  {
                    "id": 8,
                    "name": "NULL",
                    "nameLocation": "274:4:0",
                    "nodeType": "EnumValue",
                    "src": "274:4:0"
                  },
                  {
                    "id": 9,
                    "name": "CCIP_READ",
                    "nameLocation": "330:9:0",
                    "nodeType": "EnumValue",
                    "src": "330:9:0"
                  }
                ],
                "name": "Types",
                "nameLocation": "120:5:0",
                "nodeType": "EnumDefinition",
                "src": "115:230:0"
              },
              {
                "documentation": {
                  "id": 11,
                  "nodeType": "StructuredDocumentation",
                  "src": "351:174:0",
                  "text": " @notice Returns an enum that represents the type of security model\n encoded by this ISM.\n @dev Relayers infer how to fetch and format metadata."
                },
                "functionSelector": "6465e69f",
                "id": 16,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "moduleType",
                "nameLocation": "539:10:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 12,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "549:2:0"
                },
                "returnParameters": {
                  "id": 15,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 14,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 16,
                      "src": "575:5:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "575:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "574:7:0"
                },
                "scope": 27,
                "src": "530:52:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 17,
                  "nodeType": "StructuredDocumentation",
                  "src": "588:398:0",
                  "text": " @notice Defines a security model responsible for verifying interchain\n messages based on the provided metadata.\n @param _metadata Off-chain metadata provided by a relayer, specific to\n the security model encoded by the module (e.g. validator signatures)\n @param _message Hyperlane encoded interchain message\n @return True if the message was verified"
                },
                "functionSelector": "f7e83aee",
                "id": 26,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "verify",
                "nameLocation": "1000:6:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 22,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 19,
                      "mutability": "mutable",
                      "name": "_metadata",
                      "nameLocation": "1031:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "1016:24:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1016:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "1065:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "1050:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1050:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1006:73:0"
                },
                "returnParameters": {
                  "id": 25,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 24,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "1098:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1098:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1097:6:0"
                },
                "scope": 27,
                "src": "991:113:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 35,
            "src": "73:1033:0",
            "usedErrors": []
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "ISpecifiesInterchainSecurityModule",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 34,
            "linearizedBaseContracts": [
              34
            ],
            "name": "ISpecifiesInterchainSecurityModule",
            "nameLocation": "1118:34:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "de523cf3",
                "id": 33,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "interchainSecurityModule",
                "nameLocation": "1168:24:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 28,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1192:2:0"
                },
                "returnParameters": {
                  "id": 32,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 33,
                      "src": "1242:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                        "typeString": "contract IInterchainSecurityModule"
                      },
                      "typeName": {
                        "id": 30,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29,
                          "name": "IInterchainSecurityModule",
                          "nameLocations": [
                            "1242:25:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 27,
                          "src": "1242:25:0"
                        },
                        "referencedDeclaration": 27,
                        "src": "1242:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1241:27:0"
                },
                "scope": 34,
                "src": "1159:110:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 35,
            "src": "1108:163:0",
            "usedErrors": []
          }
        ],
        "src": "46:1226:0"
      }
    },
    "contracts/interfaces/IMessageRecipient.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "contracts/interfaces/IMessageRecipient.sol",
        "exportedSymbols": {
          "IMessageRecipient": [
            46
          ]
        },
        "id": 47,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 36,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".11"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:25:1"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IMessageRecipient",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 46,
            "linearizedBaseContracts": [
              46
            ],
            "name": "IMessageRecipient",
            "nameLocation": "83:17:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "56d5d475",
                "id": 45,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "handle",
                "nameLocation": "116:6:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 43,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 38,
                      "mutability": "mutable",
                      "name": "_origin",
                      "nameLocation": "139:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "132:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 37,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "132:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "164:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "156:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "156:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "196:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "181:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "181:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "122:88:1"
                },
                "returnParameters": {
                  "id": 44,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "227:0:1"
                },
                "scope": 46,
                "src": "107:121:1",
                "stateMutability": "payable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 47,
            "src": "73:157:1",
            "usedErrors": []
          }
        ],
        "src": "46:185:1"
      }
    },
    "contracts/test/TestRecipient.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "contracts/test/TestRecipient.sol",
        "exportedSymbols": {
          "IInterchainSecurityModule": [
            27
          ],
          "IMessageRecipient": [
            46
          ],
          "ISpecifiesInterchainSecurityModule": [
            34
          ],
          "Ownable": [
            272
          ],
          "TestRecipient": [
            159
          ]
        },
        "id": 160,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 48,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:2"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
            "file": "@openzeppelin/contracts/access/Ownable.sol",
            "id": 50,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 160,
            "sourceUnit": 273,
            "src": "72:67:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 49,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 272,
                  "src": "80:7:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IMessageRecipient.sol",
            "file": "../interfaces/IMessageRecipient.sol",
            "id": 52,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 160,
            "sourceUnit": 47,
            "src": "141:70:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 51,
                  "name": "IMessageRecipient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "149:17:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "absolutePath": "contracts/interfaces/IInterchainSecurityModule.sol",
            "file": "../interfaces/IInterchainSecurityModule.sol",
            "id": 55,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 160,
            "sourceUnit": 35,
            "src": "212:122:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 53,
                  "name": "IInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 27,
                  "src": "220:25:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              },
              {
                "foreign": {
                  "id": 54,
                  "name": "ISpecifiesInterchainSecurityModule",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 34,
                  "src": "247:34:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 56,
                  "name": "Ownable",
                  "nameLocations": [
                    "366:7:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 272,
                  "src": "366:7:2"
                },
                "id": 57,
                "nodeType": "InheritanceSpecifier",
                "src": "366:7:2"
              },
              {
                "baseName": {
                  "id": 58,
                  "name": "IMessageRecipient",
                  "nameLocations": [
                    "379:17:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "379:17:2"
                },
                "id": 59,
                "nodeType": "InheritanceSpecifier",
                "src": "379:17:2"
              },
              {
                "baseName": {
                  "id": 60,
                  "name": "ISpecifiesInterchainSecurityModule",
                  "nameLocations": [
                    "402:34:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34,
                  "src": "402:34:2"
                },
                "id": 61,
                "nodeType": "InheritanceSpecifier",
                "src": "402:34:2"
              }
            ],
            "canonicalName": "TestRecipient",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 159,
            "linearizedBaseContracts": [
              159,
              34,
              46,
              272,
              302
            ],
            "name": "TestRecipient",
            "nameLocation": "345:13:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "baseFunctions": [
                  33
                ],
                "constant": false,
                "functionSelector": "de523cf3",
                "id": 64,
                "mutability": "mutable",
                "name": "interchainSecurityModule",
                "nameLocation": "476:24:2",
                "nodeType": "VariableDeclaration",
                "scope": 159,
                "src": "443:57:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                  "typeString": "contract IInterchainSecurityModule"
                },
                "typeName": {
                  "id": 63,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 62,
                    "name": "IInterchainSecurityModule",
                    "nameLocations": [
                      "443:25:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 27,
                    "src": "443:25:2"
                  },
                  "referencedDeclaration": 27,
                  "src": "443:25:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                    "typeString": "contract IInterchainSecurityModule"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "256fec88",
                "id": 66,
                "mutability": "mutable",
                "name": "lastSender",
                "nameLocation": "521:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 159,
                "src": "506:25:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 65,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "006e75ec",
                "id": 68,
                "mutability": "mutable",
                "name": "lastData",
                "nameLocation": "550:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 159,
                "src": "537:21:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 67,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "537:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "2113522a",
                "id": 70,
                "mutability": "mutable",
                "name": "lastCaller",
                "nameLocation": "580:10:2",
                "nodeType": "VariableDeclaration",
                "scope": 159,
                "src": "565:25:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 69,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "565:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "a4982fde",
                "id": 72,
                "mutability": "mutable",
                "name": "lastCallMessage",
                "nameLocation": "610:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 159,
                "src": "596:29:2",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 71,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "596:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "public"
              },
              {
                "anonymous": false,
                "eventSelector": "ecdc36fa3681f5d9c559dcbc399417db6f0ac0d81a78529685a1150265971d55",
                "id": 82,
                "name": "ReceivedMessage",
                "nameLocation": "638:15:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 81,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "origin",
                      "nameLocation": "678:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "663:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "663:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "710:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "694:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "694:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "742:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "726:21:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "726:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 80,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "764:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "757:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "757:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "653:124:2"
                },
                "src": "632:146:2"
              },
              {
                "anonymous": false,
                "eventSelector": "97d8367a1f39eb9e97f262fafbb05925c0bcfe120aaad7b9737cae34f749c206",
                "id": 90,
                "name": "ReceivedCall",
                "nameLocation": "790:12:2",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 89,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 84,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "819:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 90,
                      "src": "803:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "835:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 90,
                      "src": "827:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "827:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "850:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 90,
                      "src": "843:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 87,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "802:56:2"
                },
                "src": "784:75:2"
              },
              {
                "baseFunctions": [
                  45
                ],
                "body": {
                  "id": 119,
                  "nodeType": "Block",
                  "src": "1000:137:2",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 101,
                            "name": "_origin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1031:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 102,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1040:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 103,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1049:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1053:5:2",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1049:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 107,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "1067:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1060:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 105,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "1060:6:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1060:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 100,
                          "name": "ReceivedMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1015:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (uint32,bytes32,uint256,string memory)"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:59:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 110,
                      "nodeType": "EmitStatement",
                      "src": "1010:64:2"
                    },
                    {
                      "expression": {
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 111,
                          "name": "lastSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66,
                          "src": "1084:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 112,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "1097:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1084:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 114,
                      "nodeType": "ExpressionStatement",
                      "src": "1084:20:2"
                    },
                    {
                      "expression": {
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 115,
                          "name": "lastData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "1114:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 116,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "1125:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "src": "1114:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 118,
                      "nodeType": "ExpressionStatement",
                      "src": "1114:16:2"
                    }
                  ]
                },
                "functionSelector": "56d5d475",
                "id": 120,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "handle",
                "nameLocation": "874:6:2",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 98,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "991:8:2"
                },
                "parameters": {
                  "id": 97,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "_origin",
                      "nameLocation": "897:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "890:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "890:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "922:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "914:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "914:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 96,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "954:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "939:20:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "939:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "880:85:2"
                },
                "returnParameters": {
                  "id": 99,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1000:0:2"
                },
                "scope": 159,
                "src": "865:272:2",
                "stateMutability": "payable",
                "virtual": true,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 143,
                  "nodeType": "Block",
                  "src": "1209:131:2",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 128,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1237:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1241:6:2",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1237:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 130,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "1249:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 131,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "1257:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 127,
                          "name": "ReceivedCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1224:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (address,uint256,string memory)"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1224:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 133,
                      "nodeType": "EmitStatement",
                      "src": "1219:46:2"
                    },
                    {
                      "expression": {
                        "id": 137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 134,
                          "name": "lastCaller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "1275:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1288:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1292:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1288:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1275:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 138,
                      "nodeType": "ExpressionStatement",
                      "src": "1275:23:2"
                    },
                    {
                      "expression": {
                        "id": 141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 139,
                          "name": "lastCallMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "1308:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 140,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "1326:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "src": "1308:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 142,
                      "nodeType": "ExpressionStatement",
                      "src": "1308:25:2"
                    }
                  ]
                },
                "functionSelector": "f07c1f47",
                "id": 144,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "fooBar",
                "nameLocation": "1152:6:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 125,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 122,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1167:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1159:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 121,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1159:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 124,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1191:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 144,
                      "src": "1175:23:2",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 123,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1175:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1158:41:2"
                },
                "returnParameters": {
                  "id": 126,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1209:0:2"
                },
                "scope": 159,
                "src": "1143:197:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 157,
                  "nodeType": "Block",
                  "src": "1416:75:2",
                  "statements": [
                    {
                      "expression": {
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 151,
                          "name": "interchainSecurityModule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "1426:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                            "typeString": "contract IInterchainSecurityModule"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 153,
                              "name": "_ism",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "1479:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 152,
                            "name": "IInterchainSecurityModule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1453:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IInterchainSecurityModule_$27_$",
                              "typeString": "type(contract IInterchainSecurityModule)"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1453:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                            "typeString": "contract IInterchainSecurityModule"
                          }
                        },
                        "src": "1426:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterchainSecurityModule_$27",
                          "typeString": "contract IInterchainSecurityModule"
                        }
                      },
                      "id": 156,
                      "nodeType": "ExpressionStatement",
                      "src": "1426:58:2"
                    }
                  ]
                },
                "functionSelector": "0e72cc06",
                "id": 158,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 149,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 148,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1406:9:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 191,
                      "src": "1406:9:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1406:9:2"
                  }
                ],
                "name": "setInterchainSecurityModule",
                "nameLocation": "1355:27:2",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 147,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 146,
                      "mutability": "mutable",
                      "name": "_ism",
                      "nameLocation": "1391:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 158,
                      "src": "1383:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 145,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1383:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1382:14:2"
                },
                "returnParameters": {
                  "id": 150,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1416:0:2"
                },
                "scope": 159,
                "src": "1346:145:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 160,
            "src": "336:1157:2",
            "usedErrors": []
          }
        ],
        "src": "46:1448:2"
      }
    },
    "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "exportedSymbols": {
          "Context": [
            302
          ],
          "Ownable": [
            272
          ]
        },
        "id": 273,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 161,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "102:23:3"
          },
          {
            "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
            "file": "../utils/Context.sol",
            "id": 162,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 273,
            "sourceUnit": 303,
            "src": "127:30:3",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": true,
            "baseContracts": [
              {
                "baseName": {
                  "id": 164,
                  "name": "Context",
                  "nameLocations": [
                    "683:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 302,
                  "src": "683:7:3"
                },
                "id": 165,
                "nodeType": "InheritanceSpecifier",
                "src": "683:7:3"
              }
            ],
            "canonicalName": "Ownable",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "159:494:3",
              "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
            },
            "fullyImplemented": true,
            "id": 272,
            "linearizedBaseContracts": [
              272,
              302
            ],
            "name": "Ownable",
            "nameLocation": "672:7:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 167,
                "mutability": "mutable",
                "name": "_owner",
                "nameLocation": "713:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 272,
                "src": "697:22:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 166,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "697:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 173,
                "name": "OwnershipTransferred",
                "nameLocation": "732:20:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 172,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 169,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "previousOwner",
                      "nameLocation": "769:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "753:29:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 171,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "800:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 173,
                      "src": "784:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "784:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "752:57:3"
                },
                "src": "726:84:3"
              },
              {
                "body": {
                  "id": 182,
                  "nodeType": "Block",
                  "src": "926:49:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 178,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "955:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "955:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "936:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "936:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 181,
                      "nodeType": "ExpressionStatement",
                      "src": "936:32:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 174,
                  "nodeType": "StructuredDocumentation",
                  "src": "816:91:3",
                  "text": " @dev Initializes the contract setting the deployer as the initial owner."
                },
                "id": 183,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 175,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "923:2:3"
                },
                "returnParameters": {
                  "id": 176,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "926:0:3"
                },
                "scope": 272,
                "src": "912:63:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 190,
                  "nodeType": "Block",
                  "src": "1084:41:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 186,
                          "name": "_checkOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "1094:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1094:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 188,
                      "nodeType": "ExpressionStatement",
                      "src": "1094:13:3"
                    },
                    {
                      "id": 189,
                      "nodeType": "PlaceholderStatement",
                      "src": "1117:1:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 184,
                  "nodeType": "StructuredDocumentation",
                  "src": "981:77:3",
                  "text": " @dev Throws if called by any account other than the owner."
                },
                "id": 191,
                "name": "onlyOwner",
                "nameLocation": "1072:9:3",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 185,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1081:2:3"
                },
                "src": "1063:62:3",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 199,
                  "nodeType": "Block",
                  "src": "1256:30:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 197,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "1273:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 196,
                      "id": 198,
                      "nodeType": "Return",
                      "src": "1266:13:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 192,
                  "nodeType": "StructuredDocumentation",
                  "src": "1131:65:3",
                  "text": " @dev Returns the address of the current owner."
                },
                "functionSelector": "8da5cb5b",
                "id": 200,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1210:5:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 193,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1215:2:3"
                },
                "returnParameters": {
                  "id": 196,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 200,
                      "src": "1247:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1246:9:3"
                },
                "scope": 272,
                "src": "1201:85:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 213,
                  "nodeType": "Block",
                  "src": "1404:85:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 205,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 200,
                                "src": "1422:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1422:7:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 207,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 284,
                                "src": "1433:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 208,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1433:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1422:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1447:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            },
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "typeString": "literal_string \"Ownable: caller is not the owner\""
                            }
                          ],
                          "id": 204,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1414:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1414:68:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 212,
                      "nodeType": "ExpressionStatement",
                      "src": "1414:68:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 201,
                  "nodeType": "StructuredDocumentation",
                  "src": "1292:62:3",
                  "text": " @dev Throws if the sender is not the owner."
                },
                "id": 214,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_checkOwner",
                "nameLocation": "1368:11:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 202,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1379:2:3"
                },
                "returnParameters": {
                  "id": 203,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1404:0:3"
                },
                "scope": 272,
                "src": "1359:130:3",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 227,
                  "nodeType": "Block",
                  "src": "1878:47:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1915:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1907:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1907:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1907:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 220,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "1888:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:30:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 226,
                      "nodeType": "ExpressionStatement",
                      "src": "1888:30:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 215,
                  "nodeType": "StructuredDocumentation",
                  "src": "1495:324:3",
                  "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                },
                "functionSelector": "715018a6",
                "id": 228,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 218,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 217,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "1868:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 191,
                      "src": "1868:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "1868:9:3"
                  }
                ],
                "name": "renounceOwnership",
                "nameLocation": "1833:17:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 216,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1850:2:3"
                },
                "returnParameters": {
                  "id": 219,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1878:0:3"
                },
                "scope": 272,
                "src": "1824:101:3",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 250,
                  "nodeType": "Block",
                  "src": "2144:128:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 237,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "2162:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 240,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2182:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2174:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 238,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2174:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2174:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2162:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2186:40:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            },
                            "value": "Ownable: new owner is the zero address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "typeString": "literal_string \"Ownable: new owner is the zero address\""
                            }
                          ],
                          "id": 236,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2154:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2154:73:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 245,
                      "nodeType": "ExpressionStatement",
                      "src": "2154:73:3"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 247,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "2256:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 246,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "2237:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2237:28:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 249,
                      "nodeType": "ExpressionStatement",
                      "src": "2237:28:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 229,
                  "nodeType": "StructuredDocumentation",
                  "src": "1931:138:3",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                },
                "functionSelector": "f2fde38b",
                "id": 251,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 234,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 233,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2134:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 191,
                      "src": "2134:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2134:9:3"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "2083:17:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 232,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2109:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "2101:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2101:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2100:18:3"
                },
                "returnParameters": {
                  "id": 235,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2144:0:3"
                },
                "scope": 272,
                "src": "2074:198:3",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 270,
                  "nodeType": "Block",
                  "src": "2489:124:3",
                  "statements": [
                    {
                      "assignments": [
                        258
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 258,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "2507:8:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 270,
                          "src": "2499:16:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2499:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 260,
                      "initialValue": {
                        "id": 259,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2518:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2499:25:3"
                    },
                    {
                      "expression": {
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 261,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2534:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 262,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "2543:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2534:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 264,
                      "nodeType": "ExpressionStatement",
                      "src": "2534:17:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 266,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "2587:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 267,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "2597:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 265,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "2566:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2566:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 269,
                      "nodeType": "EmitStatement",
                      "src": "2561:45:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 252,
                  "nodeType": "StructuredDocumentation",
                  "src": "2278:143:3",
                  "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                },
                "id": 271,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "2435:18:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 255,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 254,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "2462:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 271,
                      "src": "2454:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 253,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2454:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2453:18:3"
                },
                "returnParameters": {
                  "id": 256,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2489:0:3"
                },
                "scope": 272,
                "src": "2426:187:3",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 273,
            "src": "654:1961:3",
            "usedErrors": []
          }
        ],
        "src": "102:2514:3"
      }
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "id": 4,
      "ast": {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "exportedSymbols": {
          "Context": [
            302
          ]
        },
        "id": 303,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 274,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "101:23:4"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "Context",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "126:496:4",
              "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
            },
            "fullyImplemented": true,
            "id": 302,
            "linearizedBaseContracts": [
              302
            ],
            "name": "Context",
            "nameLocation": "641:7:4",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 283,
                  "nodeType": "Block",
                  "src": "717:34:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 280,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "734:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "738:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "734:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 279,
                      "id": 282,
                      "nodeType": "Return",
                      "src": "727:17:4"
                    }
                  ]
                },
                "id": 284,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgSender",
                "nameLocation": "664:10:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 276,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "674:2:4"
                },
                "returnParameters": {
                  "id": 279,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 278,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 284,
                      "src": "708:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 277,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "708:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "707:9:4"
                },
                "scope": 302,
                "src": "655:96:4",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 292,
                  "nodeType": "Block",
                  "src": "824:32:4",
                  "statements": [
                    {
                      "expression": {
                        "expression": {
                          "id": 289,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "841:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "845:4:4",
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "841:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "functionReturnParameters": 288,
                      "id": 291,
                      "nodeType": "Return",
                      "src": "834:15:4"
                    }
                  ]
                },
                "id": 293,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_msgData",
                "nameLocation": "766:8:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 285,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "774:2:4"
                },
                "returnParameters": {
                  "id": 288,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 287,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 293,
                      "src": "808:14:4",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 286,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "807:16:4"
                },
                "scope": 302,
                "src": "757:99:4",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 300,
                  "nodeType": "Block",
                  "src": "934:25:4",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "30",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "functionReturnParameters": 297,
                      "id": 299,
                      "nodeType": "Return",
                      "src": "944:8:4"
                    }
                  ]
                },
                "id": 301,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_contextSuffixLength",
                "nameLocation": "871:20:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 294,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "891:2:4"
                },
                "returnParameters": {
                  "id": 297,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 296,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "925:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "925:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "924:9:4"
                },
                "scope": 302,
                "src": "862:97:4",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              }
            ],
            "scope": 303,
            "src": "623:338:4",
            "usedErrors": []
          }
        ],
        "src": "101:861:4"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}
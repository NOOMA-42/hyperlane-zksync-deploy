{
  "contracts": {
    "contracts/interfaces/ILiquidityLayerMessageRecipient.sol": {
      "ILiquidityLayerMessageRecipient": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_origin",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_sender",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_message",
                "type": "bytes"
              },
              {
                "internalType": "address",
                "name": "_token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "handleWithTokens",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"handleWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ILiquidityLayerMessageRecipient.sol\":\"ILiquidityLayerMessageRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/ILiquidityLayerMessageRecipient.sol\":{\"keccak256\":\"0x80801763e9a04d517e2febee9049b5d613ecae1b591080b0cbacd7397870b451\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c57690d73767171282f55dc2ed98606cae02fe021e20d486a6935f05c4a2067\",\"dweb:/ipfs/Qmde8nvEo8syRstVHnbcGy1X8BNfARVwxPqmas1hZQ7BiN\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "handleWithTokens(uint32,bytes32,bytes,address,uint256)": "352e7eff"
          }
        },
        "irOptimized": ""
      }
    },
    "contracts/test/TestTokenRecipient.sol": {
      "TestTokenRecipient": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "caller",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "name": "ReceivedCall",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint32",
                "name": "origin",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "sender",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "string",
                "name": "message",
                "type": "string"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "ReceivedMessage",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "name": "fooBar",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint32",
                "name": "_origin",
                "type": "uint32"
              },
              {
                "internalType": "bytes32",
                "name": "_sender",
                "type": "bytes32"
              },
              {
                "internalType": "bytes",
                "name": "_data",
                "type": "bytes"
              },
              {
                "internalType": "address",
                "name": "_token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "_amount",
                "type": "uint256"
              }
            ],
            "name": "handleWithTokens",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastAmount",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastCallMessage",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastCaller",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastData",
            "outputs": [
              {
                "internalType": "bytes",
                "name": "",
                "type": "bytes"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastSender",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "lastToken",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"ReceivedCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"origin\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedMessage\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"fooBar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_origin\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"handleWithTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCaller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastSender\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/TestTokenRecipient.sol\":\"TestTokenRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces/ILiquidityLayerMessageRecipient.sol\":{\"keccak256\":\"0x80801763e9a04d517e2febee9049b5d613ecae1b591080b0cbacd7397870b451\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2c57690d73767171282f55dc2ed98606cae02fe021e20d486a6935f05c4a2067\",\"dweb:/ipfs/Qmde8nvEo8syRstVHnbcGy1X8BNfARVwxPqmas1hZQ7BiN\"]},\"contracts/test/TestTokenRecipient.sol\":{\"keccak256\":\"0x344aa1ff727368a28373adf028f472d226d6469a1e2a800479ec48f428899d3e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://fe720f012bbcee4b27b371ac160de21502a9585e81a192fd4ce44f89c6079ccd\",\"dweb:/ipfs/Qmcw4kt2CChhQJ8UtgaHiSfVyApQtUeefvbanKnjoCYiVA\"]}},\"version\":1}",
          "solc_version": "0.8.19",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"TestTokenRecipient.sol:TestTokenRecipient\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[9]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_71\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_10\n\tsub.s!\t@CPI0_8[0], r2, r1\n\tjump.gt\t@.BB0_15\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.eq\t@.BB0_41\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ne\t@.BB0_71\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tadd\t4, r0, r1\n\tjump\t@.BB0_19\n.BB0_8:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_20\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_7[0], r2, r1\n\tjump.ne\t@.BB0_71\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tadd\t3, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.eq\t@.BB0_66\n\tsub.s!\t@CPI0_10[0], r2, r1\n\tjump.ne\t@.BB0_71\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tadd\t2, r0, r1\n.BB0_19:\n\tsload\tr1, r1\n\tand\t@CPI0_20[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_68\n\tsub.s!\t@CPI0_5[0], r2, r2\n\tjump.ne\t@.BB0_71\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r4\n\tjump.lt\t@.BB0_71\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_71\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.gt\t@.BB0_71\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_71\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r7\n\tsub.s!\t@CPI0_13[0], r7, r5\n\tjump.gt\t@.BB0_71\n\tadd\t36, r2, r8\n\tadd\tr7, r8, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_71\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tst.1\t128, r2\n\tadd\t64, r0, r2\n\tst.1\t160, r2\n\tcontext.caller\tr5\n\tand\t31, r7, r2\n\tadd\t32, r4, stack-[4]\n\tptr.add.s\tstack-[4], r1, r1\n\tst.1\t192, r7\n\tshr.s!\t5, r7, r3\n\tjump.eq\t@.BB0_31\n\tadd\tr0, r0, r4\n.BB0_30:\n\tshl.s\t5, r4, r9\n\tptr.add\tr1, r9, r6\n\tld\tr6, r6\n\tadd\t224, r9, r9\n\tst.1\tr9, r6\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_30\n.BB0_31:\n\tadd\tr8, r0, stack-[8]\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_33\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t224, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_33:\n\tadd\t224, r7, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\t31, r7, r3\n\tsub.s\t32, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tr3, r0, stack-[5]\n\tand\tr3, r1, r1\n\tadd\t@CPI0_14[0], r0, r3\n\tsub.s!\t@CPI0_14[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_15[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_16[0], r0, r4\n\tadd\tr7, r0, stack-[9]\n\tadd\tr5, r0, stack-[7]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r7\n\tand!\t1, r2, r1\n\tadd\tstack-[8], r0, r8\n\tjump.eq\t@.BB0_71\n\tadd\t4, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_17[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\t5, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_70\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_38\n\tadd\tstack-[5], r0, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_18[0], r3, r4\n\tadd\t@CPI0_18[0], r0, r3\n\tsub.s!\t32, r7, r5\n\tadd.ge\tr4, r0, r3\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_18[0], r2, r2\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_38\n.BB0_37:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_37\n.BB0_38:\n\tsub.s!\t31, r7, r2\n\tjump.le\t@.BB0_85\n\tand!\tstack-[6], r7, r3\n\tjump.ne\t@.BB0_88\n\tadd\t@CPI0_18[0], r0, r2\n\tadd\tr0, r0, r4\n\tjump\t@.BB0_90\n.BB0_41:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tadd\t1, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r1\n\tand\t127, r1, r4\n\tadd.eq\tr4, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\tsub!\tr5, r6, r6\n\tjump.ne\t@.BB0_70\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_75\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\t160, r1\n\tsub!\tr4, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_84\n.BB0_45:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t164, r3, r4\n\tjump.lt\t@.BB0_71\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_71\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_0[0], r2, r5\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_71\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r6\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.gt\t@.BB0_71\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_71\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r7\n\tld\tr7, r9\n\tsub.s!\t@CPI0_13[0], r9, r7\n\tjump.gt\t@.BB0_71\n\tadd\t36, r2, r7\n\tadd\tr9, r7, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_71\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_20[0], r2, r8\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tjump.gt\t@.BB0_71\n\tadd\tr7, r0, stack-[4]\n\tptr.add.s\t132, r1, r2\n\tld\tr2, r10\n\tadd\t96, r0, r2\n\tst.1\t128, r2\n\tand\t31, r9, r2\n\tadd\t32, r4, stack-[1]\n\tptr.add.s\tstack-[1], r1, r1\n\tst.1\t224, r9\n\tshr.s!\t5, r9, r3\n\tjump.eq\t@.BB0_56\n\tadd\tr0, r0, r4\n.BB0_55:\n\tshl.s\t5, r4, r11\n\tptr.add\tr1, r11, r7\n\tld\tr7, r7\n\tadd\t256, r11, r11\n\tst.1\tr11, r7\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r7\n\tjump.lt\t@.BB0_55\n.BB0_56:\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_58\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tshl.s\t3, r2, r2\n\tadd\t256, r3, r3\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_58:\n\tadd\t256, r9, r1\n\tst.1\tr1, r0\n\tst.1\t160, r8\n\tadd\tr10, r0, stack-[6]\n\tst.1\t192, r10\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\t31, r9, r3\n\tsub.s\t32, r0, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tand\tr3, r1, r1\n\tadd\t@CPI0_21[0], r0, r3\n\tsub.s!\t@CPI0_21[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_22[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tadd\t@CPI0_23[0], r0, r4\n\tadd\tr8, r0, stack-[7]\n\tadd\tr9, r0, stack-[9]\n\tadd\tr6, r0, stack-[8]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tadd\tstack-[9], r0, r6\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_71\n\tsstore\tr0, r3\n\tadd\t1, r0, r1\n\tsload\tr1, r3\n\tand!\t1, r3, r2\n\tshr.s\t1, r3, r4\n\tand\t127, r4, r2\n\tadd.ne\tr4, r0, r2\n\tsub.s!\t31, r2, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr3, r4, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_70\n\tsub.s!\t32, r2, r3\n\tjump.lt\t@.BB0_63\n\tadd\tstack-[2], r0, r3\n\tshr.s\t5, r3, r3\n\tadd\t@CPI0_24[0], r3, r4\n\tadd\t@CPI0_24[0], r0, r3\n\tsub.s!\t32, r6, r5\n\tadd.ge\tr4, r0, r3\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\t@CPI0_24[0], r2, r2\n\tsub!\tr3, r2, r4\n\tjump.ge\t@.BB0_63\n.BB0_62:\n\tsstore\tr3, r0\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_62\n.BB0_63:\n\tsub.s!\t31, r6, r2\n\tjump.le\t@.BB0_94\n\tand!\tstack-[3], r6, r3\n\tjump.ne\t@.BB0_97\n\tadd\t@CPI0_24[0], r0, r2\n\tadd\tr0, r0, r4\n\tjump\t@.BB0_99\n.BB0_66:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tsload\tr0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_19[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_68:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_71\n\tadd\t5, r0, r3\n\tsload\tr3, r2\n\tand!\t1, r2, r4\n\tshr.s\t1, r2, r5\n\tand\t127, r5, r1\n\tadd.ne\tr5, r0, r1\n\tsub.s!\t31, r1, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\txor\tr2, r5, r5\n\tand!\t1, r5, r5\n\tjump.eq\t@.BB0_72\n.BB0_70:\n\tadd\t@CPI0_25[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_71:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_72:\n\tst.1\t128, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB0_77\n\tst.1\t0, r3\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_78\n\tjump\t@.BB0_76\n.BB0_75:\n\tst.1\t0, r3\n\tsub.s!\t2, r2, r2\n\tjump.ge\t@.BB0_81\n.BB0_76:\n\tadd\t160, r0, r1\n\tjump\t@.BB0_84\n.BB0_77:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t192, r0, r1\n\tadd.eq\t160, r0, r1\n\tjump\t@.BB0_84\n.BB0_78:\n\tadd\t@CPI0_18[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_79:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_79\n\tjump\t@.BB0_83\n.BB0_81:\n\tadd\t@CPI0_24[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_82:\n\tadd\tr4, r0, r3\n\tsload\tr2, r4\n\tadd\t160, r3, r5\n\tst.1\tr5, r4\n\tadd\t1, r2, r2\n\tadd\t32, r3, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_82\n.BB0_83:\n\tadd\t192, r3, r1\n.BB0_84:\n\tsub.s\t128, r1, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[9], r0, r1\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_85:\n\tsub!\tr7, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_87\n\tadd\tstack-[4], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n.BB0_87:\n\tshl.s\t3, r7, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r3\n\tshl.s\t1, r7, r2\n\tjump\t@.BB0_93\n.BB0_88:\n\tadd\t@CPI0_18[0], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tr0, r0, r4\n.BB0_89:\n\tadd\tr4, r8, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsstore\tr2, r6\n\tadd\t1, r2, r2\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_89\n.BB0_90:\n\tsub!\tr3, r7, r3\n\tjump.ge\t@.BB0_92\n\tshl.s\t3, r7, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r5\n\tshr\tr5, r3, r3\n\txor\tr3, r5, r3\n\tadd\tr4, r8, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tand\tr4, r3, r3\n\tsstore\tr2, r3\n.BB0_92:\n\tadd\t1, r0, r2\n\tshl.s\t1, r7, r3\n.BB0_93:\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_94:\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_96\n\tadd\tstack-[1], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n.BB0_96:\n\tadd\tstack-[9], r0, r5\n\tshl.s\t3, r5, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r2\n\tshl.s\t1, r5, r3\n\tjump\t@.BB0_102\n.BB0_97:\n\tadd\t@CPI0_24[0], r0, r2\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tadd\tr0, r0, r4\n\tadd\tstack-[4], r0, r7\n.BB0_98:\n\tadd\tr4, r7, r6\n\tptr.add\tr5, r6, r6\n\tld\tr6, r6\n\tsstore\tr2, r6\n\tadd\t1, r2, r2\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB0_98\n.BB0_99:\n\tadd\tstack-[9], r0, r6\n\tsub!\tr3, r6, r3\n\tjump.ge\t@.BB0_101\n\tshl.s\t3, r6, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r5\n\tshr\tr5, r3, r3\n\txor\tr3, r5, r3\n\tadd\tstack-[4], r4, r4\n\tptr.add\tstack[@ptr_calldata], r4, r4\n\tld\tr4, r4\n\tand\tr4, r3, r3\n\tsstore\tr2, r3\n.BB0_101:\n\tshl.s\t1, r6, r2\n\tadd\tr1, r0, r3\n.BB0_102:\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_17[0], r2, r2\n\tor\tstack-[7], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[6], r0, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nfinalize_allocation:\n.func_begin1:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tjump.gt\t@.BB1_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB1_2\n\tst.1\t64, r1\n\tret\n.BB1_2:\n\tadd\t@CPI1_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_encode_bytes:\n.func_begin2:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB2_3\n\tadd\tr0, r0, r2\n.BB2_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB2_2\n.BB2_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end2:\n\n__farcall:\n.func_begin3:\n.tmp0:\n\tfar_call\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 892239614\nCPI0_3:\n\t.cell 2761437149\nCPI0_4:\n\t.cell 2761437150\nCPI0_5:\n\t.cell 4034666311\nCPI0_6:\n\t.cell 892239615\nCPI0_7:\n\t.cell 2191165145\nCPI0_8:\n\t.cell 628092039\nCPI0_9:\n\t.cell 628092040\nCPI0_10:\n\t.cell 796487504\nCPI0_11:\n\t.cell 7239148\nCPI0_12:\n\t.cell 554914346\nCPI0_13:\nCPI1_0:\n\t.cell 18446744073709551615\nCPI0_14:\n\t.cell 4294967199\nCPI0_15:\n\t.cell 904625697166532776746648320380374280103671762806220510288822025476863164416\nCPI0_16:\n\t.cell -47110834148546111573571167851317335392396609841570001832343179943194446413306\nCPI0_17:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_18:\n\t.cell 1546678032441257452667456735582814959992782782816731922691272282333561699760\nCPI0_19:\n\t.cell 2535301202817642044428229017600\nCPI0_20:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_21:\n\t.cell 4294967167\nCPI0_22:\n\t.cell 904625697166532776746648320380374280103671765341521710745280828470269575168\nCPI0_23:\n\t.cell -34909668385798175921263248514862225000657818553115740022838095616814961729469\nCPI0_24:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_25:\nCPI1_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_26:\nCPI1_2:\n\t.cell 2852213850513516153367582212096\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "fooBar(uint256,string)": "f07c1f47",
            "handleWithTokens(uint32,bytes32,bytes,address,uint256)": "352e7eff",
            "lastAmount()": "829a86d9",
            "lastCallMessage()": "a4982fde",
            "lastCaller()": "2113522a",
            "lastData()": "006e75ec",
            "lastSender()": "256fec88",
            "lastToken()": "2f796f50"
          }
        },
        "irOptimized": "/// @use-src 0:\"contracts/interfaces/ILiquidityLayerMessageRecipient.sol\", 1:\"contracts/test/TestTokenRecipient.sol\"\nobject \"TestTokenRecipient_120\" {\n    code {\n        {\n            /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"TestTokenRecipient_120_deployed\")\n            codecopy(_1, dataoffset(\"TestTokenRecipient_120_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"contracts/test/TestTokenRecipient.sol\"\n    object \"TestTokenRecipient_120_deployed\" {\n        code {\n            {\n                /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x006e75ec {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let ret := _4\n                        /// @src 1:272:293  \"bytes public lastData\"\n                        let _5 := 1\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        let slotValue := sload(/** @src 1:272:293  \"bytes public lastData\" */ _5)\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(_1, length)\n                        let _6 := 0x20\n                        switch and(slotValue, /** @src 1:272:293  \"bytes public lastData\" */ _5)\n                        case /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ 0 {\n                            mstore(add(_1, _6), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 1:272:293  \"bytes public lastData\" */ _5)\n                            /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                            let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i := _4\n                            for { } lt(i, length) { i := add(i, _6) }\n                            {\n                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                dataPos := add(dataPos, /** @src 1:272:293  \"bytes public lastData\" */ _5)\n                            }\n                            /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                            ret := add(add(_1, i), _6)\n                        }\n                        finalize_allocation(_1, sub(ret, _1))\n                        let memPos := mload(_2)\n                        mstore(memPos, _6)\n                        return(memPos, sub(abi_encode_bytes(_1, add(memPos, _6)), memPos))\n                    }\n                    case 0x2113522a {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, value)\n                        return(memPos_1, 32)\n                    }\n                    case 0x256fec88 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _7 := sload(_4)\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _7)\n                        return(memPos_2, 32)\n                    }\n                    case 0x2f796f50 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_1 := and(sload(/** @src 1:299:323  \"address public lastToken\" */ 2), /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, value_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x352e7eff {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                        let value_2 := calldataload(_3)\n                        let _8 := and(value_2, 0xffffffff)\n                        if iszero(eq(value_2, _8)) { revert(_4, _4) }\n                        let value_3 := calldataload(36)\n                        let offset := calldataload(68)\n                        let _9 := 0xffffffffffffffff\n                        if gt(offset, _9) { revert(_4, _4) }\n                        let value2, value3 := abi_decode_bytes_calldata(add(_3, offset), calldatasize())\n                        let value_4 := calldataload(100)\n                        let _10 := and(value_4, sub(shl(160, 1), 1))\n                        if iszero(eq(value_4, _10)) { revert(_4, _4) }\n                        let value_5 := calldataload(132)\n                        /// @src 1:870:935  \"ReceivedMessage(_origin, _sender, string(_data), _token, _amount)\"\n                        let _11 := /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ mload(_2)\n                        mstore(_11, 96)\n                        let tail := abi_encode_string_calldata(value2, value3, add(_11, 96))\n                        mstore(add(_11, 32), _10)\n                        mstore(add(_11, _2), value_5)\n                        /// @src 1:870:935  \"ReceivedMessage(_origin, _sender, string(_data), _token, _amount)\"\n                        log3(_11, sub(tail, _11), 0xb2d1d3f10ca4f0ff536aa13affafdca6f4d95b031fa3b1856fb722a27e8ee043, _8, value_3)\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        sstore(_4, value_3)\n                        if gt(value3, _9)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        let _12 := 1\n                        let _13 := extract_byte_array_length(sload(_12))\n                        if gt(_13, 31)\n                        {\n                            let _14 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let deleteStart := add(_14, shr(5, add(value3, 31)))\n                            if lt(value3, 32) { deleteStart := _14 }\n                            clear_storage_range_bytes1(deleteStart, add(_14, shr(5, add(_13, 31))))\n                        }\n                        let srcOffset := _4\n                        switch gt(value3, 31)\n                        case 1 {\n                            let loopEnd := and(value3, not(31))\n                            let dstPtr := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := _4\n                            for { } lt(i_1, loopEnd) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr, calldataload(add(value2, srcOffset)))\n                                dstPtr := add(dstPtr, _12)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, value3)\n                            {\n                                sstore(dstPtr, and(calldataload(add(value2, srcOffset)), not(shr(and(shl(3, value3), 248), not(0)))))\n                            }\n                            sstore(_12, add(shl(_12, value3), _12))\n                        }\n                        default {\n                            let value_6 := _4\n                            if value3\n                            {\n                                value_6 := calldataload(add(value2, srcOffset))\n                            }\n                            sstore(_12, extract_used_part_and_set_length_of_short_byte_array(value_6, value3))\n                        }\n                        sstore(/** @src 1:1001:1019  \"lastToken = _token\" */ 0x02, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ or(and(sload(/** @src 1:1001:1019  \"lastToken = _token\" */ 0x02), /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ shl(160, 0xffffffffffffffffffffffff)), _10))\n                        sstore(/** @src 1:1029:1049  \"lastAmount = _amount\" */ 0x03, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ value_5)\n                        return(_4, _4)\n                    }\n                    case 0x829a86d9 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _15 := sload(/** @src 1:329:354  \"uint256 public lastAmount\" */ 3)\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, _15)\n                        return(memPos_4, 32)\n                    }\n                    case 0xa4982fde {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let ret_1 := _4\n                        let slotValue_1 := sload(/** @src 1:392:421  \"string public lastCallMessage\" */ 5)\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        let length_1 := extract_byte_array_length(slotValue_1)\n                        mstore(memPtr, length_1)\n                        let _16 := 0x20\n                        let _17 := 1\n                        switch and(slotValue_1, _17)\n                        case 0 {\n                            mstore(add(memPtr, _16), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr, shl(/** @src 1:392:421  \"string public lastCallMessage\" */ 5, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ iszero(iszero(length_1)))), _16)\n                        }\n                        case 1 {\n                            mstore(_4, /** @src 1:392:421  \"string public lastCallMessage\" */ 5)\n                            /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                            let dataPos_1 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let i_2 := _4\n                            for { } lt(i_2, length_1) { i_2 := add(i_2, _16) }\n                            {\n                                mstore(add(add(memPtr, i_2), _16), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, _17)\n                            }\n                            ret_1 := add(add(memPtr, i_2), _16)\n                        }\n                        finalize_allocation(memPtr, sub(ret_1, memPtr))\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, _16)\n                        return(memPos_5, sub(abi_encode_bytes(memPtr, add(memPos_5, _16)), memPos_5))\n                    }\n                    case 0xf07c1f47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let offset_1 := calldataload(36)\n                        let _18 := 0xffffffffffffffff\n                        if gt(offset_1, _18) { revert(_4, _4) }\n                        let value1, value2_1 := abi_decode_bytes_calldata(add(_3, offset_1), calldatasize())\n                        /// @src 1:1143:1184  \"ReceivedCall(msg.sender, amount, message)\"\n                        let _19 := /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ mload(_2)\n                        mstore(_19, calldataload(_3))\n                        let _20 := 32\n                        mstore(add(_19, _20), _2)\n                        /// @src 1:1143:1184  \"ReceivedCall(msg.sender, amount, message)\"\n                        log2(_19, sub(/** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ abi_encode_string_calldata(value1, value2_1, add(_19, _2)), /** @src 1:1143:1184  \"ReceivedCall(msg.sender, amount, message)\" */ _19), 0x97d8367a1f39eb9e97f262fafbb05925c0bcfe120aaad7b9737cae34f749c206, /** @src 1:1156:1166  \"msg.sender\" */ caller())\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        sstore(_3, or(and(sload(_3), shl(160, 0xffffffffffffffffffffffff)), /** @src 1:1156:1166  \"msg.sender\" */ caller()))\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        if gt(value2_1, _18)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        let _21 := extract_byte_array_length(sload(/** @src 1:1227:1252  \"lastCallMessage = message\" */ 0x05))\n                        /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                        if gt(_21, 31)\n                        {\n                            let _22 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let deleteStart_1 := add(_22, shr(/** @src 1:1227:1252  \"lastCallMessage = message\" */ 0x05, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ add(value2_1, 31)))\n                            if lt(value2_1, _20) { deleteStart_1 := _22 }\n                            clear_storage_range_bytes1(deleteStart_1, add(_22, shr(/** @src 1:1227:1252  \"lastCallMessage = message\" */ 0x05, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ add(_21, 31))))\n                        }\n                        let srcOffset_1 := _4\n                        switch gt(value2_1, 31)\n                        case 1 {\n                            let loopEnd_1 := and(value2_1, not(31))\n                            let dstPtr_1 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                            let i_3 := _4\n                            for { } lt(i_3, loopEnd_1) { i_3 := add(i_3, _20) }\n                            {\n                                sstore(dstPtr_1, calldataload(add(value1, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, 1)\n                                srcOffset_1 := add(srcOffset_1, _20)\n                            }\n                            if lt(loopEnd_1, value2_1)\n                            {\n                                sstore(dstPtr_1, and(calldataload(add(value1, srcOffset_1)), not(shr(and(shl(3, value2_1), 248), not(0)))))\n                            }\n                            sstore(/** @src 1:1227:1252  \"lastCallMessage = message\" */ 0x05, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ add(shl(1, value2_1), 1))\n                        }\n                        default {\n                            let value_7 := _4\n                            if value2_1\n                            {\n                                value_7 := calldataload(add(value1, srcOffset_1))\n                            }\n                            sstore(/** @src 1:1227:1252  \"lastCallMessage = message\" */ 0x05, /** @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\" */ extract_used_part_and_set_length_of_short_byte_array(value_7, value2_1))\n                        }\n                        return(_4, _4)\n                    }\n                }\n                revert(0, 0)\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                length := calldataload(offset)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                arrayPos := add(offset, 0x20)\n                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n            }\n            function abi_encode_string_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 1:172:1261  \"contract TestTokenRecipient is ILiquidityLayerMessageRecipient {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function clear_storage_range_bytes1(start, end)\n            {\n                for { } lt(start, end) { start := add(start, 1) }\n                { sstore(start, 0) }\n            }\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122079890fef99cebaa28352f7d55cdc269c0335a2d7aadcfcc63b0aebe3af98717b64736f6c63430008130033\"\n    }\n}\n",
        "hash": "010000b11b9ffc26f8c7433ce5fbc5cbafdbade8570e7a24167eba94e8c9dfad",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "contracts/interfaces/ILiquidityLayerMessageRecipient.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "contracts/interfaces/ILiquidityLayerMessageRecipient.sol",
        "exportedSymbols": {
          "ILiquidityLayerMessageRecipient": [
            15
          ]
        },
        "id": 16,
        "license": "Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".13"
            ],
            "nodeType": "PragmaDirective",
            "src": "39:24:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "ILiquidityLayerMessageRecipient",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 15,
            "linearizedBaseContracts": [
              15
            ],
            "name": "ILiquidityLayerMessageRecipient",
            "nameLocation": "75:31:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "352e7eff",
                "id": 14,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "handleWithTokens",
                "nameLocation": "122:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 12,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 3,
                      "mutability": "mutable",
                      "name": "_origin",
                      "nameLocation": "155:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "148:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "148:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "180:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "172:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "172:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "212:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "197:23:0",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "197:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "238:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "230:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "230:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "262:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "254:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "138:137:0"
                },
                "returnParameters": {
                  "id": 13,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "284:0:0"
                },
                "scope": 15,
                "src": "113:172:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 16,
            "src": "65:222:0",
            "usedErrors": []
          }
        ],
        "src": "39:249:0"
      }
    },
    "contracts/test/TestTokenRecipient.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "contracts/test/TestTokenRecipient.sol",
        "exportedSymbols": {
          "ILiquidityLayerMessageRecipient": [
            15
          ],
          "TestTokenRecipient": [
            120
          ]
        },
        "id": 121,
        "license": "MIT OR Apache-2.0",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 17,
            "literals": [
              "solidity",
              ">=",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "46:24:1"
          },
          {
            "absolutePath": "contracts/interfaces/ILiquidityLayerMessageRecipient.sol",
            "file": "../interfaces/ILiquidityLayerMessageRecipient.sol",
            "id": 19,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 121,
            "sourceUnit": 16,
            "src": "72:98:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 18,
                  "name": "ILiquidityLayerMessageRecipient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15,
                  "src": "80:31:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 20,
                  "name": "ILiquidityLayerMessageRecipient",
                  "nameLocations": [
                    "203:31:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15,
                  "src": "203:31:1"
                },
                "id": 21,
                "nodeType": "InheritanceSpecifier",
                "src": "203:31:1"
              }
            ],
            "canonicalName": "TestTokenRecipient",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 120,
            "linearizedBaseContracts": [
              120,
              15
            ],
            "name": "TestTokenRecipient",
            "nameLocation": "181:18:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "functionSelector": "256fec88",
                "id": 23,
                "mutability": "mutable",
                "name": "lastSender",
                "nameLocation": "256:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "241:25:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 22,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "006e75ec",
                "id": 25,
                "mutability": "mutable",
                "name": "lastData",
                "nameLocation": "285:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "272:21:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 24,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "272:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "2f796f50",
                "id": 27,
                "mutability": "mutable",
                "name": "lastToken",
                "nameLocation": "314:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "299:24:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 26,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "299:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "829a86d9",
                "id": 29,
                "mutability": "mutable",
                "name": "lastAmount",
                "nameLocation": "344:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "329:25:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "329:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "2113522a",
                "id": 31,
                "mutability": "mutable",
                "name": "lastCaller",
                "nameLocation": "376:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "361:25:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 30,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "a4982fde",
                "id": 33,
                "mutability": "mutable",
                "name": "lastCallMessage",
                "nameLocation": "406:15:1",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "392:29:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 32,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "public"
              },
              {
                "anonymous": false,
                "eventSelector": "b2d1d3f10ca4f0ff536aa13affafdca6f4d95b031fa3b1856fb722a27e8ee043",
                "id": 45,
                "name": "ReceivedMessage",
                "nameLocation": "434:15:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 44,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 35,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "origin",
                      "nameLocation": "474:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "459:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 34,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "459:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 37,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "506:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "490:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "490:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "529:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "522:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "522:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 41,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "554:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "546:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 40,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "546:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "577:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 45,
                      "src": "569:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "569:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "449:140:1"
                },
                "src": "428:162:1"
              },
              {
                "anonymous": false,
                "eventSelector": "97d8367a1f39eb9e97f262fafbb05925c0bcfe120aaad7b9737cae34f749c206",
                "id": 53,
                "name": "ReceivedCall",
                "nameLocation": "602:12:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 52,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 47,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "caller",
                      "nameLocation": "631:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "615:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "615:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "647:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "639:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "639:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 51,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "662:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 53,
                      "src": "655:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 50,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "655:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "614:56:1"
                },
                "src": "596:75:1"
              },
              {
                "baseFunctions": [
                  14
                ],
                "body": {
                  "id": 94,
                  "nodeType": "Block",
                  "src": "855:201:1",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 68,
                            "name": "_origin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55,
                            "src": "886:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 69,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "895:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 72,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59,
                                "src": "911:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 71,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "904:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 70,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "904:6:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "904:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          {
                            "id": 74,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "919:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 75,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63,
                            "src": "927:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 67,
                          "name": "ReceivedMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "870:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint32_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (uint32,bytes32,string memory,address,uint256)"
                          }
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "870:65:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 77,
                      "nodeType": "EmitStatement",
                      "src": "865:70:1"
                    },
                    {
                      "expression": {
                        "id": 80,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 78,
                          "name": "lastSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "945:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 79,
                          "name": "_sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57,
                          "src": "958:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "945:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 81,
                      "nodeType": "ExpressionStatement",
                      "src": "945:20:1"
                    },
                    {
                      "expression": {
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 82,
                          "name": "lastData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "975:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 83,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59,
                          "src": "986:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "src": "975:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "id": 85,
                      "nodeType": "ExpressionStatement",
                      "src": "975:16:1"
                    },
                    {
                      "expression": {
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 86,
                          "name": "lastToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "1001:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 87,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1013:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1001:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 89,
                      "nodeType": "ExpressionStatement",
                      "src": "1001:18:1"
                    },
                    {
                      "expression": {
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 90,
                          "name": "lastAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1029:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 91,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1042:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1029:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 93,
                      "nodeType": "ExpressionStatement",
                      "src": "1029:20:1"
                    }
                  ]
                },
                "functionSelector": "352e7eff",
                "id": 95,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "handleWithTokens",
                "nameLocation": "686:16:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 65,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "846:8:1"
                },
                "parameters": {
                  "id": 64,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "_origin",
                      "nameLocation": "719:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "712:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "712:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "_sender",
                      "nameLocation": "744:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "736:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "736:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "_data",
                      "nameLocation": "776:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "761:20:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "761:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 61,
                      "mutability": "mutable",
                      "name": "_token",
                      "nameLocation": "799:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "791:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 60,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "791:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "823:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 95,
                      "src": "815:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "815:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "702:134:1"
                },
                "returnParameters": {
                  "id": 66,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "855:0:1"
                },
                "scope": 120,
                "src": "677:379:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 118,
                  "nodeType": "Block",
                  "src": "1128:131:1",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 103,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1156:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1160:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1156:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 105,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "1168:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 106,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "1176:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 102,
                          "name": "ReceivedCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "1143:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (address,uint256,string memory)"
                          }
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1143:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 108,
                      "nodeType": "EmitStatement",
                      "src": "1138:46:1"
                    },
                    {
                      "expression": {
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 109,
                          "name": "lastCaller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "1194:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1207:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1211:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1207:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1194:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 113,
                      "nodeType": "ExpressionStatement",
                      "src": "1194:23:1"
                    },
                    {
                      "expression": {
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 114,
                          "name": "lastCallMessage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1227:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 115,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "1245:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "src": "1227:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 117,
                      "nodeType": "ExpressionStatement",
                      "src": "1227:25:1"
                    }
                  ]
                },
                "functionSelector": "f07c1f47",
                "id": 119,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "fooBar",
                "nameLocation": "1071:6:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 100,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 97,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1086:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "1078:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 96,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1078:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "1110:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 119,
                      "src": "1094:23:1",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1094:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1077:41:1"
                },
                "returnParameters": {
                  "id": 101,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1128:0:1"
                },
                "scope": 120,
                "src": "1062:197:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 121,
            "src": "172:1089:1",
            "usedErrors": []
          }
        ],
        "src": "46:1216:1"
      }
    }
  },
  "errors": [],
  "version": "0.8.19",
  "long_version": "0.8.19+commit.7dd6d404.Darwin.appleclang",
  "zk_version": "1.4.1"
}